<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="133"><g><title>`0x7FFC3F1CAA30 (1 samples, 0.75%)</title><rect x="0.0000%" y="917" width="0.7519%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>`0x7FFC3F1D22F8 (1 samples, 0.75%)</title><rect x="0.7519%" y="869" width="0.7519%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="1.0019%" y="879.50"></text></g><g><title>`0x7FFC3F1BE722 (1 samples, 0.75%)</title><rect x="0.7519%" y="853" width="0.7519%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="1.0019%" y="863.50"></text></g><g><title>`0x7FFC3F1A4EE6 (1 samples, 0.75%)</title><rect x="0.7519%" y="837" width="0.7519%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="1.0019%" y="847.50"></text></g><g><title>`0x7FFC3F2122E4 (1 samples, 0.75%)</title><rect x="0.7519%" y="821" width="0.7519%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="1.0019%" y="831.50"></text></g><g><title>`0x7FFC3F193B68 (1 samples, 0.75%)</title><rect x="1.5038%" y="821" width="0.7519%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="1.7538%" y="831.50"></text></g><g><title>`0x7FFC3F193C57 (2 samples, 1.50%)</title><rect x="2.2556%" y="821" width="1.5038%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="2"/><text x="2.5056%" y="831.50"></text></g><g><title>`0x7FFC3F193C66 (3 samples, 2.26%)</title><rect x="3.7594%" y="821" width="2.2556%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="3"/><text x="4.0094%" y="831.50">`..</text></g><g><title>`0x7FFC3F193C6F (1 samples, 0.75%)</title><rect x="6.0150%" y="821" width="0.7519%" height="15" fill="rgb(218,30,26)" fg:x="8" fg:w="1"/><text x="6.2650%" y="831.50"></text></g><g><title>`0x7FFC3F193D67 (3 samples, 2.26%)</title><rect x="6.7669%" y="821" width="2.2556%" height="15" fill="rgb(220,122,19)" fg:x="9" fg:w="3"/><text x="7.0169%" y="831.50">`..</text></g><g><title>`0x7FFC3F1941CD (1 samples, 0.75%)</title><rect x="9.0226%" y="821" width="0.7519%" height="15" fill="rgb(250,228,42)" fg:x="12" fg:w="1"/><text x="9.2726%" y="831.50"></text></g><g><title>`0x7FFC3F194906 (1 samples, 0.75%)</title><rect x="9.0226%" y="805" width="0.7519%" height="15" fill="rgb(240,193,28)" fg:x="12" fg:w="1"/><text x="9.2726%" y="815.50"></text></g><g><title>`0x7FFC3F194CA0 (1 samples, 0.75%)</title><rect x="9.0226%" y="789" width="0.7519%" height="15" fill="rgb(216,20,37)" fg:x="12" fg:w="1"/><text x="9.2726%" y="799.50"></text></g><g><title>`0x7FFC3F180E8B (12 samples, 9.02%)</title><rect x="1.5038%" y="837" width="9.0226%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="12"/><text x="1.7538%" y="847.50">`0x7FFC3F180E..</text></g><g><title>`0x7FFC3F194246 (1 samples, 0.75%)</title><rect x="9.7744%" y="821" width="0.7519%" height="15" fill="rgb(217,207,13)" fg:x="13" fg:w="1"/><text x="10.0244%" y="831.50"></text></g><g><title>`0x7FFC3F174550 (1 samples, 0.75%)</title><rect x="9.7744%" y="805" width="0.7519%" height="15" fill="rgb(231,73,38)" fg:x="13" fg:w="1"/><text x="10.0244%" y="815.50"></text></g><g><title>`0x7FFC3F1746B5 (1 samples, 0.75%)</title><rect x="9.7744%" y="789" width="0.7519%" height="15" fill="rgb(225,20,46)" fg:x="13" fg:w="1"/><text x="10.0244%" y="799.50"></text></g><g><title>`0x7FFC3F174B62 (1 samples, 0.75%)</title><rect x="9.7744%" y="773" width="0.7519%" height="15" fill="rgb(210,31,41)" fg:x="13" fg:w="1"/><text x="10.0244%" y="783.50"></text></g><g><title>`0x7FFC3F19D9E8 (1 samples, 0.75%)</title><rect x="10.5263%" y="805" width="0.7519%" height="15" fill="rgb(221,200,47)" fg:x="14" fg:w="1"/><text x="10.7763%" y="815.50"></text></g><g><title>`0x7FFC3F1EA8EA (1 samples, 0.75%)</title><rect x="10.5263%" y="789" width="0.7519%" height="15" fill="rgb(226,26,5)" fg:x="14" fg:w="1"/><text x="10.7763%" y="799.50"></text></g><g><title>`0x7FFC3F1A16A8 (1 samples, 0.75%)</title><rect x="10.5263%" y="773" width="0.7519%" height="15" fill="rgb(249,33,26)" fg:x="14" fg:w="1"/><text x="10.7763%" y="783.50"></text></g><g><title>`0x7FFC3F1A192F (1 samples, 0.75%)</title><rect x="10.5263%" y="757" width="0.7519%" height="15" fill="rgb(235,183,28)" fg:x="14" fg:w="1"/><text x="10.7763%" y="767.50"></text></g><g><title>`0x7FFC3F1D9DD3 (1 samples, 0.75%)</title><rect x="10.5263%" y="741" width="0.7519%" height="15" fill="rgb(221,5,38)" fg:x="14" fg:w="1"/><text x="10.7763%" y="751.50"></text></g><g><title>`0x7FFC3F1DA570 (1 samples, 0.75%)</title><rect x="10.5263%" y="725" width="0.7519%" height="15" fill="rgb(247,18,42)" fg:x="14" fg:w="1"/><text x="10.7763%" y="735.50"></text></g><g><title>`0x7FFC3F20F5B4 (1 samples, 0.75%)</title><rect x="10.5263%" y="709" width="0.7519%" height="15" fill="rgb(241,131,45)" fg:x="14" fg:w="1"/><text x="10.7763%" y="719.50"></text></g><g><title>`0x7FFC3F180AFE (3 samples, 2.26%)</title><rect x="10.5263%" y="821" width="2.2556%" height="15" fill="rgb(249,31,29)" fg:x="14" fg:w="3"/><text x="10.7763%" y="831.50">`..</text></g><g><title>`0x7FFC3F19DB51 (2 samples, 1.50%)</title><rect x="11.2782%" y="805" width="1.5038%" height="15" fill="rgb(225,111,53)" fg:x="15" fg:w="2"/><text x="11.5282%" y="815.50"></text></g><g><title>`0x7FFC3F19A407 (2 samples, 1.50%)</title><rect x="11.2782%" y="789" width="1.5038%" height="15" fill="rgb(238,160,17)" fg:x="15" fg:w="2"/><text x="11.5282%" y="799.50"></text></g><g><title>`0x7FFC3F19AC49 (2 samples, 1.50%)</title><rect x="11.2782%" y="773" width="1.5038%" height="15" fill="rgb(214,148,48)" fg:x="15" fg:w="2"/><text x="11.5282%" y="783.50"></text></g><g><title>`0x7FFC3F20FB14 (2 samples, 1.50%)</title><rect x="11.2782%" y="757" width="1.5038%" height="15" fill="rgb(232,36,49)" fg:x="15" fg:w="2"/><text x="11.5282%" y="767.50"></text></g><g><title>`0x7FFC3F1806B6 (1 samples, 0.75%)</title><rect x="12.7820%" y="805" width="0.7519%" height="15" fill="rgb(209,103,24)" fg:x="17" fg:w="1"/><text x="13.0320%" y="815.50"></text></g><g><title>`0x7FFC3F20FCB4 (1 samples, 0.75%)</title><rect x="12.7820%" y="789" width="0.7519%" height="15" fill="rgb(229,88,8)" fg:x="17" fg:w="1"/><text x="13.0320%" y="799.50"></text></g><g><title>`0x7FFC3F18070F (1 samples, 0.75%)</title><rect x="13.5338%" y="805" width="0.7519%" height="15" fill="rgb(213,181,19)" fg:x="18" fg:w="1"/><text x="13.7838%" y="815.50"></text></g><g><title>`0x7FFC3F19C399 (1 samples, 0.75%)</title><rect x="13.5338%" y="789" width="0.7519%" height="15" fill="rgb(254,191,54)" fg:x="18" fg:w="1"/><text x="13.7838%" y="799.50"></text></g><g><title>`0x7FFC3F19AF85 (1 samples, 0.75%)</title><rect x="13.5338%" y="773" width="0.7519%" height="15" fill="rgb(241,83,37)" fg:x="18" fg:w="1"/><text x="13.7838%" y="783.50"></text></g><g><title>`0x7FFC3F19B4D7 (1 samples, 0.75%)</title><rect x="13.5338%" y="757" width="0.7519%" height="15" fill="rgb(233,36,39)" fg:x="18" fg:w="1"/><text x="13.7838%" y="767.50"></text></g><g><title>`0x7FFC3F20FD74 (1 samples, 0.75%)</title><rect x="13.5338%" y="741" width="0.7519%" height="15" fill="rgb(226,3,54)" fg:x="18" fg:w="1"/><text x="13.7838%" y="751.50"></text></g><g><title>`0x7FFC3F1A5986 (19 samples, 14.29%)</title><rect x="0.7519%" y="885" width="14.2857%" height="15" fill="rgb(245,192,40)" fg:x="1" fg:w="19"/><text x="1.0019%" y="895.50">`0x7FFC3F1A5986</text></g><g><title>`0x7FFC3F1D23CA (18 samples, 13.53%)</title><rect x="1.5038%" y="869" width="13.5338%" height="15" fill="rgb(238,167,29)" fg:x="2" fg:w="18"/><text x="1.7538%" y="879.50">`0x7FFC3F1D23CA</text></g><g><title>`0x7FFC3F180DCB (18 samples, 13.53%)</title><rect x="1.5038%" y="853" width="13.5338%" height="15" fill="rgb(232,182,51)" fg:x="2" fg:w="18"/><text x="1.7538%" y="863.50">`0x7FFC3F180DCB</text></g><g><title>`0x7FFC3F180F90 (6 samples, 4.51%)</title><rect x="10.5263%" y="837" width="4.5113%" height="15" fill="rgb(231,60,39)" fg:x="14" fg:w="6"/><text x="10.7763%" y="847.50">`0x7F..</text></g><g><title>`0x7FFC3F180BC8 (3 samples, 2.26%)</title><rect x="12.7820%" y="821" width="2.2556%" height="15" fill="rgb(208,69,12)" fg:x="17" fg:w="3"/><text x="13.0320%" y="831.50">`..</text></g><g><title>`0x7FFC3F18072D (1 samples, 0.75%)</title><rect x="14.2857%" y="805" width="0.7519%" height="15" fill="rgb(235,93,37)" fg:x="19" fg:w="1"/><text x="14.5357%" y="815.50"></text></g><g><title>`0x7FFC3F20F554 (1 samples, 0.75%)</title><rect x="14.2857%" y="789" width="0.7519%" height="15" fill="rgb(213,116,39)" fg:x="19" fg:w="1"/><text x="14.5357%" y="799.50"></text></g><g><title>`0x7FFC3F181082 (1 samples, 0.75%)</title><rect x="15.0376%" y="725" width="0.7519%" height="15" fill="rgb(222,207,29)" fg:x="20" fg:w="1"/><text x="15.2876%" y="735.50"></text></g><g><title>`0x7FFC3F19A407 (1 samples, 0.75%)</title><rect x="15.0376%" y="709" width="0.7519%" height="15" fill="rgb(206,96,30)" fg:x="20" fg:w="1"/><text x="15.2876%" y="719.50"></text></g><g><title>`0x7FFC3F19AC49 (1 samples, 0.75%)</title><rect x="15.0376%" y="693" width="0.7519%" height="15" fill="rgb(218,138,4)" fg:x="20" fg:w="1"/><text x="15.2876%" y="703.50"></text></g><g><title>`0x7FFC3F20FB14 (1 samples, 0.75%)</title><rect x="15.0376%" y="677" width="0.7519%" height="15" fill="rgb(250,191,14)" fg:x="20" fg:w="1"/><text x="15.2876%" y="687.50"></text></g><g><title>`0x7FFC3F18065C (1 samples, 0.75%)</title><rect x="15.7895%" y="709" width="0.7519%" height="15" fill="rgb(239,60,40)" fg:x="21" fg:w="1"/><text x="16.0395%" y="719.50"></text></g><g><title>`0x7FFC3F20F9D4 (1 samples, 0.75%)</title><rect x="15.7895%" y="693" width="0.7519%" height="15" fill="rgb(206,27,48)" fg:x="21" fg:w="1"/><text x="16.0395%" y="703.50"></text></g><g><title>`0x7FFC3F19C254 (1 samples, 0.75%)</title><rect x="16.5414%" y="693" width="0.7519%" height="15" fill="rgb(225,35,8)" fg:x="22" fg:w="1"/><text x="16.7914%" y="703.50"></text></g><g><title>`0x7FFC3F19C0CA (1 samples, 0.75%)</title><rect x="16.5414%" y="677" width="0.7519%" height="15" fill="rgb(250,213,24)" fg:x="22" fg:w="1"/><text x="16.7914%" y="687.50"></text></g><g><title>`0x7FFC3F19C4CC (1 samples, 0.75%)</title><rect x="16.5414%" y="661" width="0.7519%" height="15" fill="rgb(247,123,22)" fg:x="22" fg:w="1"/><text x="16.7914%" y="671.50"></text></g><g><title>`0x7FFC3F20F874 (1 samples, 0.75%)</title><rect x="16.5414%" y="645" width="0.7519%" height="15" fill="rgb(231,138,38)" fg:x="22" fg:w="1"/><text x="16.7914%" y="655.50"></text></g><g><title>`0x7FFC3F19C399 (1 samples, 0.75%)</title><rect x="17.2932%" y="693" width="0.7519%" height="15" fill="rgb(231,145,46)" fg:x="23" fg:w="1"/><text x="17.5432%" y="703.50"></text></g><g><title>`0x7FFC3F19AF85 (1 samples, 0.75%)</title><rect x="17.2932%" y="677" width="0.7519%" height="15" fill="rgb(251,118,11)" fg:x="23" fg:w="1"/><text x="17.5432%" y="687.50"></text></g><g><title>`0x7FFC3F19B4B5 (1 samples, 0.75%)</title><rect x="17.2932%" y="661" width="0.7519%" height="15" fill="rgb(217,147,25)" fg:x="23" fg:w="1"/><text x="17.5432%" y="671.50"></text></g><g><title>`0x7FFC3F19D4B1 (1 samples, 0.75%)</title><rect x="17.2932%" y="645" width="0.7519%" height="15" fill="rgb(247,81,37)" fg:x="23" fg:w="1"/><text x="17.5432%" y="655.50"></text></g><g><title>`0x7FFC3F193C66 (1 samples, 0.75%)</title><rect x="18.0451%" y="661" width="0.7519%" height="15" fill="rgb(209,12,38)" fg:x="24" fg:w="1"/><text x="18.2951%" y="671.50"></text></g><g><title>`0x7FFC3CDC8F91 (6 samples, 4.51%)</title><rect x="15.0376%" y="837" width="4.5113%" height="15" fill="rgb(227,1,9)" fg:x="20" fg:w="6"/><text x="15.2876%" y="847.50">`0x7F..</text></g><g><title>`0x7FFC3CDC1843 (6 samples, 4.51%)</title><rect x="15.0376%" y="821" width="4.5113%" height="15" fill="rgb(248,47,43)" fg:x="20" fg:w="6"/><text x="15.2876%" y="831.50">`0x7F..</text></g><g><title>`0x7FFC3C5C6452 (6 samples, 4.51%)</title><rect x="15.0376%" y="805" width="4.5113%" height="15" fill="rgb(221,10,30)" fg:x="20" fg:w="6"/><text x="15.2876%" y="815.50">`0x7F..</text></g><g><title>`0x7FFC3F19A25A (6 samples, 4.51%)</title><rect x="15.0376%" y="789" width="4.5113%" height="15" fill="rgb(210,229,1)" fg:x="20" fg:w="6"/><text x="15.2876%" y="799.50">`0x7F..</text></g><g><title>`0x7FFC3F188CAC (6 samples, 4.51%)</title><rect x="15.0376%" y="773" width="4.5113%" height="15" fill="rgb(222,148,37)" fg:x="20" fg:w="6"/><text x="15.2876%" y="783.50">`0x7F..</text></g><g><title>`0x7FFC3F1988D4 (6 samples, 4.51%)</title><rect x="15.0376%" y="757" width="4.5113%" height="15" fill="rgb(234,67,33)" fg:x="20" fg:w="6"/><text x="15.2876%" y="767.50">`0x7F..</text></g><g><title>`0x7FFC3F180EBF (6 samples, 4.51%)</title><rect x="15.0376%" y="741" width="4.5113%" height="15" fill="rgb(247,98,35)" fg:x="20" fg:w="6"/><text x="15.2876%" y="751.50">`0x7F..</text></g><g><title>`0x7FFC3F1810F0 (5 samples, 3.76%)</title><rect x="15.7895%" y="725" width="3.7594%" height="15" fill="rgb(247,138,52)" fg:x="21" fg:w="5"/><text x="16.0395%" y="735.50">`0x7..</text></g><g><title>`0x7FFC3F18070F (4 samples, 3.01%)</title><rect x="16.5414%" y="709" width="3.0075%" height="15" fill="rgb(213,79,30)" fg:x="22" fg:w="4"/><text x="16.7914%" y="719.50">`0x..</text></g><g><title>`0x7FFC3F19C3F8 (2 samples, 1.50%)</title><rect x="18.0451%" y="693" width="1.5038%" height="15" fill="rgb(246,177,23)" fg:x="24" fg:w="2"/><text x="18.2951%" y="703.50"></text></g><g><title>`0x7FFC3F194774 (2 samples, 1.50%)</title><rect x="18.0451%" y="677" width="1.5038%" height="15" fill="rgb(230,62,27)" fg:x="24" fg:w="2"/><text x="18.2951%" y="687.50"></text></g><g><title>`0x7FFC3F193D67 (1 samples, 0.75%)</title><rect x="18.7970%" y="661" width="0.7519%" height="15" fill="rgb(216,154,8)" fg:x="25" fg:w="1"/><text x="19.0470%" y="671.50"></text></g><g><title>`0x7FFC3CDBBAE8 (7 samples, 5.26%)</title><rect x="15.0376%" y="853" width="5.2632%" height="15" fill="rgb(244,35,45)" fg:x="20" fg:w="7"/><text x="15.2876%" y="863.50">`0x7FF..</text></g><g><title>`0x7FFC3CDC8FBB (1 samples, 0.75%)</title><rect x="19.5489%" y="837" width="0.7519%" height="15" fill="rgb(251,115,12)" fg:x="26" fg:w="1"/><text x="19.7989%" y="847.50"></text></g><g><title>`0x7FFC3C5F1FBD (1 samples, 0.75%)</title><rect x="19.5489%" y="821" width="0.7519%" height="15" fill="rgb(240,54,50)" fg:x="26" fg:w="1"/><text x="19.7989%" y="831.50"></text></g><g><title>`0x7FFC3F191D90 (1 samples, 0.75%)</title><rect x="19.5489%" y="805" width="0.7519%" height="15" fill="rgb(233,84,52)" fg:x="26" fg:w="1"/><text x="19.7989%" y="815.50"></text></g><g><title>`0x7FFC3F192457 (1 samples, 0.75%)</title><rect x="19.5489%" y="789" width="0.7519%" height="15" fill="rgb(207,117,47)" fg:x="26" fg:w="1"/><text x="19.7989%" y="799.50"></text></g><g><title>`0x7FFC3F1928B6 (1 samples, 0.75%)</title><rect x="19.5489%" y="773" width="0.7519%" height="15" fill="rgb(249,43,39)" fg:x="26" fg:w="1"/><text x="19.7989%" y="783.50"></text></g><g><title>`0x7FFC3CDBBCD9 (8 samples, 6.02%)</title><rect x="15.0376%" y="869" width="6.0150%" height="15" fill="rgb(209,38,44)" fg:x="20" fg:w="8"/><text x="15.2876%" y="879.50">`0x7FFC3..</text></g><g><title>`0x7FFC3CDBBB18 (1 samples, 0.75%)</title><rect x="20.3008%" y="853" width="0.7519%" height="15" fill="rgb(236,212,23)" fg:x="27" fg:w="1"/><text x="20.5508%" y="863.50"></text></g><g><title>`0x7FFC3DDE7FAB (1 samples, 0.75%)</title><rect x="20.3008%" y="837" width="0.7519%" height="15" fill="rgb(242,79,21)" fg:x="27" fg:w="1"/><text x="20.5508%" y="847.50"></text></g><g><title>`0x7FFC3F1C0C9D (1 samples, 0.75%)</title><rect x="20.3008%" y="821" width="0.7519%" height="15" fill="rgb(211,96,35)" fg:x="27" fg:w="1"/><text x="20.5508%" y="831.50"></text></g><g><title>`0x7FFC3F1C10A6 (1 samples, 0.75%)</title><rect x="20.3008%" y="805" width="0.7519%" height="15" fill="rgb(253,215,40)" fg:x="27" fg:w="1"/><text x="20.5508%" y="815.50"></text></g><g><title>`0x7FFC3F19869F (1 samples, 0.75%)</title><rect x="20.3008%" y="789" width="0.7519%" height="15" fill="rgb(211,81,21)" fg:x="27" fg:w="1"/><text x="20.5508%" y="799.50"></text></g><g><title>`0x7FFC3F0979AA (1 samples, 0.75%)</title><rect x="20.3008%" y="773" width="0.7519%" height="15" fill="rgb(208,190,38)" fg:x="27" fg:w="1"/><text x="20.5508%" y="783.50"></text></g><g><title>`0x7FFC3F0986C5 (1 samples, 0.75%)</title><rect x="20.3008%" y="757" width="0.7519%" height="15" fill="rgb(235,213,38)" fg:x="27" fg:w="1"/><text x="20.5508%" y="767.50"></text></g><g><title>`0x7FFC3F0925DF (1 samples, 0.75%)</title><rect x="20.3008%" y="741" width="0.7519%" height="15" fill="rgb(237,122,38)" fg:x="27" fg:w="1"/><text x="20.5508%" y="751.50"></text></g><g><title>`0x7FFC3F0928D5 (1 samples, 0.75%)</title><rect x="20.3008%" y="725" width="0.7519%" height="15" fill="rgb(244,218,35)" fg:x="27" fg:w="1"/><text x="20.5508%" y="735.50"></text></g><g><title>`0x7FFC3F0929BC (1 samples, 0.75%)</title><rect x="20.3008%" y="709" width="0.7519%" height="15" fill="rgb(240,68,47)" fg:x="27" fg:w="1"/><text x="20.5508%" y="719.50"></text></g><g><title>`0x7FFC3CDC4EAD (1 samples, 0.75%)</title><rect x="21.0526%" y="869" width="0.7519%" height="15" fill="rgb(210,16,53)" fg:x="28" fg:w="1"/><text x="21.3026%" y="879.50"></text></g><g><title>part1.exe`std::sys::windows::compat::init (1 samples, 0.75%)</title><rect x="21.0526%" y="853" width="0.7519%" height="15" fill="rgb(235,124,12)" fg:x="28" fg:w="1"/><text x="21.3026%" y="863.50"></text></g><g><title>part1.exe`__scrt_initialize_crt(__scrt_module_type) (1 samples, 0.75%)</title><rect x="21.8045%" y="869" width="0.7519%" height="15" fill="rgb(224,169,11)" fg:x="29" fg:w="1"/><text x="22.0545%" y="879.50"></text></g><g><title>part1.exe`tracing_core::subscriber::Subscriber::event_enabled&lt;tracing_core::subscriber::NoSubscriber&gt; (1 samples, 0.75%)</title><rect x="21.8045%" y="853" width="0.7519%" height="15" fill="rgb(250,166,2)" fg:x="29" fg:w="1"/><text x="22.0545%" y="863.50"></text></g><g><title>part1.exe`alloc::ffi::c_str::CString::new (1 samples, 0.75%)</title><rect x="22.5564%" y="741" width="0.7519%" height="15" fill="rgb(242,216,29)" fg:x="30" fg:w="1"/><text x="22.8064%" y="751.50"></text></g><g><title>part1.exe`std::sys::windows::thread::Thread::set_name (1 samples, 0.75%)</title><rect x="22.5564%" y="725" width="0.7519%" height="15" fill="rgb(230,116,27)" fg:x="30" fg:w="1"/><text x="22.8064%" y="735.50"></text></g><g><title>part1.exe`core::ffi::c_str::CStr::to_str (1 samples, 0.75%)</title><rect x="22.5564%" y="709" width="0.7519%" height="15" fill="rgb(228,99,48)" fg:x="30" fg:w="1"/><text x="22.8064%" y="719.50"></text></g><g><title>part1.exe`std::rt::lang_start_internal::closure$1 (2 samples, 1.50%)</title><rect x="22.5564%" y="773" width="1.5038%" height="15" fill="rgb(253,11,6)" fg:x="30" fg:w="2"/><text x="22.8064%" y="783.50"></text></g><g><title>part1.exe`std::rt::init (2 samples, 1.50%)</title><rect x="22.5564%" y="757" width="1.5038%" height="15" fill="rgb(247,143,39)" fg:x="30" fg:w="2"/><text x="22.8064%" y="767.50"></text></g><g><title>part1.exe`std::thread::Thread::new (1 samples, 0.75%)</title><rect x="23.3083%" y="741" width="0.7519%" height="15" fill="rgb(236,97,10)" fg:x="31" fg:w="1"/><text x="23.5583%" y="751.50"></text></g><g><title>part1.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.75%)</title><rect x="24.0602%" y="629" width="0.7519%" height="15" fill="rgb(233,208,19)" fg:x="32" fg:w="1"/><text x="24.3102%" y="639.50"></text></g><g><title>part1.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.75%)</title><rect x="24.0602%" y="613" width="0.7519%" height="15" fill="rgb(216,164,2)" fg:x="32" fg:w="1"/><text x="24.3102%" y="623.50"></text></g><g><title>part1.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.75%)</title><rect x="24.0602%" y="597" width="0.7519%" height="15" fill="rgb(220,129,5)" fg:x="32" fg:w="1"/><text x="24.3102%" y="607.50"></text></g><g><title>part1.exe`alloc::raw_vec::RawVec&lt;day_08::part1::Move,alloc::alloc::Global&gt;::current_memory (1 samples, 0.75%)</title><rect x="24.0602%" y="581" width="0.7519%" height="15" fill="rgb(242,17,10)" fg:x="32" fg:w="1"/><text x="24.3102%" y="591.50"></text></g><g><title>`0x7FFC3F1AAB11 (1 samples, 0.75%)</title><rect x="24.0602%" y="565" width="0.7519%" height="15" fill="rgb(242,107,0)" fg:x="32" fg:w="1"/><text x="24.3102%" y="575.50"></text></g><g><title>`0x7FFC3F1ABE44 (1 samples, 0.75%)</title><rect x="24.0602%" y="549" width="0.7519%" height="15" fill="rgb(251,28,31)" fg:x="32" fg:w="1"/><text x="24.3102%" y="559.50"></text></g><g><title>`0x7FFC3F1A9728 (1 samples, 0.75%)</title><rect x="24.0602%" y="533" width="0.7519%" height="15" fill="rgb(233,223,10)" fg:x="32" fg:w="1"/><text x="24.3102%" y="543.50"></text></g><g><title>`0x7FFC3F1B4B1B (1 samples, 0.75%)</title><rect x="24.0602%" y="517" width="0.7519%" height="15" fill="rgb(215,21,27)" fg:x="32" fg:w="1"/><text x="24.3102%" y="527.50"></text></g><g><title>`0x7FFC3F1B63B7 (1 samples, 0.75%)</title><rect x="24.0602%" y="501" width="0.7519%" height="15" fill="rgb(232,23,21)" fg:x="32" fg:w="1"/><text x="24.3102%" y="511.50"></text></g><g><title>part1.exe`day_08::part1::parse_instructions(ref$ (1 samples, 0.75%)</title><rect x="24.8120%" y="629" width="0.7519%" height="15" fill="rgb(244,5,23)" fg:x="33" fg:w="1"/><text x="25.0620%" y="639.50"></text></g><g><title>part1.exe`nom::internal::impl$12::parse(nom::multi::many1::closure_env$0&lt;ref$&lt;str$&gt;,day_08::part1::Move,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,day_08::part1::Move,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_08::part1::parse_instructions::closure_env$0,char&gt;,nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_08::part1::parse_instructions::closure_env$1,char&gt; &gt; &gt; &gt;*, ref$ (1 samples, 0.75%)</title><rect x="24.8120%" y="613" width="0.7519%" height="15" fill="rgb(226,81,46)" fg:x="33" fg:w="1"/><text x="25.0620%" y="623.50"></text></g><g><title>part1.exe`nom::multi::many1::closure$0(nom::multi::many1::closure_env$0&lt;ref$&lt;str$&gt;,day_08::part1::Move,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,day_08::part1::Move,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_08::part1::parse_instructions::closure_env$0,char&gt;,nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_08::part1::parse_instructions::closure_env$1,char&gt; &gt; &gt; &gt;*, ref$ (1 samples, 0.75%)</title><rect x="24.8120%" y="597" width="0.7519%" height="15" fill="rgb(247,70,30)" fg:x="33" fg:w="1"/><text x="25.0620%" y="607.50"></text></g><g><title>part1.exe`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,day_08::part1::Move,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,day_08::part1::Move,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_08::part1::parse_instructions::closure_env$0,char&gt;,nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_08::part1::parse_instructions::closure_env$1,char&gt; &gt; &gt; &gt;(nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,day_08::part1::Move,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_08::part1::parse_instructions::closure_env$0,char&gt;,nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_08::part1::parse_instructions::closure_env$1,char&gt; &gt; &gt;*, ref$ (1 samples, 0.75%)</title><rect x="24.8120%" y="581" width="0.7519%" height="15" fill="rgb(212,68,19)" fg:x="33" fg:w="1"/><text x="25.0620%" y="591.50"></text></g><g><title>`0x7FFC3BE7173D (1 samples, 0.75%)</title><rect x="25.5639%" y="421" width="0.7519%" height="15" fill="rgb(240,187,13)" fg:x="34" fg:w="1"/><text x="25.8139%" y="431.50"></text></g><g><title>`0x7FFC3BE71686 (1 samples, 0.75%)</title><rect x="25.5639%" y="405" width="0.7519%" height="15" fill="rgb(223,113,26)" fg:x="34" fg:w="1"/><text x="25.8139%" y="415.50"></text></g><g><title>`0x7FFC3CB75C40 (1 samples, 0.75%)</title><rect x="25.5639%" y="389" width="0.7519%" height="15" fill="rgb(206,192,2)" fg:x="34" fg:w="1"/><text x="25.8139%" y="399.50"></text></g><g><title>`0x7FFC3BE746FF (1 samples, 0.75%)</title><rect x="26.3158%" y="389" width="0.7519%" height="15" fill="rgb(241,108,4)" fg:x="35" fg:w="1"/><text x="26.5658%" y="399.50"></text></g><g><title>`0x7FFC3BE73E20 (1 samples, 0.75%)</title><rect x="26.3158%" y="373" width="0.7519%" height="15" fill="rgb(247,173,49)" fg:x="35" fg:w="1"/><text x="26.5658%" y="383.50"></text></g><g><title>`0x7FFC3BE762C9 (1 samples, 0.75%)</title><rect x="26.3158%" y="357" width="0.7519%" height="15" fill="rgb(224,114,35)" fg:x="35" fg:w="1"/><text x="26.5658%" y="367.50"></text></g><g><title>`0x7FFC3BE76413 (1 samples, 0.75%)</title><rect x="26.3158%" y="341" width="0.7519%" height="15" fill="rgb(245,159,27)" fg:x="35" fg:w="1"/><text x="26.5658%" y="351.50"></text></g><g><title>`0x7FFC3F20F454 (1 samples, 0.75%)</title><rect x="26.3158%" y="325" width="0.7519%" height="15" fill="rgb(245,172,44)" fg:x="35" fg:w="1"/><text x="26.5658%" y="335.50"></text></g><g><title>`0x7FFC3F19C254 (1 samples, 0.75%)</title><rect x="27.0677%" y="245" width="0.7519%" height="15" fill="rgb(236,23,11)" fg:x="36" fg:w="1"/><text x="27.3177%" y="255.50"></text></g><g><title>`0x7FFC3F19C0CA (1 samples, 0.75%)</title><rect x="27.0677%" y="229" width="0.7519%" height="15" fill="rgb(205,117,38)" fg:x="36" fg:w="1"/><text x="27.3177%" y="239.50"></text></g><g><title>`0x7FFC3F19C4CC (1 samples, 0.75%)</title><rect x="27.0677%" y="213" width="0.7519%" height="15" fill="rgb(237,72,25)" fg:x="36" fg:w="1"/><text x="27.3177%" y="223.50"></text></g><g><title>`0x7FFC3F20F874 (1 samples, 0.75%)</title><rect x="27.0677%" y="197" width="0.7519%" height="15" fill="rgb(244,70,9)" fg:x="36" fg:w="1"/><text x="27.3177%" y="207.50"></text></g><g><title>`0x7FFC3F1988B6 (2 samples, 1.50%)</title><rect x="27.0677%" y="293" width="1.5038%" height="15" fill="rgb(217,125,39)" fg:x="36" fg:w="2"/><text x="27.3177%" y="303.50"></text></g><g><title>`0x7FFC3F19DDA9 (2 samples, 1.50%)</title><rect x="27.0677%" y="277" width="1.5038%" height="15" fill="rgb(235,36,10)" fg:x="36" fg:w="2"/><text x="27.3177%" y="287.50"></text></g><g><title>`0x7FFC3F19CE29 (2 samples, 1.50%)</title><rect x="27.0677%" y="261" width="1.5038%" height="15" fill="rgb(251,123,47)" fg:x="36" fg:w="2"/><text x="27.3177%" y="271.50"></text></g><g><title>`0x7FFC3F19C3F8 (1 samples, 0.75%)</title><rect x="27.8195%" y="245" width="0.7519%" height="15" fill="rgb(221,13,13)" fg:x="37" fg:w="1"/><text x="28.0695%" y="255.50"></text></g><g><title>`0x7FFC3F19467A (1 samples, 0.75%)</title><rect x="27.8195%" y="229" width="0.7519%" height="15" fill="rgb(238,131,9)" fg:x="37" fg:w="1"/><text x="28.0695%" y="239.50"></text></g><g><title>`0x7FFC3CB90C77 (1 samples, 0.75%)</title><rect x="28.5714%" y="213" width="0.7519%" height="15" fill="rgb(211,50,8)" fg:x="38" fg:w="1"/><text x="28.8214%" y="223.50"></text></g><g><title>`0x7FFC3CB7BEAF (1 samples, 0.75%)</title><rect x="28.5714%" y="197" width="0.7519%" height="15" fill="rgb(245,182,24)" fg:x="38" fg:w="1"/><text x="28.8214%" y="207.50"></text></g><g><title>`0x7FFC3CB91AFC (1 samples, 0.75%)</title><rect x="28.5714%" y="181" width="0.7519%" height="15" fill="rgb(242,14,37)" fg:x="38" fg:w="1"/><text x="28.8214%" y="191.50"></text></g><g><title>part1.exe`core::ops::function::FnMut::call_mut(std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,std::hash::random::RandomState&gt; (**) (6 samples, 4.51%)</title><rect x="25.5639%" y="581" width="4.5113%" height="15" fill="rgb(246,228,12)" fg:x="34" fg:w="6"/><text x="25.8139%" y="591.50">part1..</text></g><g><title>part1.exe`std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,std::hash::random::RandomState&gt;::new (6 samples, 4.51%)</title><rect x="25.5639%" y="565" width="4.5113%" height="15" fill="rgb(213,55,15)" fg:x="34" fg:w="6"/><text x="25.8139%" y="575.50">part1..</text></g><g><title>part1.exe`std::collections::hash::map::impl$8::default (6 samples, 4.51%)</title><rect x="25.5639%" y="549" width="4.5113%" height="15" fill="rgb(209,9,3)" fg:x="34" fg:w="6"/><text x="25.8139%" y="559.50">part1..</text></g><g><title>part1.exe`std::hash::random::impl$5::default (6 samples, 4.51%)</title><rect x="25.5639%" y="533" width="4.5113%" height="15" fill="rgb(230,59,30)" fg:x="34" fg:w="6"/><text x="25.8139%" y="543.50">part1..</text></g><g><title>part1.exe`std::sys::common::thread_local::fast_local::Key&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_initialize&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;,std::hash::random::impl$0::new::KEYS::__getit::closure_env$0&gt; (6 samples, 4.51%)</title><rect x="25.5639%" y="517" width="4.5113%" height="15" fill="rgb(209,121,21)" fg:x="34" fg:w="6"/><text x="25.8139%" y="527.50">part1..</text></g><g><title>part1.exe`std::sys::common::thread_local::lazy::LazyKeyInner&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::initialize (6 samples, 4.51%)</title><rect x="25.5639%" y="501" width="4.5113%" height="15" fill="rgb(220,109,13)" fg:x="34" fg:w="6"/><text x="25.8139%" y="511.50">part1..</text></g><g><title>part1.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (6 samples, 4.51%)</title><rect x="25.5639%" y="485" width="4.5113%" height="15" fill="rgb(232,18,1)" fg:x="34" fg:w="6"/><text x="25.8139%" y="495.50">part1..</text></g><g><title>part1.exe`core::ptr::write(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (6 samples, 4.51%)</title><rect x="25.5639%" y="469" width="4.5113%" height="15" fill="rgb(215,41,42)" fg:x="34" fg:w="6"/><text x="25.8139%" y="479.50">part1..</text></g><g><title>part1.exe`std::sys::windows::rand::hashmap_random_keys (6 samples, 4.51%)</title><rect x="25.5639%" y="453" width="4.5113%" height="15" fill="rgb(224,123,36)" fg:x="34" fg:w="6"/><text x="25.8139%" y="463.50">part1..</text></g><g><title>part1.exe`std::sys::windows::c::nt_success (6 samples, 4.51%)</title><rect x="25.5639%" y="437" width="4.5113%" height="15" fill="rgb(240,125,3)" fg:x="34" fg:w="6"/><text x="25.8139%" y="447.50">part1..</text></g><g><title>`0x7FFC3BE7177C (5 samples, 3.76%)</title><rect x="26.3158%" y="421" width="3.7594%" height="15" fill="rgb(205,98,50)" fg:x="35" fg:w="5"/><text x="26.5658%" y="431.50">`0x7..</text></g><g><title>`0x7FFC3BE718D6 (5 samples, 3.76%)</title><rect x="26.3158%" y="405" width="3.7594%" height="15" fill="rgb(205,185,37)" fg:x="35" fg:w="5"/><text x="26.5658%" y="415.50">`0x7..</text></g><g><title>`0x7FFC3BE755D3 (4 samples, 3.01%)</title><rect x="27.0677%" y="389" width="3.0075%" height="15" fill="rgb(238,207,15)" fg:x="36" fg:w="4"/><text x="27.3177%" y="399.50">`0x..</text></g><g><title>`0x7FFC3BE77969 (4 samples, 3.01%)</title><rect x="27.0677%" y="373" width="3.0075%" height="15" fill="rgb(213,199,42)" fg:x="36" fg:w="4"/><text x="27.3177%" y="383.50">`0x..</text></g><g><title>`0x7FFC3BE77E85 (4 samples, 3.01%)</title><rect x="27.0677%" y="357" width="3.0075%" height="15" fill="rgb(235,201,11)" fg:x="36" fg:w="4"/><text x="27.3177%" y="367.50">`0x..</text></g><g><title>`0x7FFC3C5C6452 (4 samples, 3.01%)</title><rect x="27.0677%" y="341" width="3.0075%" height="15" fill="rgb(207,46,11)" fg:x="36" fg:w="4"/><text x="27.3177%" y="351.50">`0x..</text></g><g><title>`0x7FFC3F19A25A (4 samples, 3.01%)</title><rect x="27.0677%" y="325" width="3.0075%" height="15" fill="rgb(241,35,35)" fg:x="36" fg:w="4"/><text x="27.3177%" y="335.50">`0x..</text></g><g><title>`0x7FFC3F188CAC (4 samples, 3.01%)</title><rect x="27.0677%" y="309" width="3.0075%" height="15" fill="rgb(243,32,47)" fg:x="36" fg:w="4"/><text x="27.3177%" y="319.50">`0x..</text></g><g><title>`0x7FFC3F198940 (2 samples, 1.50%)</title><rect x="28.5714%" y="293" width="1.5038%" height="15" fill="rgb(247,202,23)" fg:x="38" fg:w="2"/><text x="28.8214%" y="303.50"></text></g><g><title>`0x7FFC3F19D62D (2 samples, 1.50%)</title><rect x="28.5714%" y="277" width="1.5038%" height="15" fill="rgb(219,102,11)" fg:x="38" fg:w="2"/><text x="28.8214%" y="287.50"></text></g><g><title>`0x7FFC3F1DCDFE (2 samples, 1.50%)</title><rect x="28.5714%" y="261" width="1.5038%" height="15" fill="rgb(243,110,44)" fg:x="38" fg:w="2"/><text x="28.8214%" y="271.50"></text></g><g><title>`0x7FFC3F1DD04D (2 samples, 1.50%)</title><rect x="28.5714%" y="245" width="1.5038%" height="15" fill="rgb(222,74,54)" fg:x="38" fg:w="2"/><text x="28.8214%" y="255.50"></text></g><g><title>`0x7FFC3F19869F (2 samples, 1.50%)</title><rect x="28.5714%" y="229" width="1.5038%" height="15" fill="rgb(216,99,12)" fg:x="38" fg:w="2"/><text x="28.8214%" y="239.50"></text></g><g><title>`0x7FFC3CB90CFA (1 samples, 0.75%)</title><rect x="29.3233%" y="213" width="0.7519%" height="15" fill="rgb(226,22,26)" fg:x="39" fg:w="1"/><text x="29.5733%" y="223.50"></text></g><g><title>`0x7FFC3CB76FB9 (1 samples, 0.75%)</title><rect x="29.3233%" y="197" width="0.7519%" height="15" fill="rgb(217,163,10)" fg:x="39" fg:w="1"/><text x="29.5733%" y="207.50"></text></g><g><title>`0x7FFC3CB76CA9 (1 samples, 0.75%)</title><rect x="29.3233%" y="181" width="0.7519%" height="15" fill="rgb(213,25,53)" fg:x="39" fg:w="1"/><text x="29.5733%" y="191.50"></text></g><g><title>`0x7FFC3CB76714 (1 samples, 0.75%)</title><rect x="29.3233%" y="165" width="0.7519%" height="15" fill="rgb(252,105,26)" fg:x="39" fg:w="1"/><text x="29.5733%" y="175.50"></text></g><g><title>`0x7FFC3F20F5B4 (1 samples, 0.75%)</title><rect x="29.3233%" y="149" width="0.7519%" height="15" fill="rgb(220,39,43)" fg:x="39" fg:w="1"/><text x="29.5733%" y="159.50"></text></g><g><title>part1.exe`day_08::part1::parse_maps::closure$0(day_08::part1::parse_maps::closure_env$0*, std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,std::hash::random::RandomState&gt;, tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$ (1 samples, 0.75%)</title><rect x="30.0752%" y="581" width="0.7519%" height="15" fill="rgb(229,68,48)" fg:x="40" fg:w="1"/><text x="30.3252%" y="591.50"></text></g><g><title>part1.exe`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;(ref$&lt;str$&gt;, tuple$&lt;ref$&lt;str$&gt;,ref$ (1 samples, 0.75%)</title><rect x="30.0752%" y="565" width="0.7519%" height="15" fill="rgb(252,8,32)" fg:x="40" fg:w="1"/><text x="30.3252%" y="575.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;, hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$ (1 samples, 0.75%)</title><rect x="30.0752%" y="549" width="0.7519%" height="15" fill="rgb(223,20,43)" fg:x="40" fg:w="1"/><text x="30.3252%" y="559.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve(unsigned long long, hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$ (1 samples, 0.75%)</title><rect x="30.0752%" y="533" width="0.7519%" height="15" fill="rgb(229,81,49)" fg:x="40" fg:w="1"/><text x="30.3252%" y="543.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,std::hash::random::RandomState&gt; &gt;(unsigned long long, hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$ (1 samples, 0.75%)</title><rect x="30.0752%" y="517" width="0.7519%" height="15" fill="rgb(236,28,36)" fg:x="40" fg:w="1"/><text x="30.3252%" y="527.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTableInner::reserve_rehash_inner(alloc::alloc::Global*, unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&gt;,usize&gt;,assoc$&lt;Output,u64&gt; &gt; &gt; &gt;, hashbrown::raw::Fallibility, hashbrown::raw::TableLayout, enum2$&lt;core::option::Option&lt;void (*)(ptr_mut$ (1 samples, 0.75%)</title><rect x="30.0752%" y="501" width="0.7519%" height="15" fill="rgb(249,185,26)" fg:x="40" fg:w="1"/><text x="30.3252%" y="511.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTableInner::resize_inner(alloc::alloc::Global*, unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&gt;,usize&gt;,assoc$ (1 samples, 0.75%)</title><rect x="30.0752%" y="485" width="0.7519%" height="15" fill="rgb(249,174,33)" fg:x="40" fg:w="1"/><text x="30.3252%" y="495.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTableInner::prepare_insert_slot (1 samples, 0.75%)</title><rect x="30.0752%" y="469" width="0.7519%" height="15" fill="rgb(233,201,37)" fg:x="40" fg:w="1"/><text x="30.3252%" y="479.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTableInner::find_insert_slot (1 samples, 0.75%)</title><rect x="30.0752%" y="453" width="0.7519%" height="15" fill="rgb(221,78,26)" fg:x="40" fg:w="1"/><text x="30.3252%" y="463.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTableInner::probe_seq (1 samples, 0.75%)</title><rect x="30.0752%" y="437" width="0.7519%" height="15" fill="rgb(250,127,30)" fg:x="40" fg:w="1"/><text x="30.3252%" y="447.50"></text></g><g><title>part1.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;ref$&lt;str$&gt; &gt; &gt;(std::hash::random::RandomState*, ref$ (1 samples, 0.75%)</title><rect x="30.0752%" y="421" width="0.7519%" height="15" fill="rgb(230,49,44)" fg:x="40" fg:w="1"/><text x="30.3252%" y="431.50"></text></g><g><title>part1.exe`std::hash::random::impl$4::finish (1 samples, 0.75%)</title><rect x="30.0752%" y="405" width="0.7519%" height="15" fill="rgb(229,67,23)" fg:x="40" fg:w="1"/><text x="30.3252%" y="415.50"></text></g><g><title>part1.exe`core::hash::sip::impl$4::finish (1 samples, 0.75%)</title><rect x="30.0752%" y="389" width="0.7519%" height="15" fill="rgb(249,83,47)" fg:x="40" fg:w="1"/><text x="30.3252%" y="399.50"></text></g><g><title>part1.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1 samples, 0.75%)</title><rect x="30.0752%" y="373" width="0.7519%" height="15" fill="rgb(215,43,3)" fg:x="40" fg:w="1"/><text x="30.3252%" y="383.50"></text></g><g><title>part1.exe`core::hash::sip::impl$8::d_rounds (1 samples, 0.75%)</title><rect x="30.0752%" y="357" width="0.7519%" height="15" fill="rgb(238,154,13)" fg:x="40" fg:w="1"/><text x="30.3252%" y="367.50"></text></g><g><title>part1.exe`core::num::impl$9::wrapping_add (1 samples, 0.75%)</title><rect x="30.0752%" y="341" width="0.7519%" height="15" fill="rgb(219,56,2)" fg:x="40" fg:w="1"/><text x="30.3252%" y="351.50"></text></g><g><title>part1.exe`day_08::part1::parse_maps(ref$ (8 samples, 6.02%)</title><rect x="25.5639%" y="629" width="6.0150%" height="15" fill="rgb(233,0,4)" fg:x="34" fg:w="8"/><text x="25.8139%" y="639.50">part1.ex..</text></g><g><title>part1.exe`nom::internal::impl$12::parse(nom::multi::fold_many1::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::terminated::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::terminated::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,day_08::part1::parse_maps::closure_env$0,std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,std::hash::random::RandomState&gt; (*)(),std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,std::hash::random::RandomState&gt; &gt;*, ref$ (8 samples, 6.02%)</title><rect x="25.5639%" y="613" width="6.0150%" height="15" fill="rgb(235,30,7)" fg:x="34" fg:w="8"/><text x="25.8139%" y="623.50">part1.ex..</text></g><g><title>part1.exe`nom::multi::fold_many1::closure$0(nom::multi::fold_many1::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::terminated::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::terminated::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,day_08::part1::parse_maps::closure_env$0,std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,std::hash::random::RandomState&gt; (*)(),std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,std::hash::random::RandomState&gt; &gt;*, ref$ (8 samples, 6.02%)</title><rect x="25.5639%" y="597" width="6.0150%" height="15" fill="rgb(250,79,13)" fg:x="34" fg:w="8"/><text x="25.8139%" y="607.50">part1.ex..</text></g><g><title>part1.exe`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::terminated::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::terminated::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;(nom::sequence::terminated::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::terminated::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;*, ref$ (1 samples, 0.75%)</title><rect x="30.8271%" y="581" width="0.7519%" height="15" fill="rgb(211,146,34)" fg:x="41" fg:w="1"/><text x="31.0771%" y="591.50"></text></g><g><title>part1.exe`nom::sequence::terminated::closure$0(nom::sequence::terminated::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::terminated::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;*, ref$ (1 samples, 0.75%)</title><rect x="30.8271%" y="565" width="0.7519%" height="15" fill="rgb(228,22,38)" fg:x="41" fg:w="1"/><text x="31.0771%" y="575.50"></text></g><g><title>part1.exe`nom::internal::impl$12::parse(nom::sequence::terminated::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, ref$ (1 samples, 0.75%)</title><rect x="30.8271%" y="549" width="0.7519%" height="15" fill="rgb(235,168,5)" fg:x="41" fg:w="1"/><text x="31.0771%" y="559.50"></text></g><g><title>part1.exe`nom::sequence::terminated::closure$0(nom::sequence::terminated::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, ref$ (1 samples, 0.75%)</title><rect x="30.8271%" y="533" width="0.7519%" height="15" fill="rgb(221,155,16)" fg:x="41" fg:w="1"/><text x="31.0771%" y="543.50"></text></g><g><title>part1.exe`nom::internal::impl$12::parse(nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;*, ref$ (1 samples, 0.75%)</title><rect x="30.8271%" y="517" width="0.7519%" height="15" fill="rgb(215,215,53)" fg:x="41" fg:w="1"/><text x="31.0771%" y="527.50"></text></g><g><title>part1.exe`nom::sequence::separated_pair::closure$0(nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::bytes::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;*, ref$ (1 samples, 0.75%)</title><rect x="30.8271%" y="501" width="0.7519%" height="15" fill="rgb(223,4,10)" fg:x="41" fg:w="1"/><text x="31.0771%" y="511.50"></text></g><g><title>part1.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$ (1 samples, 0.75%)</title><rect x="30.8271%" y="485" width="0.7519%" height="15" fill="rgb(234,103,6)" fg:x="41" fg:w="1"/><text x="31.0771%" y="495.50"></text></g><g><title>part1.exe`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::alpha1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;(ref$&lt;str$&gt;*, nom::character::complete::alpha1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.75%)</title><rect x="30.8271%" y="469" width="0.7519%" height="15" fill="rgb(227,97,0)" fg:x="41" fg:w="1"/><text x="31.0771%" y="479.50"></text></g><g><title>part1.exe`core::str::impl$0::find(ref$&lt;str$&gt;, nom::character::complete::alpha1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.75%)</title><rect x="30.8271%" y="453" width="0.7519%" height="15" fill="rgb(234,150,53)" fg:x="41" fg:w="1"/><text x="31.0771%" y="463.50"></text></g><g><title>part1.exe`core::str::pattern::impl$25::next_match(core::str::pattern::CharPredicateSearcher&lt;nom::character::complete::alpha1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.75%)</title><rect x="30.8271%" y="437" width="0.7519%" height="15" fill="rgb(228,201,54)" fg:x="41" fg:w="1"/><text x="31.0771%" y="447.50"></text></g><g><title>part1.exe`core::str::pattern::Searcher::next_match(core::str::pattern::MultiCharEqSearcher&lt;nom::character::complete::alpha1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.75%)</title><rect x="30.8271%" y="421" width="0.7519%" height="15" fill="rgb(222,22,37)" fg:x="41" fg:w="1"/><text x="31.0771%" y="431.50"></text></g><g><title>part1.exe`core::str::pattern::impl$9::next(core::str::pattern::MultiCharEqSearcher&lt;nom::character::complete::alpha1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.75%)</title><rect x="30.8271%" y="405" width="0.7519%" height="15" fill="rgb(237,53,32)" fg:x="41" fg:w="1"/><text x="31.0771%" y="415.50"></text></g><g><title>part1.exe`core::str::iter::impl$5::next (1 samples, 0.75%)</title><rect x="30.8271%" y="389" width="0.7519%" height="15" fill="rgb(233,25,53)" fg:x="41" fg:w="1"/><text x="31.0771%" y="399.50"></text></g><g><title>part1.exe`core::str::iter::impl$0::next (1 samples, 0.75%)</title><rect x="30.8271%" y="373" width="0.7519%" height="15" fill="rgb(210,40,34)" fg:x="41" fg:w="1"/><text x="31.0771%" y="383.50"></text></g><g><title>part1.exe`core::str::validations::next_code_point(core::slice::iter::Iter (1 samples, 0.75%)</title><rect x="30.8271%" y="357" width="0.7519%" height="15" fill="rgb(241,220,44)" fg:x="41" fg:w="1"/><text x="31.0771%" y="367.50"></text></g><g><title>part1.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 0.75%)</title><rect x="32.3308%" y="517" width="0.7519%" height="15" fill="rgb(235,28,35)" fg:x="43" fg:w="1"/><text x="32.5808%" y="527.50"></text></g><g><title>part1.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (1 samples, 0.75%)</title><rect x="32.3308%" y="501" width="0.7519%" height="15" fill="rgb(210,56,17)" fg:x="43" fg:w="1"/><text x="32.5808%" y="511.50"></text></g><g><title>part1.exe`core::hash::sip::impl$8::c_rounds (1 samples, 0.75%)</title><rect x="33.0827%" y="517" width="0.7519%" height="15" fill="rgb(224,130,29)" fg:x="44" fg:w="1"/><text x="33.3327%" y="527.50"></text></g><g><title>part1.exe`core::num::impl$9::wrapping_add (1 samples, 0.75%)</title><rect x="33.0827%" y="501" width="0.7519%" height="15" fill="rgb(235,212,8)" fg:x="44" fg:w="1"/><text x="33.3327%" y="511.50"></text></g><g><title>part1.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;str$&gt; &gt;(std::hash::random::RandomState*, ref$ (6 samples, 4.51%)</title><rect x="31.5789%" y="581" width="4.5113%" height="15" fill="rgb(223,33,50)" fg:x="42" fg:w="6"/><text x="31.8289%" y="591.50">part1..</text></g><g><title>part1.exe`std::hash::random::impl$4::finish (6 samples, 4.51%)</title><rect x="31.5789%" y="565" width="4.5113%" height="15" fill="rgb(219,149,13)" fg:x="42" fg:w="6"/><text x="31.8289%" y="575.50">part1..</text></g><g><title>part1.exe`core::hash::sip::impl$4::finish (6 samples, 4.51%)</title><rect x="31.5789%" y="549" width="4.5113%" height="15" fill="rgb(250,156,29)" fg:x="42" fg:w="6"/><text x="31.8289%" y="559.50">part1..</text></g><g><title>part1.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (6 samples, 4.51%)</title><rect x="31.5789%" y="533" width="4.5113%" height="15" fill="rgb(216,193,19)" fg:x="42" fg:w="6"/><text x="31.8289%" y="543.50">part1..</text></g><g><title>part1.exe`core::hash::sip::impl$8::d_rounds (3 samples, 2.26%)</title><rect x="33.8346%" y="517" width="2.2556%" height="15" fill="rgb(216,135,14)" fg:x="45" fg:w="3"/><text x="34.0846%" y="527.50">p..</text></g><g><title>part1.exe`core::num::impl$9::rotate_left (3 samples, 2.26%)</title><rect x="33.8346%" y="501" width="2.2556%" height="15" fill="rgb(241,47,5)" fg:x="45" fg:w="3"/><text x="34.0846%" y="511.50">p..</text></g><g><title>part1.exe`enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt; &gt; &gt;::expect(enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt; &gt; &gt;, ref$ (10 samples, 7.52%)</title><rect x="31.5789%" y="629" width="7.5188%" height="15" fill="rgb(233,42,35)" fg:x="42" fg:w="10"/><text x="31.8289%" y="639.50">part1.exe`..</text></g><g><title>part1.exe`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::get(ref$ (10 samples, 7.52%)</title><rect x="31.5789%" y="613" width="7.5188%" height="15" fill="rgb(231,13,6)" fg:x="42" fg:w="10"/><text x="31.8289%" y="623.50">part1.exe`..</text></g><g><title>part1.exe`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::get_inner(ref$ (10 samples, 7.52%)</title><rect x="31.5789%" y="597" width="7.5188%" height="15" fill="rgb(207,181,40)" fg:x="42" fg:w="10"/><text x="31.8289%" y="607.50">part1.exe`..</text></g><g><title>part1.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$ (4 samples, 3.01%)</title><rect x="36.0902%" y="581" width="3.0075%" height="15" fill="rgb(254,173,49)" fg:x="48" fg:w="4"/><text x="36.3402%" y="591.50">par..</text></g><g><title>part1.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$ (4 samples, 3.01%)</title><rect x="36.0902%" y="565" width="3.0075%" height="15" fill="rgb(221,1,38)" fg:x="48" fg:w="4"/><text x="36.3402%" y="575.50">par..</text></g><g><title>part1.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (4 samples, 3.01%)</title><rect x="36.0902%" y="549" width="3.0075%" height="15" fill="rgb(206,124,46)" fg:x="48" fg:w="4"/><text x="36.3402%" y="559.50">par..</text></g><g><title>part1.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;str$,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$ (4 samples, 3.01%)</title><rect x="36.0902%" y="533" width="3.0075%" height="15" fill="rgb(249,21,11)" fg:x="48" fg:w="4"/><text x="36.3402%" y="543.50">par..</text></g><g><title>part1.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;str$,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;*, tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$ (4 samples, 3.01%)</title><rect x="36.0902%" y="517" width="3.0075%" height="15" fill="rgb(222,201,40)" fg:x="48" fg:w="4"/><text x="36.3402%" y="527.50">par..</text></g><g><title>part1.exe`hashbrown::impl$0::equivalent(ref$&lt;str$&gt;, ref$ (4 samples, 3.01%)</title><rect x="36.0902%" y="501" width="3.0075%" height="15" fill="rgb(235,61,29)" fg:x="48" fg:w="4"/><text x="36.3402%" y="511.50">par..</text></g><g><title>part1.exe`core::cmp::impls::impl$9::eq(ref$&lt;str$&gt;*, ref$ (4 samples, 3.01%)</title><rect x="36.0902%" y="485" width="3.0075%" height="15" fill="rgb(219,207,3)" fg:x="48" fg:w="4"/><text x="36.3402%" y="495.50">par..</text></g><g><title>part1.exe`core::str::traits::impl$1::eq(ref$&lt;str$&gt;, ref$ (4 samples, 3.01%)</title><rect x="36.0902%" y="469" width="3.0075%" height="15" fill="rgb(222,56,46)" fg:x="48" fg:w="4"/><text x="36.3402%" y="479.50">par..</text></g><g><title>part1.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (4 samples, 3.01%)</title><rect x="36.0902%" y="453" width="3.0075%" height="15" fill="rgb(239,76,54)" fg:x="48" fg:w="4"/><text x="36.3402%" y="463.50">par..</text></g><g><title>part1.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (4 samples, 3.01%)</title><rect x="36.0902%" y="437" width="3.0075%" height="15" fill="rgb(231,124,27)" fg:x="48" fg:w="4"/><text x="36.3402%" y="447.50">par..</text></g><g><title>part1.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (4 samples, 3.01%)</title><rect x="36.0902%" y="421" width="3.0075%" height="15" fill="rgb(249,195,6)" fg:x="48" fg:w="4"/><text x="36.3402%" y="431.50">par..</text></g><g><title>`0x7FFC2B511245 (2 samples, 1.50%)</title><rect x="37.5940%" y="405" width="1.5038%" height="15" fill="rgb(237,174,47)" fg:x="50" fg:w="2"/><text x="37.8440%" y="415.50"></text></g><g><title>part1.exe`core::hash::impls::impl$5::hash(ref$ (1 samples, 0.75%)</title><rect x="39.0977%" y="565" width="0.7519%" height="15" fill="rgb(206,201,31)" fg:x="52" fg:w="1"/><text x="39.3477%" y="575.50"></text></g><g><title>part1.exe`core::hash::impls::impl$2::hash(ref$ (1 samples, 0.75%)</title><rect x="39.0977%" y="549" width="0.7519%" height="15" fill="rgb(231,57,52)" fg:x="52" fg:w="1"/><text x="39.3477%" y="559.50"></text></g><g><title>part1.exe`std::hash::random::impl$4::write_str(std::hash::random::DefaultHasher*, ref$ (1 samples, 0.75%)</title><rect x="39.0977%" y="533" width="0.7519%" height="15" fill="rgb(248,177,22)" fg:x="52" fg:w="1"/><text x="39.3477%" y="543.50"></text></g><g><title>part1.exe`core::hash::sip::impl$4::write_str(core::hash::sip::SipHasher13*, ref$ (1 samples, 0.75%)</title><rect x="39.0977%" y="517" width="0.7519%" height="15" fill="rgb(215,211,37)" fg:x="52" fg:w="1"/><text x="39.3477%" y="527.50"></text></g><g><title>part1.exe`core::hash::sip::impl$5::write_str(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$ (1 samples, 0.75%)</title><rect x="39.0977%" y="501" width="0.7519%" height="15" fill="rgb(241,128,51)" fg:x="52" fg:w="1"/><text x="39.3477%" y="511.50"></text></g><g><title>part1.exe`core::hash::Hasher::write_u8(core::hash::sip::Hasher (1 samples, 0.75%)</title><rect x="39.0977%" y="485" width="0.7519%" height="15" fill="rgb(227,165,31)" fg:x="52" fg:w="1"/><text x="39.3477%" y="495.50"></text></g><g><title>part1.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 0.75%)</title><rect x="39.0977%" y="469" width="0.7519%" height="15" fill="rgb(228,167,24)" fg:x="52" fg:w="1"/><text x="39.3477%" y="479.50"></text></g><g><title>part1.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;str$&gt; &gt;(std::hash::random::RandomState*, ref$ (2 samples, 1.50%)</title><rect x="39.0977%" y="581" width="1.5038%" height="15" fill="rgb(228,143,12)" fg:x="52" fg:w="2"/><text x="39.3477%" y="591.50"></text></g><g><title>part1.exe`std::hash::random::impl$4::finish (1 samples, 0.75%)</title><rect x="39.8496%" y="565" width="0.7519%" height="15" fill="rgb(249,149,8)" fg:x="53" fg:w="1"/><text x="40.0996%" y="575.50"></text></g><g><title>part1.exe`core::hash::sip::impl$4::finish (1 samples, 0.75%)</title><rect x="39.8496%" y="549" width="0.7519%" height="15" fill="rgb(243,35,44)" fg:x="53" fg:w="1"/><text x="40.0996%" y="559.50"></text></g><g><title>part1.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1 samples, 0.75%)</title><rect x="39.8496%" y="533" width="0.7519%" height="15" fill="rgb(246,89,9)" fg:x="53" fg:w="1"/><text x="40.0996%" y="543.50"></text></g><g><title>part1.exe`core::hash::sip::impl$8::d_rounds (1 samples, 0.75%)</title><rect x="39.8496%" y="517" width="0.7519%" height="15" fill="rgb(233,213,13)" fg:x="53" fg:w="1"/><text x="40.0996%" y="527.50"></text></g><g><title>part1.exe`std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,std::hash::random::RandomState&gt;::get(ref$ (3 samples, 2.26%)</title><rect x="39.0977%" y="629" width="2.2556%" height="15" fill="rgb(233,141,41)" fg:x="52" fg:w="3"/><text x="39.3477%" y="639.50">p..</text></g><g><title>part1.exe`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::get(ref$ (3 samples, 2.26%)</title><rect x="39.0977%" y="613" width="2.2556%" height="15" fill="rgb(239,167,4)" fg:x="52" fg:w="3"/><text x="39.3477%" y="623.50">p..</text></g><g><title>part1.exe`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::get_inner(ref$ (3 samples, 2.26%)</title><rect x="39.0977%" y="597" width="2.2556%" height="15" fill="rgb(209,217,16)" fg:x="52" fg:w="3"/><text x="39.3477%" y="607.50">p..</text></g><g><title>part1.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$ (1 samples, 0.75%)</title><rect x="40.6015%" y="581" width="0.7519%" height="15" fill="rgb(219,88,35)" fg:x="54" fg:w="1"/><text x="40.8515%" y="591.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$ (1 samples, 0.75%)</title><rect x="40.6015%" y="565" width="0.7519%" height="15" fill="rgb(220,193,23)" fg:x="54" fg:w="1"/><text x="40.8515%" y="575.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.75%)</title><rect x="40.6015%" y="549" width="0.7519%" height="15" fill="rgb(230,90,52)" fg:x="54" fg:w="1"/><text x="40.8515%" y="559.50"></text></g><g><title>part1.exe`hashbrown::raw::h2 (1 samples, 0.75%)</title><rect x="40.6015%" y="533" width="0.7519%" height="15" fill="rgb(252,106,19)" fg:x="54" fg:w="1"/><text x="40.8515%" y="543.50"></text></g><g><title>part1.exe`alloc::string::impl$67::write_str(alloc::string::String*, ref$ (1 samples, 0.75%)</title><rect x="41.3534%" y="309" width="0.7519%" height="15" fill="rgb(206,74,20)" fg:x="55" fg:w="1"/><text x="41.6034%" y="319.50"></text></g><g><title>part1.exe`alloc::string::String::push_str(ref$ (1 samples, 0.75%)</title><rect x="41.3534%" y="293" width="0.7519%" height="15" fill="rgb(230,138,44)" fg:x="55" fg:w="1"/><text x="41.6034%" y="303.50"></text></g><g><title>part1.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_from_slice(ref$&lt;slice2$ (1 samples, 0.75%)</title><rect x="41.3534%" y="277" width="0.7519%" height="15" fill="rgb(235,182,43)" fg:x="55" fg:w="1"/><text x="41.6034%" y="287.50"></text></g><g><title>part1.exe`alloc::vec::spec_extend::impl$4::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (1 samples, 0.75%)</title><rect x="41.3534%" y="261" width="0.7519%" height="15" fill="rgb(242,16,51)" fg:x="55" fg:w="1"/><text x="41.6034%" y="271.50"></text></g><g><title>part1.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (1 samples, 0.75%)</title><rect x="41.3534%" y="245" width="0.7519%" height="15" fill="rgb(248,9,4)" fg:x="55" fg:w="1"/><text x="41.6034%" y="255.50"></text></g><g><title>part1.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::len (1 samples, 0.75%)</title><rect x="41.3534%" y="229" width="0.7519%" height="15" fill="rgb(210,31,22)" fg:x="55" fg:w="1"/><text x="41.6034%" y="239.50"></text></g><g><title>part1.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (1 samples, 0.75%)</title><rect x="41.3534%" y="213" width="0.7519%" height="15" fill="rgb(239,54,39)" fg:x="55" fg:w="1"/><text x="41.6034%" y="223.50"></text></g><g><title>part1.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.75%)</title><rect x="41.3534%" y="197" width="0.7519%" height="15" fill="rgb(230,99,41)" fg:x="55" fg:w="1"/><text x="41.6034%" y="207.50"></text></g><g><title>part1.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.75%)</title><rect x="41.3534%" y="181" width="0.7519%" height="15" fill="rgb(253,106,12)" fg:x="55" fg:w="1"/><text x="41.6034%" y="191.50"></text></g><g><title>part1.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.75%)</title><rect x="41.3534%" y="165" width="0.7519%" height="15" fill="rgb(213,46,41)" fg:x="55" fg:w="1"/><text x="41.6034%" y="175.50"></text></g><g><title>part1.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (1 samples, 0.75%)</title><rect x="41.3534%" y="149" width="0.7519%" height="15" fill="rgb(215,133,35)" fg:x="55" fg:w="1"/><text x="41.6034%" y="159.50"></text></g><g><title>`0x7FFC3F1B1CAA (1 samples, 0.75%)</title><rect x="41.3534%" y="133" width="0.7519%" height="15" fill="rgb(213,28,5)" fg:x="55" fg:w="1"/><text x="41.6034%" y="143.50"></text></g><g><title>`0x7FFC3F1B1DE7 (1 samples, 0.75%)</title><rect x="41.3534%" y="117" width="0.7519%" height="15" fill="rgb(215,77,49)" fg:x="55" fg:w="1"/><text x="41.6034%" y="127.50"></text></g><g><title>`0x7FFC3F1B261E (1 samples, 0.75%)</title><rect x="41.3534%" y="101" width="0.7519%" height="15" fill="rgb(248,100,22)" fg:x="55" fg:w="1"/><text x="41.6034%" y="111.50"></text></g><g><title>`0x7FFC3F216004 (1 samples, 0.75%)</title><rect x="41.3534%" y="85" width="0.7519%" height="15" fill="rgb(208,67,9)" fg:x="55" fg:w="1"/><text x="41.6034%" y="95.50"></text></g><g><title>part1.exe`core::char::impl$11::next (1 samples, 0.75%)</title><rect x="42.1053%" y="309" width="0.7519%" height="15" fill="rgb(219,133,21)" fg:x="56" fg:w="1"/><text x="42.3553%" y="319.50"></text></g><g><title>part1.exe`core::escape::EscapeIterInner::next (1 samples, 0.75%)</title><rect x="42.1053%" y="293" width="0.7519%" height="15" fill="rgb(246,46,29)" fg:x="56" fg:w="1"/><text x="42.3553%" y="303.50"></text></g><g><title>part1.exe`core::iter::range::impl$6::next (1 samples, 0.75%)</title><rect x="42.1053%" y="277" width="0.7519%" height="15" fill="rgb(246,185,52)" fg:x="56" fg:w="1"/><text x="42.3553%" y="287.50"></text></g><g><title>part1.exe`core::iter::range::impl$5::spec_next (1 samples, 0.75%)</title><rect x="42.1053%" y="261" width="0.7519%" height="15" fill="rgb(252,136,11)" fg:x="56" fg:w="1"/><text x="42.3553%" y="271.50"></text></g><g><title>part1.exe`core::iter::range::impl$35::forward_unchecked (1 samples, 0.75%)</title><rect x="42.1053%" y="245" width="0.7519%" height="15" fill="rgb(219,138,53)" fg:x="56" fg:w="1"/><text x="42.3553%" y="255.50"></text></g><g><title>part1.exe`core::num::impl$6::unchecked_add (1 samples, 0.75%)</title><rect x="42.1053%" y="229" width="0.7519%" height="15" fill="rgb(211,51,23)" fg:x="56" fg:w="1"/><text x="42.3553%" y="239.50"></text></g><g><title>part1.exe`alloc::string::impl$67::write_char (1 samples, 0.75%)</title><rect x="42.1053%" y="213" width="0.7519%" height="15" fill="rgb(247,221,28)" fg:x="56" fg:w="1"/><text x="42.3553%" y="223.50"></text></g><g><title>part1.exe`alloc::string::String::push (1 samples, 0.75%)</title><rect x="42.1053%" y="197" width="0.7519%" height="15" fill="rgb(251,222,45)" fg:x="56" fg:w="1"/><text x="42.3553%" y="207.50"></text></g><g><title>part1.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (1 samples, 0.75%)</title><rect x="42.1053%" y="181" width="0.7519%" height="15" fill="rgb(217,162,53)" fg:x="56" fg:w="1"/><text x="42.3553%" y="191.50"></text></g><g><title>part1.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::reserve_for_push&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.75%)</title><rect x="42.1053%" y="165" width="0.7519%" height="15" fill="rgb(229,93,14)" fg:x="56" fg:w="1"/><text x="42.3553%" y="175.50"></text></g><g><title>part1.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.75%)</title><rect x="42.1053%" y="149" width="0.7519%" height="15" fill="rgb(209,67,49)" fg:x="56" fg:w="1"/><text x="42.3553%" y="159.50"></text></g><g><title>part1.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.75%)</title><rect x="42.1053%" y="133" width="0.7519%" height="15" fill="rgb(213,87,29)" fg:x="56" fg:w="1"/><text x="42.3553%" y="143.50"></text></g><g><title>part1.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.75%)</title><rect x="42.1053%" y="117" width="0.7519%" height="15" fill="rgb(205,151,52)" fg:x="56" fg:w="1"/><text x="42.3553%" y="127.50"></text></g><g><title>part1.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (1 samples, 0.75%)</title><rect x="42.1053%" y="101" width="0.7519%" height="15" fill="rgb(253,215,39)" fg:x="56" fg:w="1"/><text x="42.3553%" y="111.50"></text></g><g><title>`0x7FFC3F1B1CAA (1 samples, 0.75%)</title><rect x="42.1053%" y="85" width="0.7519%" height="15" fill="rgb(221,220,41)" fg:x="56" fg:w="1"/><text x="42.3553%" y="95.50"></text></g><g><title>`0x7FFC3F1B1DE7 (1 samples, 0.75%)</title><rect x="42.1053%" y="69" width="0.7519%" height="15" fill="rgb(218,133,21)" fg:x="56" fg:w="1"/><text x="42.3553%" y="79.50"></text></g><g><title>`0x7FFC3F1B261E (1 samples, 0.75%)</title><rect x="42.1053%" y="53" width="0.7519%" height="15" fill="rgb(221,193,43)" fg:x="56" fg:w="1"/><text x="42.3553%" y="63.50"></text></g><g><title>`0x7FFC3F21602A (1 samples, 0.75%)</title><rect x="42.1053%" y="37" width="0.7519%" height="15" fill="rgb(240,128,52)" fg:x="56" fg:w="1"/><text x="42.3553%" y="47.50"></text></g><g><title>part1.exe`tracing_subscriber::fmt::fmt_layer::impl$11::on_new_span&lt;tracing_subscriber::registry::sharded::Registry,tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,std::io::stdio::Stdout (*)()&gt;(tracing_subscriber::fmt::fmt_layer::Layer&lt;tracing_subscriber::registry::sharded::Registry,tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,std::io::stdio::Stdout (*)()&gt;*, tracing_core::span::Attributes*, tracing_core::span::Id*, tracing_subscriber::layer::context::Context (6 samples, 4.51%)</title><rect x="41.3534%" y="501" width="4.5113%" height="15" fill="rgb(253,114,12)" fg:x="55" fg:w="6"/><text x="41.6034%" y="511.50">part1..</text></g><g><title>part1.exe`tracing_subscriber::fmt::format::impl$8::format_fields (6 samples, 4.51%)</title><rect x="41.3534%" y="485" width="4.5113%" height="15" fill="rgb(215,223,47)" fg:x="55" fg:w="6"/><text x="41.6034%" y="495.50">part1..</text></g><g><title>part1.exe`tracing_subscriber::fmt::format::impl$14::finish (6 samples, 4.51%)</title><rect x="41.3534%" y="469" width="4.5113%" height="15" fill="rgb(248,225,23)" fg:x="55" fg:w="6"/><text x="41.6034%" y="479.50">part1..</text></g><g><title>part1.exe`tracing_core::span::Attributes::record(ref_mut$&lt;dyn$ (6 samples, 4.51%)</title><rect x="41.3534%" y="453" width="4.5113%" height="15" fill="rgb(250,108,0)" fg:x="55" fg:w="6"/><text x="41.6034%" y="463.50">part1..</text></g><g><title>part1.exe`tracing_core::field::ValueSet::record(ref_mut$&lt;dyn$ (6 samples, 4.51%)</title><rect x="41.3534%" y="437" width="4.5113%" height="15" fill="rgb(228,208,7)" fg:x="55" fg:w="6"/><text x="41.6034%" y="447.50">part1..</text></g><g><title>part1.exe`tracing_core::field::impl$16::record(ref$&lt;dyn$&lt;tracing_core::field::Value&gt; &gt;*, tracing_core::field::Field*, ref_mut$&lt;dyn$ (6 samples, 4.51%)</title><rect x="41.3534%" y="421" width="4.5113%" height="15" fill="rgb(244,45,10)" fg:x="55" fg:w="6"/><text x="41.6034%" y="431.50">part1..</text></g><g><title>part1.exe`tracing_core::field::impl$16::record&lt;str$&gt;(ref$&lt;str$&gt;*, tracing_core::field::Field*, ref_mut$&lt;dyn$ (6 samples, 4.51%)</title><rect x="41.3534%" y="405" width="4.5113%" height="15" fill="rgb(207,125,25)" fg:x="55" fg:w="6"/><text x="41.6034%" y="415.50">part1..</text></g><g><title>part1.exe`tracing_subscriber::fmt::format::impl$13::record_str(tracing_subscriber::fmt::format::DefaultVisitor*, tracing_core::field::Field*, ref$ (6 samples, 4.51%)</title><rect x="41.3534%" y="389" width="4.5113%" height="15" fill="rgb(210,195,18)" fg:x="55" fg:w="6"/><text x="41.6034%" y="399.50">part1..</text></g><g><title>part1.exe`tracing_subscriber::fmt::format::impl$13::record_debug(tracing_subscriber::fmt::format::DefaultVisitor*, tracing_core::field::Field*, ref$&lt;dyn$ (6 samples, 4.51%)</title><rect x="41.3534%" y="373" width="4.5113%" height="15" fill="rgb(249,80,12)" fg:x="55" fg:w="6"/><text x="41.6034%" y="383.50">part1..</text></g><g><title>part1.exe`tracing_subscriber::fmt::format::Writer::write_fmt (6 samples, 4.51%)</title><rect x="41.3534%" y="357" width="4.5113%" height="15" fill="rgb(221,65,9)" fg:x="55" fg:w="6"/><text x="41.6034%" y="367.50">part1..</text></g><g><title>part1.exe`core::fmt::write (6 samples, 4.51%)</title><rect x="41.3534%" y="341" width="4.5113%" height="15" fill="rgb(235,49,36)" fg:x="55" fg:w="6"/><text x="41.6034%" y="351.50">part1..</text></g><g><title>part1.exe`core::fmt::impl$14::fmt (6 samples, 4.51%)</title><rect x="41.3534%" y="325" width="4.5113%" height="15" fill="rgb(225,32,20)" fg:x="55" fg:w="6"/><text x="41.6034%" y="335.50">part1..</text></g><g><title>part1.exe`core::char::impl$12::len (4 samples, 3.01%)</title><rect x="42.8571%" y="309" width="3.0075%" height="15" fill="rgb(215,141,46)" fg:x="57" fg:w="4"/><text x="43.1071%" y="319.50">par..</text></g><g><title>part1.exe`core::char::methods::impl$0::escape_debug_ext (4 samples, 3.01%)</title><rect x="42.8571%" y="293" width="3.0075%" height="15" fill="rgb(250,160,47)" fg:x="57" fg:w="4"/><text x="43.1071%" y="303.50">par..</text></g><g><title>part1.exe`core::unicode::unicode_data::grapheme_extend::lookup (3 samples, 2.26%)</title><rect x="43.6090%" y="277" width="2.2556%" height="15" fill="rgb(216,222,40)" fg:x="58" fg:w="3"/><text x="43.8590%" y="287.50">p..</text></g><g><title>part1.exe`core::unicode::unicode_data::skip_search (3 samples, 2.26%)</title><rect x="43.6090%" y="261" width="2.2556%" height="15" fill="rgb(234,217,39)" fg:x="58" fg:w="3"/><text x="43.8590%" y="271.50">p..</text></g><g><title>part1.exe`core::slice::impl$0::binary_search_by_key (3 samples, 2.26%)</title><rect x="43.6090%" y="245" width="2.2556%" height="15" fill="rgb(207,178,40)" fg:x="58" fg:w="3"/><text x="43.8590%" y="255.50">p..</text></g><g><title>part1.exe`core::slice::impl$0::binary_search_by (3 samples, 2.26%)</title><rect x="43.6090%" y="229" width="2.2556%" height="15" fill="rgb(221,136,13)" fg:x="58" fg:w="3"/><text x="43.8590%" y="239.50">p..</text></g><g><title>part1.exe`core::slice::impl$0::binary_search_by_key::closure$0 (1 samples, 0.75%)</title><rect x="45.1128%" y="213" width="0.7519%" height="15" fill="rgb(249,199,10)" fg:x="60" fg:w="1"/><text x="45.3628%" y="223.50"></text></g><g><title>part1.exe`core::unicode::unicode_data::skip_search::closure$0 (1 samples, 0.75%)</title><rect x="45.1128%" y="197" width="0.7519%" height="15" fill="rgb(249,222,13)" fg:x="60" fg:w="1"/><text x="45.3628%" y="207.50"></text></g><g><title>part1.exe`core::ops::bit::impl$312::shl (1 samples, 0.75%)</title><rect x="45.1128%" y="181" width="0.7519%" height="15" fill="rgb(244,185,38)" fg:x="60" fg:w="1"/><text x="45.3628%" y="191.50"></text></g><g><title>part1.exe`core::ops::bit::impl$311::shl (1 samples, 0.75%)</title><rect x="45.1128%" y="165" width="0.7519%" height="15" fill="rgb(236,202,9)" fg:x="60" fg:w="1"/><text x="45.3628%" y="175.50"></text></g><g><title>part1.exe`miette::eyreish::context::impl$0::context(enum2$&lt;core::result::Result&lt;alloc::string::String,enum2$&lt;day_08::custom_error::AocError&gt; &gt; &gt;, ref$ (30 samples, 22.56%)</title><rect x="24.0602%" y="677" width="22.5564%" height="15" fill="rgb(250,229,37)" fg:x="32" fg:w="30"/><text x="24.3102%" y="687.50">part1.exe`miette::eyreish::context::..</text></g><g><title>part1.exe`miette::eyreish::context::impl$0::wrap_err(enum2$&lt;core::result::Result&lt;alloc::string::String,enum2$&lt;day_08::custom_error::AocError&gt; &gt; &gt;, ref$ (30 samples, 22.56%)</title><rect x="24.0602%" y="661" width="22.5564%" height="15" fill="rgb(206,174,23)" fg:x="32" fg:w="30"/><text x="24.3102%" y="671.50">part1.exe`miette::eyreish::context::..</text></g><g><title>part1.exe`day_08::part1::process(ref$ (30 samples, 22.56%)</title><rect x="24.0602%" y="645" width="22.5564%" height="15" fill="rgb(211,33,43)" fg:x="32" fg:w="30"/><text x="24.3102%" y="655.50">part1.exe`day_08::part1::process(ref$</text></g><g><title>part1.exe`tracing::span::Span::new (7 samples, 5.26%)</title><rect x="41.3534%" y="629" width="5.2632%" height="15" fill="rgb(245,58,50)" fg:x="55" fg:w="7"/><text x="41.6034%" y="639.50">part1...</text></g><g><title>part1.exe`tracing_core::dispatcher::get_default&lt;tracing::span::Span,tracing::span::impl$0::new::closure_env$0&gt; (7 samples, 5.26%)</title><rect x="41.3534%" y="613" width="5.2632%" height="15" fill="rgb(244,68,36)" fg:x="55" fg:w="7"/><text x="41.6034%" y="623.50">part1...</text></g><g><title>part1.exe`tracing::span::impl$0::new::closure$0 (7 samples, 5.26%)</title><rect x="41.3534%" y="597" width="5.2632%" height="15" fill="rgb(232,229,15)" fg:x="55" fg:w="7"/><text x="41.6034%" y="607.50">part1...</text></g><g><title>part1.exe`tracing::span::Span::new_with (7 samples, 5.26%)</title><rect x="41.3534%" y="581" width="5.2632%" height="15" fill="rgb(254,30,23)" fg:x="55" fg:w="7"/><text x="41.6034%" y="591.50">part1...</text></g><g><title>part1.exe`tracing::span::Span::make_with (7 samples, 5.26%)</title><rect x="41.3534%" y="565" width="5.2632%" height="15" fill="rgb(235,160,14)" fg:x="55" fg:w="7"/><text x="41.6034%" y="575.50">part1...</text></g><g><title>part1.exe`tracing_core::dispatcher::Dispatch::new_span (7 samples, 5.26%)</title><rect x="41.3534%" y="549" width="5.2632%" height="15" fill="rgb(212,155,44)" fg:x="55" fg:w="7"/><text x="41.6034%" y="559.50">part1...</text></g><g><title>part1.exe`tracing_core::dispatcher::Dispatch::subscriber (7 samples, 5.26%)</title><rect x="41.3534%" y="533" width="5.2632%" height="15" fill="rgb(226,2,50)" fg:x="55" fg:w="7"/><text x="41.6034%" y="543.50">part1...</text></g><g><title>part1.exe`tracing_subscriber::layer::layered::impl$1::new_span&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;tracing_subscriber::registry::sharded::Registry,tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,std::io::stdio::Stdout (*)()&gt;,tracing_subscriber::registry::sharded::Registry&gt;(tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;tracing_subscriber::registry::sharded::Registry,tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,std::io::stdio::Stdout (*) (7 samples, 5.26%)</title><rect x="41.3534%" y="517" width="5.2632%" height="15" fill="rgb(234,177,6)" fg:x="55" fg:w="7"/><text x="41.6034%" y="527.50">part1...</text></g><g><title>part1.exe`tracing_subscriber::registry::sharded::impl$2::new_span (1 samples, 0.75%)</title><rect x="45.8647%" y="501" width="0.7519%" height="15" fill="rgb(217,24,9)" fg:x="61" fg:w="1"/><text x="46.1147%" y="511.50"></text></g><g><title>part1.exe`tracing_core::span::Current::id (1 samples, 0.75%)</title><rect x="45.8647%" y="485" width="0.7519%" height="15" fill="rgb(220,13,46)" fg:x="61" fg:w="1"/><text x="46.1147%" y="495.50"></text></g><g><title>part1.exe`tracing_subscriber::registry::sharded::impl$2::current_span (1 samples, 0.75%)</title><rect x="45.8647%" y="469" width="0.7519%" height="15" fill="rgb(239,221,27)" fg:x="61" fg:w="1"/><text x="46.1147%" y="479.50"></text></g><g><title>part1.exe`thread_local::ThreadLocal&lt;core::cell::RefCell&lt;tracing_subscriber::registry::stack::SpanStack&gt; &gt;::get (1 samples, 0.75%)</title><rect x="45.8647%" y="453" width="0.7519%" height="15" fill="rgb(222,198,25)" fg:x="61" fg:w="1"/><text x="46.1147%" y="463.50"></text></g><g><title>part1.exe`thread_local::thread_id::get (1 samples, 0.75%)</title><rect x="45.8647%" y="437" width="0.7519%" height="15" fill="rgb(211,99,13)" fg:x="61" fg:w="1"/><text x="46.1147%" y="447.50"></text></g><g><title>part1.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;enum2$&lt;core::option::Option&lt;thread_local::thread_id::Thread&gt; &gt; &gt; &gt;::with (1 samples, 0.75%)</title><rect x="45.8647%" y="421" width="0.7519%" height="15" fill="rgb(232,111,31)" fg:x="61" fg:w="1"/><text x="46.1147%" y="431.50"></text></g><g><title>part1.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;enum2$&lt;core::option::Option&lt;thread_local::thread_id::Thread&gt; &gt; &gt; &gt;::try_with (1 samples, 0.75%)</title><rect x="45.8647%" y="405" width="0.7519%" height="15" fill="rgb(245,82,37)" fg:x="61" fg:w="1"/><text x="46.1147%" y="415.50"></text></g><g><title>part1.exe`enum2$&lt;core::option::Option&lt;ref$&lt;core::cell::Cell&lt;enum2$&lt;core::option::Option&lt;thread_local::thread_id::Thread&gt; &gt; &gt; &gt; &gt; &gt;::ok_or(enum2$&lt;core::option::Option&lt;ref$&lt;core::cell::Cell&lt;enum2$&lt;core::option::Option (1 samples, 0.75%)</title><rect x="45.8647%" y="389" width="0.7519%" height="15" fill="rgb(227,149,46)" fg:x="61" fg:w="1"/><text x="46.1147%" y="399.50"></text></g><g><title>part1.exe`thread_local::thread_id::THREAD::__getit::VAL (1 samples, 0.75%)</title><rect x="45.8647%" y="373" width="0.7519%" height="15" fill="rgb(218,36,50)" fg:x="61" fg:w="1"/><text x="46.1147%" y="383.50"></text></g><g><title>`0x7FFC3F1CAA58 (62 samples, 46.62%)</title><rect x="0.7519%" y="917" width="46.6165%" height="15" fill="rgb(226,80,48)" fg:x="1" fg:w="62"/><text x="1.0019%" y="927.50">`0x7FFC3F1CAA58</text></g><g><title>`0x7FFC3DDE257D (62 samples, 46.62%)</title><rect x="0.7519%" y="901" width="46.6165%" height="15" fill="rgb(238,224,15)" fg:x="1" fg:w="62"/><text x="1.0019%" y="911.50">`0x7FFC3DDE257D</text></g><g><title>part1.exe`__scrt_common_main_seh() (43 samples, 32.33%)</title><rect x="15.0376%" y="885" width="32.3308%" height="15" fill="rgb(241,136,10)" fg:x="20" fg:w="43"/><text x="15.2876%" y="895.50">part1.exe`__scrt_common_main_seh()</text></g><g><title>part1.exe`invoke_main() (33 samples, 24.81%)</title><rect x="22.5564%" y="869" width="24.8120%" height="15" fill="rgb(208,32,45)" fg:x="30" fg:w="33"/><text x="22.8064%" y="879.50">part1.exe`invoke_main()</text></g><g><title>part1.exe`std::rt::lang_start&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; &gt;(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; (*) (33 samples, 24.81%)</title><rect x="22.5564%" y="853" width="24.8120%" height="15" fill="rgb(207,135,9)" fg:x="30" fg:w="33"/><text x="22.8064%" y="863.50">part1.exe`std::rt::lang_start&lt;enum2$&lt;cor..</text></g><g><title>part1.exe`std::rt::lang_start_internal (33 samples, 24.81%)</title><rect x="22.5564%" y="837" width="24.8120%" height="15" fill="rgb(206,86,44)" fg:x="30" fg:w="33"/><text x="22.8064%" y="847.50">part1.exe`std::rt::lang_start_internal</text></g><g><title>part1.exe`std::panic::catch_unwind (33 samples, 24.81%)</title><rect x="22.5564%" y="821" width="24.8120%" height="15" fill="rgb(245,177,15)" fg:x="30" fg:w="33"/><text x="22.8064%" y="831.50">part1.exe`std::panic::catch_unwind</text></g><g><title>part1.exe`std::panicking::try (33 samples, 24.81%)</title><rect x="22.5564%" y="805" width="24.8120%" height="15" fill="rgb(206,64,50)" fg:x="30" fg:w="33"/><text x="22.8064%" y="815.50">part1.exe`std::panicking::try</text></g><g><title>part1.exe`std::panicking::try::do_call (33 samples, 24.81%)</title><rect x="22.5564%" y="789" width="24.8120%" height="15" fill="rgb(234,36,40)" fg:x="30" fg:w="33"/><text x="22.8064%" y="799.50">part1.exe`std::panicking::try::do_call</text></g><g><title>part1.exe`std::rt::lang_start_internal::closure$2 (31 samples, 23.31%)</title><rect x="24.0602%" y="773" width="23.3083%" height="15" fill="rgb(213,64,8)" fg:x="32" fg:w="31"/><text x="24.3102%" y="783.50">part1.exe`std::rt::lang_start_interna..</text></g><g><title>part1.exe`std::panic::catch_unwind (31 samples, 23.31%)</title><rect x="24.0602%" y="757" width="23.3083%" height="15" fill="rgb(210,75,36)" fg:x="32" fg:w="31"/><text x="24.3102%" y="767.50">part1.exe`std::panic::catch_unwind</text></g><g><title>part1.exe`std::rt::lang_start::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; &gt;(std::rt::lang_start::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$ (31 samples, 23.31%)</title><rect x="24.0602%" y="741" width="23.3083%" height="15" fill="rgb(229,88,21)" fg:x="32" fg:w="31"/><text x="24.3102%" y="751.50">part1.exe`std::rt::lang_start::closur..</text></g><g><title>part1.exe`std::process::impl$61::report(enum2$&lt;core::result::Result&lt;tuple$ (31 samples, 23.31%)</title><rect x="24.0602%" y="725" width="23.3083%" height="15" fill="rgb(252,204,47)" fg:x="32" fg:w="31"/><text x="24.3102%" y="735.50">part1.exe`std::process::impl$61::repo..</text></g><g><title>part1.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; (*)(),enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; &gt;(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; (*) (31 samples, 23.31%)</title><rect x="24.0602%" y="709" width="23.3083%" height="15" fill="rgb(208,77,27)" fg:x="32" fg:w="31"/><text x="24.3102%" y="719.50">part1.exe`std::sys_common::backtrace:..</text></g><g><title>part1.exe`part1::main (31 samples, 23.31%)</title><rect x="24.0602%" y="693" width="23.3083%" height="15" fill="rgb(221,76,26)" fg:x="32" fg:w="31"/><text x="24.3102%" y="703.50">part1.exe`part1::main</text></g><g><title>part1.exe`tracing_subscriber::fmt::init (1 samples, 0.75%)</title><rect x="46.6165%" y="677" width="0.7519%" height="15" fill="rgb(225,139,18)" fg:x="62" fg:w="1"/><text x="46.8665%" y="687.50"></text></g><g><title>part1.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt; &gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt; &gt; &gt;, ref$ (1 samples, 0.75%)</title><rect x="46.6165%" y="661" width="0.7519%" height="15" fill="rgb(230,137,11)" fg:x="62" fg:w="1"/><text x="46.8665%" y="671.50"></text></g><g><title>part1.exe`tracing_subscriber::fmt::try_init (1 samples, 0.75%)</title><rect x="46.6165%" y="645" width="0.7519%" height="15" fill="rgb(212,28,1)" fg:x="62" fg:w="1"/><text x="46.8665%" y="655.50"></text></g><g><title>part1.exe`std::env::_var (1 samples, 0.75%)</title><rect x="46.6165%" y="629" width="0.7519%" height="15" fill="rgb(248,164,17)" fg:x="62" fg:w="1"/><text x="46.8665%" y="639.50"></text></g><g><title>part1.exe`std::env::_var_os (1 samples, 0.75%)</title><rect x="46.6165%" y="613" width="0.7519%" height="15" fill="rgb(222,171,42)" fg:x="62" fg:w="1"/><text x="46.8665%" y="623.50"></text></g><g><title>part1.exe`std::sys::windows::os::getenv (1 samples, 0.75%)</title><rect x="46.6165%" y="597" width="0.7519%" height="15" fill="rgb(243,84,45)" fg:x="62" fg:w="1"/><text x="46.8665%" y="607.50"></text></g><g><title>part1.exe`core::result::Result::ok (1 samples, 0.75%)</title><rect x="46.6165%" y="581" width="0.7519%" height="15" fill="rgb(252,49,23)" fg:x="62" fg:w="1"/><text x="46.8665%" y="591.50"></text></g><g><title>part1.exe`std::sys::windows::to_u16s::inner (1 samples, 0.75%)</title><rect x="46.6165%" y="565" width="0.7519%" height="15" fill="rgb(215,19,7)" fg:x="62" fg:w="1"/><text x="46.8665%" y="575.50"></text></g><g><title>part1.exe`alloc::vec::impl$8::deref (1 samples, 0.75%)</title><rect x="46.6165%" y="549" width="0.7519%" height="15" fill="rgb(238,81,41)" fg:x="62" fg:w="1"/><text x="46.8665%" y="559.50"></text></g><g><title>part1.exe`alloc::vec::Vec::as_ptr (1 samples, 0.75%)</title><rect x="46.6165%" y="533" width="0.7519%" height="15" fill="rgb(210,199,37)" fg:x="62" fg:w="1"/><text x="46.8665%" y="543.50"></text></g><g><title>part1.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.75%)</title><rect x="46.6165%" y="517" width="0.7519%" height="15" fill="rgb(244,192,49)" fg:x="62" fg:w="1"/><text x="46.8665%" y="527.50"></text></g><g><title>part1.exe`alloc::vec::spec_extend::impl$0::spec_extend&lt;u16,std::sys_common::wtf8::EncodeWide,alloc::alloc::Global&gt; (1 samples, 0.75%)</title><rect x="46.6165%" y="501" width="0.7519%" height="15" fill="rgb(226,211,11)" fg:x="62" fg:w="1"/><text x="46.8665%" y="511.50"></text></g><g><title>part1.exe`alloc::vec::Vec::extend_desugared (1 samples, 0.75%)</title><rect x="46.6165%" y="485" width="0.7519%" height="15" fill="rgb(236,162,54)" fg:x="62" fg:w="1"/><text x="46.8665%" y="495.50"></text></g><g><title>part1.exe`std::sys_common::wtf8::impl$17::next (1 samples, 0.75%)</title><rect x="46.6165%" y="469" width="0.7519%" height="15" fill="rgb(220,229,9)" fg:x="62" fg:w="1"/><text x="46.8665%" y="479.50"></text></g><g><title>part1.exe`std::sys_common::wtf8::impl$16::next (1 samples, 0.75%)</title><rect x="46.6165%" y="453" width="0.7519%" height="15" fill="rgb(250,87,22)" fg:x="62" fg:w="1"/><text x="46.8665%" y="463.50"></text></g><g><title>part1.exe`core::str::validations::next_code_point (1 samples, 0.75%)</title><rect x="46.6165%" y="437" width="0.7519%" height="15" fill="rgb(239,43,17)" fg:x="62" fg:w="1"/><text x="46.8665%" y="447.50"></text></g><g><title>`0x7FFC3F1E3DD0 (1 samples, 0.75%)</title><rect x="47.3684%" y="917" width="0.7519%" height="15" fill="rgb(231,177,25)" fg:x="63" fg:w="1"/><text x="47.6184%" y="927.50"></text></g><g><title>`0x7FFC3F24CE0D (1 samples, 0.75%)</title><rect x="48.1203%" y="869" width="0.7519%" height="15" fill="rgb(219,179,1)" fg:x="64" fg:w="1"/><text x="48.3703%" y="879.50"></text></g><g><title>`0x7FFC3F24CCC5 (1 samples, 0.75%)</title><rect x="48.1203%" y="853" width="0.7519%" height="15" fill="rgb(238,219,53)" fg:x="64" fg:w="1"/><text x="48.3703%" y="863.50"></text></g><g><title>`0x7FFC3F21E3E3 (1 samples, 0.75%)</title><rect x="48.1203%" y="837" width="0.7519%" height="15" fill="rgb(232,167,36)" fg:x="64" fg:w="1"/><text x="48.3703%" y="847.50"></text></g><g><title>`0x7FFC3F211364 (1 samples, 0.75%)</title><rect x="48.1203%" y="821" width="0.7519%" height="15" fill="rgb(244,19,51)" fg:x="64" fg:w="1"/><text x="48.3703%" y="831.50"></text></g><g><title>`0x7FFC3F24D067 (1 samples, 0.75%)</title><rect x="48.8722%" y="869" width="0.7519%" height="15" fill="rgb(224,6,22)" fg:x="65" fg:w="1"/><text x="49.1222%" y="879.50"></text></g><g><title>`0x7FFC3F24BF46 (1 samples, 0.75%)</title><rect x="48.8722%" y="853" width="0.7519%" height="15" fill="rgb(224,145,5)" fg:x="65" fg:w="1"/><text x="49.1222%" y="863.50"></text></g><g><title>`0x7FFC3F24BDB1 (1 samples, 0.75%)</title><rect x="48.8722%" y="837" width="0.7519%" height="15" fill="rgb(234,130,49)" fg:x="65" fg:w="1"/><text x="49.1222%" y="847.50"></text></g><g><title>`0x7FFC3F20F5B4 (1 samples, 0.75%)</title><rect x="48.8722%" y="821" width="0.7519%" height="15" fill="rgb(254,6,2)" fg:x="65" fg:w="1"/><text x="49.1222%" y="831.50"></text></g><g><title>`0x7FFC3F24D5C9 (1 samples, 0.75%)</title><rect x="49.6241%" y="869" width="0.7519%" height="15" fill="rgb(208,96,46)" fg:x="66" fg:w="1"/><text x="49.8741%" y="879.50"></text></g><g><title>`0x7FFC3F24EE6E (1 samples, 0.75%)</title><rect x="49.6241%" y="853" width="0.7519%" height="15" fill="rgb(239,3,39)" fg:x="66" fg:w="1"/><text x="49.8741%" y="863.50"></text></g><g><title>`0x7FFC3F1B7DB2 (1 samples, 0.75%)</title><rect x="49.6241%" y="837" width="0.7519%" height="15" fill="rgb(233,210,1)" fg:x="66" fg:w="1"/><text x="49.8741%" y="847.50"></text></g><g><title>`0x7FFC3F20F674 (1 samples, 0.75%)</title><rect x="49.6241%" y="821" width="0.7519%" height="15" fill="rgb(244,137,37)" fg:x="66" fg:w="1"/><text x="49.8741%" y="831.50"></text></g><g><title>`0x7FFC3F24D74E (1 samples, 0.75%)</title><rect x="50.3759%" y="869" width="0.7519%" height="15" fill="rgb(240,136,2)" fg:x="67" fg:w="1"/><text x="50.6259%" y="879.50"></text></g><g><title>`0x7FFC3F1A14E0 (1 samples, 0.75%)</title><rect x="50.3759%" y="853" width="0.7519%" height="15" fill="rgb(239,18,37)" fg:x="67" fg:w="1"/><text x="50.6259%" y="863.50"></text></g><g><title>`0x7FFC3F1A21CA (1 samples, 0.75%)</title><rect x="50.3759%" y="837" width="0.7519%" height="15" fill="rgb(218,185,22)" fg:x="67" fg:w="1"/><text x="50.6259%" y="847.50"></text></g><g><title>`0x7FFC3F1A2057 (1 samples, 0.75%)</title><rect x="50.3759%" y="821" width="0.7519%" height="15" fill="rgb(225,218,4)" fg:x="67" fg:w="1"/><text x="50.6259%" y="831.50"></text></g><g><title>`0x7FFC3F212DC4 (1 samples, 0.75%)</title><rect x="50.3759%" y="805" width="0.7519%" height="15" fill="rgb(230,182,32)" fg:x="67" fg:w="1"/><text x="50.6259%" y="815.50"></text></g><g><title>`0x7FFC3F24D791 (1 samples, 0.75%)</title><rect x="51.1278%" y="869" width="0.7519%" height="15" fill="rgb(242,56,43)" fg:x="68" fg:w="1"/><text x="51.3778%" y="879.50"></text></g><g><title>`0x7FFC3F1C812A (1 samples, 0.75%)</title><rect x="51.1278%" y="853" width="0.7519%" height="15" fill="rgb(233,99,24)" fg:x="68" fg:w="1"/><text x="51.3778%" y="863.50"></text></g><g><title>`0x7FFC3F1C87EF (1 samples, 0.75%)</title><rect x="51.1278%" y="837" width="0.7519%" height="15" fill="rgb(234,209,42)" fg:x="68" fg:w="1"/><text x="51.3778%" y="847.50"></text></g><g><title>`0x7FFC3F1C8894 (1 samples, 0.75%)</title><rect x="51.1278%" y="821" width="0.7519%" height="15" fill="rgb(227,7,12)" fg:x="68" fg:w="1"/><text x="51.3778%" y="831.50"></text></g><g><title>`0x7FFC3F18E888 (1 samples, 0.75%)</title><rect x="51.1278%" y="805" width="0.7519%" height="15" fill="rgb(245,203,43)" fg:x="68" fg:w="1"/><text x="51.3778%" y="815.50"></text></g><g><title>`0x7FFC3F1C8371 (1 samples, 0.75%)</title><rect x="51.1278%" y="789" width="0.7519%" height="15" fill="rgb(238,205,33)" fg:x="68" fg:w="1"/><text x="51.3778%" y="799.50"></text></g><g><title>`0x7FFC3F1C845F (1 samples, 0.75%)</title><rect x="51.1278%" y="773" width="0.7519%" height="15" fill="rgb(231,56,7)" fg:x="68" fg:w="1"/><text x="51.3778%" y="783.50"></text></g><g><title>`0x7FFC3F1AC7BA (1 samples, 0.75%)</title><rect x="51.1278%" y="757" width="0.7519%" height="15" fill="rgb(244,186,29)" fg:x="68" fg:w="1"/><text x="51.3778%" y="767.50"></text></g><g><title>`0x7FFC3F1ADAB1 (1 samples, 0.75%)</title><rect x="51.1278%" y="741" width="0.7519%" height="15" fill="rgb(234,111,31)" fg:x="68" fg:w="1"/><text x="51.3778%" y="751.50"></text></g><g><title>`0x7FFC3F1DF4DB (1 samples, 0.75%)</title><rect x="51.1278%" y="725" width="0.7519%" height="15" fill="rgb(241,149,10)" fg:x="68" fg:w="1"/><text x="51.3778%" y="735.50"></text></g><g><title>`0x7FFC3F1ACD59 (1 samples, 0.75%)</title><rect x="51.1278%" y="709" width="0.7519%" height="15" fill="rgb(249,206,44)" fg:x="68" fg:w="1"/><text x="51.3778%" y="719.50"></text></g><g><title>`0x7FFC3F1AED02 (1 samples, 0.75%)</title><rect x="51.1278%" y="693" width="0.7519%" height="15" fill="rgb(251,153,30)" fg:x="68" fg:w="1"/><text x="51.3778%" y="703.50"></text></g><g><title>`0x7FFC3F24DE76 (1 samples, 0.75%)</title><rect x="51.8797%" y="869" width="0.7519%" height="15" fill="rgb(239,152,38)" fg:x="69" fg:w="1"/><text x="52.1297%" y="879.50"></text></g><g><title>`0x7FFC3F1EBB62 (1 samples, 0.75%)</title><rect x="51.8797%" y="853" width="0.7519%" height="15" fill="rgb(249,139,47)" fg:x="69" fg:w="1"/><text x="52.1297%" y="863.50"></text></g><g><title>`0x7FFC3F1903AC (1 samples, 0.75%)</title><rect x="51.8797%" y="837" width="0.7519%" height="15" fill="rgb(244,64,35)" fg:x="69" fg:w="1"/><text x="52.1297%" y="847.50"></text></g><g><title>`0x7FFC3F24E4F2 (1 samples, 0.75%)</title><rect x="52.6316%" y="869" width="0.7519%" height="15" fill="rgb(216,46,15)" fg:x="70" fg:w="1"/><text x="52.8816%" y="879.50"></text></g><g><title>`0x7FFC3F17433F (1 samples, 0.75%)</title><rect x="52.6316%" y="853" width="0.7519%" height="15" fill="rgb(250,74,19)" fg:x="70" fg:w="1"/><text x="52.8816%" y="863.50"></text></g><g><title>`0x7FFC3F199192 (1 samples, 0.75%)</title><rect x="52.6316%" y="837" width="0.7519%" height="15" fill="rgb(249,42,33)" fg:x="70" fg:w="1"/><text x="52.8816%" y="847.50"></text></g><g><title>`0x7FFC3F216009 (1 samples, 0.75%)</title><rect x="52.6316%" y="821" width="0.7519%" height="15" fill="rgb(242,149,17)" fg:x="70" fg:w="1"/><text x="52.8816%" y="831.50"></text></g><g><title>`0x7FFC3F19C399 (1 samples, 0.75%)</title><rect x="53.3835%" y="773" width="0.7519%" height="15" fill="rgb(244,29,21)" fg:x="71" fg:w="1"/><text x="53.6335%" y="783.50"></text></g><g><title>`0x7FFC3F19AF85 (1 samples, 0.75%)</title><rect x="53.3835%" y="757" width="0.7519%" height="15" fill="rgb(220,130,37)" fg:x="71" fg:w="1"/><text x="53.6335%" y="767.50"></text></g><g><title>`0x7FFC3F19B4B5 (1 samples, 0.75%)</title><rect x="53.3835%" y="741" width="0.7519%" height="15" fill="rgb(211,67,2)" fg:x="71" fg:w="1"/><text x="53.6335%" y="751.50"></text></g><g><title>`0x7FFC3F19D4B1 (1 samples, 0.75%)</title><rect x="53.3835%" y="725" width="0.7519%" height="15" fill="rgb(235,68,52)" fg:x="71" fg:w="1"/><text x="53.6335%" y="735.50"></text></g><g><title>`0x7FFC3F194676 (1 samples, 0.75%)</title><rect x="54.1353%" y="757" width="0.7519%" height="15" fill="rgb(246,142,3)" fg:x="72" fg:w="1"/><text x="54.3853%" y="767.50"></text></g><g><title>`0x7FFC3F194CF1 (1 samples, 0.75%)</title><rect x="54.8872%" y="725" width="0.7519%" height="15" fill="rgb(241,25,7)" fg:x="73" fg:w="1"/><text x="55.1372%" y="735.50"></text></g><g><title>`0x7FFC3F19C254 (1 samples, 0.75%)</title><rect x="55.6391%" y="693" width="0.7519%" height="15" fill="rgb(242,119,39)" fg:x="74" fg:w="1"/><text x="55.8891%" y="703.50"></text></g><g><title>`0x7FFC3F19C0CA (1 samples, 0.75%)</title><rect x="55.6391%" y="677" width="0.7519%" height="15" fill="rgb(241,98,45)" fg:x="74" fg:w="1"/><text x="55.8891%" y="687.50"></text></g><g><title>`0x7FFC3F19C4CC (1 samples, 0.75%)</title><rect x="55.6391%" y="661" width="0.7519%" height="15" fill="rgb(254,28,30)" fg:x="74" fg:w="1"/><text x="55.8891%" y="671.50"></text></g><g><title>`0x7FFC3F20F874 (1 samples, 0.75%)</title><rect x="55.6391%" y="645" width="0.7519%" height="15" fill="rgb(241,142,54)" fg:x="74" fg:w="1"/><text x="55.8891%" y="655.50"></text></g><g><title>`0x7FFC3F1946BB (3 samples, 2.26%)</title><rect x="54.8872%" y="757" width="2.2556%" height="15" fill="rgb(222,85,15)" fg:x="73" fg:w="3"/><text x="55.1372%" y="767.50">`..</text></g><g><title>`0x7FFC3F194906 (3 samples, 2.26%)</title><rect x="54.8872%" y="741" width="2.2556%" height="15" fill="rgb(210,85,47)" fg:x="73" fg:w="3"/><text x="55.1372%" y="751.50">`..</text></g><g><title>`0x7FFC3F1958C4 (2 samples, 1.50%)</title><rect x="55.6391%" y="725" width="1.5038%" height="15" fill="rgb(224,206,25)" fg:x="74" fg:w="2"/><text x="55.8891%" y="735.50"></text></g><g><title>`0x7FFC3F19CE29 (2 samples, 1.50%)</title><rect x="55.6391%" y="709" width="1.5038%" height="15" fill="rgb(243,201,19)" fg:x="74" fg:w="2"/><text x="55.8891%" y="719.50"></text></g><g><title>`0x7FFC3F19C3F8 (1 samples, 0.75%)</title><rect x="56.3910%" y="693" width="0.7519%" height="15" fill="rgb(236,59,4)" fg:x="75" fg:w="1"/><text x="56.6410%" y="703.50"></text></g><g><title>`0x7FFC3F194541 (1 samples, 0.75%)</title><rect x="56.3910%" y="677" width="0.7519%" height="15" fill="rgb(254,179,45)" fg:x="75" fg:w="1"/><text x="56.6410%" y="687.50"></text></g><g><title>`0x7FFC3F19AE0B (1 samples, 0.75%)</title><rect x="56.3910%" y="661" width="0.7519%" height="15" fill="rgb(226,14,10)" fg:x="75" fg:w="1"/><text x="56.6410%" y="671.50"></text></g><g><title>`0x7FFC3F193C66 (2 samples, 1.50%)</title><rect x="57.1429%" y="741" width="1.5038%" height="15" fill="rgb(244,27,41)" fg:x="76" fg:w="2"/><text x="57.3929%" y="751.50"></text></g><g><title>`0x7FFC3F193C96 (1 samples, 0.75%)</title><rect x="58.6466%" y="741" width="0.7519%" height="15" fill="rgb(235,35,32)" fg:x="78" fg:w="1"/><text x="58.8966%" y="751.50"></text></g><g><title>`0x7FFC3F1988B6 (9 samples, 6.77%)</title><rect x="53.3835%" y="821" width="6.7669%" height="15" fill="rgb(218,68,31)" fg:x="71" fg:w="9"/><text x="53.6335%" y="831.50">`0x7FFC3F..</text></g><g><title>`0x7FFC3F19DDA9 (9 samples, 6.77%)</title><rect x="53.3835%" y="805" width="6.7669%" height="15" fill="rgb(207,120,37)" fg:x="71" fg:w="9"/><text x="53.6335%" y="815.50">`0x7FFC3F..</text></g><g><title>`0x7FFC3F19CE29 (9 samples, 6.77%)</title><rect x="53.3835%" y="789" width="6.7669%" height="15" fill="rgb(227,98,0)" fg:x="71" fg:w="9"/><text x="53.6335%" y="799.50">`0x7FFC3F..</text></g><g><title>`0x7FFC3F19C3F8 (8 samples, 6.02%)</title><rect x="54.1353%" y="773" width="6.0150%" height="15" fill="rgb(207,7,3)" fg:x="72" fg:w="8"/><text x="54.3853%" y="783.50">`0x7FFC3..</text></g><g><title>`0x7FFC3F194774 (4 samples, 3.01%)</title><rect x="57.1429%" y="757" width="3.0075%" height="15" fill="rgb(206,98,19)" fg:x="76" fg:w="4"/><text x="57.3929%" y="767.50">`0x..</text></g><g><title>`0x7FFC3F193CB8 (1 samples, 0.75%)</title><rect x="59.3985%" y="741" width="0.7519%" height="15" fill="rgb(217,5,26)" fg:x="79" fg:w="1"/><text x="59.6485%" y="751.50"></text></g><g><title>`0x7FFC3F193C71 (1 samples, 0.75%)</title><rect x="60.1504%" y="773" width="0.7519%" height="15" fill="rgb(235,190,38)" fg:x="80" fg:w="1"/><text x="60.4004%" y="783.50"></text></g><g><title>`0x7FFC3F1988E0 (2 samples, 1.50%)</title><rect x="60.1504%" y="821" width="1.5038%" height="15" fill="rgb(247,86,24)" fg:x="80" fg:w="2"/><text x="60.4004%" y="831.50"></text></g><g><title>`0x7FFC3F19A0A0 (2 samples, 1.50%)</title><rect x="60.1504%" y="805" width="1.5038%" height="15" fill="rgb(205,101,16)" fg:x="80" fg:w="2"/><text x="60.4004%" y="815.50"></text></g><g><title>`0x7FFC3F180E8B (2 samples, 1.50%)</title><rect x="60.1504%" y="789" width="1.5038%" height="15" fill="rgb(246,168,33)" fg:x="80" fg:w="2"/><text x="60.4004%" y="799.50"></text></g><g><title>`0x7FFC3F194246 (1 samples, 0.75%)</title><rect x="60.9023%" y="773" width="0.7519%" height="15" fill="rgb(231,114,1)" fg:x="81" fg:w="1"/><text x="61.1523%" y="783.50"></text></g><g><title>`0x7FFC3F174550 (1 samples, 0.75%)</title><rect x="60.9023%" y="757" width="0.7519%" height="15" fill="rgb(207,184,53)" fg:x="81" fg:w="1"/><text x="61.1523%" y="767.50"></text></g><g><title>`0x7FFC3F1747E7 (1 samples, 0.75%)</title><rect x="60.9023%" y="741" width="0.7519%" height="15" fill="rgb(224,95,51)" fg:x="81" fg:w="1"/><text x="61.1523%" y="751.50"></text></g><g><title>`0x7FFC3F215F0F (1 samples, 0.75%)</title><rect x="60.9023%" y="725" width="0.7519%" height="15" fill="rgb(212,188,45)" fg:x="81" fg:w="1"/><text x="61.1523%" y="735.50"></text></g><g><title>`0x7FFC3F1BAD9D (1 samples, 0.75%)</title><rect x="61.6541%" y="661" width="0.7519%" height="15" fill="rgb(223,154,38)" fg:x="82" fg:w="1"/><text x="61.9041%" y="671.50"></text></g><g><title>`0x7FFC3F2107A4 (1 samples, 0.75%)</title><rect x="61.6541%" y="645" width="0.7519%" height="15" fill="rgb(251,22,52)" fg:x="82" fg:w="1"/><text x="61.9041%" y="655.50"></text></g><g><title>`0x7FFC3C5DCA03 (2 samples, 1.50%)</title><rect x="61.6541%" y="709" width="1.5038%" height="15" fill="rgb(229,209,22)" fg:x="82" fg:w="2"/><text x="61.9041%" y="719.50"></text></g><g><title>`0x7FFC3C5DC322 (2 samples, 1.50%)</title><rect x="61.6541%" y="693" width="1.5038%" height="15" fill="rgb(234,138,34)" fg:x="82" fg:w="2"/><text x="61.9041%" y="703.50"></text></g><g><title>`0x7FFC3F1BAFE2 (2 samples, 1.50%)</title><rect x="61.6541%" y="677" width="1.5038%" height="15" fill="rgb(212,95,11)" fg:x="82" fg:w="2"/><text x="61.9041%" y="687.50"></text></g><g><title>`0x7FFC3F1BAE0D (1 samples, 0.75%)</title><rect x="62.4060%" y="661" width="0.7519%" height="15" fill="rgb(240,179,47)" fg:x="83" fg:w="1"/><text x="62.6560%" y="671.50"></text></g><g><title>`0x7FFC3F20F554 (1 samples, 0.75%)</title><rect x="62.4060%" y="645" width="0.7519%" height="15" fill="rgb(240,163,11)" fg:x="83" fg:w="1"/><text x="62.6560%" y="655.50"></text></g><g><title>`0x7FFC3C5DCC1B (1 samples, 0.75%)</title><rect x="63.1579%" y="709" width="0.7519%" height="15" fill="rgb(236,37,12)" fg:x="84" fg:w="1"/><text x="63.4079%" y="719.50"></text></g><g><title>`0x7FFC3C5DBF3C (1 samples, 0.75%)</title><rect x="63.1579%" y="693" width="0.7519%" height="15" fill="rgb(232,164,16)" fg:x="84" fg:w="1"/><text x="63.4079%" y="703.50"></text></g><g><title>`0x7FFC3C5DB9DD (1 samples, 0.75%)</title><rect x="63.1579%" y="677" width="0.7519%" height="15" fill="rgb(244,205,15)" fg:x="84" fg:w="1"/><text x="63.4079%" y="687.50"></text></g><g><title>`0x7FFC3C5DC0CD (1 samples, 0.75%)</title><rect x="63.1579%" y="661" width="0.7519%" height="15" fill="rgb(223,117,47)" fg:x="84" fg:w="1"/><text x="63.4079%" y="671.50"></text></g><g><title>`0x7FFC3C5DC68D (4 samples, 3.01%)</title><rect x="61.6541%" y="725" width="3.0075%" height="15" fill="rgb(244,107,35)" fg:x="82" fg:w="4"/><text x="61.9041%" y="735.50">`0x..</text></g><g><title>`0x7FFC3C5DCC5B (1 samples, 0.75%)</title><rect x="63.9098%" y="709" width="0.7519%" height="15" fill="rgb(205,140,8)" fg:x="85" fg:w="1"/><text x="64.1598%" y="719.50"></text></g><g><title>`0x7FFC3C610A0F (1 samples, 0.75%)</title><rect x="63.9098%" y="693" width="0.7519%" height="15" fill="rgb(228,84,46)" fg:x="85" fg:w="1"/><text x="64.1598%" y="703.50"></text></g><g><title>`0x7FFC3C610DBA (1 samples, 0.75%)</title><rect x="63.9098%" y="677" width="0.7519%" height="15" fill="rgb(254,188,9)" fg:x="85" fg:w="1"/><text x="64.1598%" y="687.50"></text></g><g><title>`0x7FFC3F20FE14 (1 samples, 0.75%)</title><rect x="63.9098%" y="661" width="0.7519%" height="15" fill="rgb(206,112,54)" fg:x="85" fg:w="1"/><text x="64.1598%" y="671.50"></text></g><g><title>`0x7FFC3C5DD2B0 (1 samples, 0.75%)</title><rect x="64.6617%" y="709" width="0.7519%" height="15" fill="rgb(216,84,49)" fg:x="86" fg:w="1"/><text x="64.9117%" y="719.50"></text></g><g><title>`0x7FFC3C5DD4C6 (1 samples, 0.75%)</title><rect x="64.6617%" y="693" width="0.7519%" height="15" fill="rgb(214,194,35)" fg:x="86" fg:w="1"/><text x="64.9117%" y="703.50"></text></g><g><title>`0x7FFC3C5DE00C (1 samples, 0.75%)</title><rect x="64.6617%" y="677" width="0.7519%" height="15" fill="rgb(249,28,3)" fg:x="86" fg:w="1"/><text x="64.9117%" y="687.50"></text></g><g><title>`0x7FFC3C5DD413 (1 samples, 0.75%)</title><rect x="65.4135%" y="709" width="0.7519%" height="15" fill="rgb(222,56,52)" fg:x="87" fg:w="1"/><text x="65.6635%" y="719.50"></text></g><g><title>`0x7FFC3C5DC2CA (1 samples, 0.75%)</title><rect x="65.4135%" y="693" width="0.7519%" height="15" fill="rgb(245,217,50)" fg:x="87" fg:w="1"/><text x="65.6635%" y="703.50"></text></g><g><title>`0x7FFC3C5B0C66 (1 samples, 0.75%)</title><rect x="65.4135%" y="677" width="0.7519%" height="15" fill="rgb(213,201,24)" fg:x="87" fg:w="1"/><text x="65.6635%" y="687.50"></text></g><g><title>`0x7FFC3C5B0A7B (1 samples, 0.75%)</title><rect x="65.4135%" y="661" width="0.7519%" height="15" fill="rgb(248,116,28)" fg:x="87" fg:w="1"/><text x="65.6635%" y="671.50"></text></g><g><title>`0x7FFC3C5DC4C0 (1 samples, 0.75%)</title><rect x="65.4135%" y="645" width="0.7519%" height="15" fill="rgb(219,72,43)" fg:x="87" fg:w="1"/><text x="65.6635%" y="655.50"></text></g><g><title>`0x7FFC3C5DC572 (1 samples, 0.75%)</title><rect x="65.4135%" y="629" width="0.7519%" height="15" fill="rgb(209,138,14)" fg:x="87" fg:w="1"/><text x="65.6635%" y="639.50"></text></g><g><title>`0x7FFC3C5D4460 (1 samples, 0.75%)</title><rect x="65.4135%" y="613" width="0.7519%" height="15" fill="rgb(222,18,33)" fg:x="87" fg:w="1"/><text x="65.6635%" y="623.50"></text></g><g><title>`0x7FFC3C5DC763 (3 samples, 2.26%)</title><rect x="64.6617%" y="725" width="2.2556%" height="15" fill="rgb(213,199,7)" fg:x="86" fg:w="3"/><text x="64.9117%" y="735.50">`..</text></g><g><title>`0x7FFC3C5DD41F (1 samples, 0.75%)</title><rect x="66.1654%" y="709" width="0.7519%" height="15" fill="rgb(250,110,10)" fg:x="88" fg:w="1"/><text x="66.4154%" y="719.50"></text></g><g><title>`0x7FFC3C69E1A0 (1 samples, 0.75%)</title><rect x="66.1654%" y="693" width="0.7519%" height="15" fill="rgb(248,123,6)" fg:x="88" fg:w="1"/><text x="66.4154%" y="703.50"></text></g><g><title>`0x7FFC3F24E5BF (19 samples, 14.29%)</title><rect x="53.3835%" y="869" width="14.2857%" height="15" fill="rgb(206,91,31)" fg:x="71" fg:w="19"/><text x="53.6335%" y="879.50">`0x7FFC3F24E5BF</text></g><g><title>`0x7FFC3F19A25A (19 samples, 14.29%)</title><rect x="53.3835%" y="853" width="14.2857%" height="15" fill="rgb(211,154,13)" fg:x="71" fg:w="19"/><text x="53.6335%" y="863.50">`0x7FFC3F19A25A</text></g><g><title>`0x7FFC3F188CAC (19 samples, 14.29%)</title><rect x="53.3835%" y="837" width="14.2857%" height="15" fill="rgb(225,148,7)" fg:x="71" fg:w="19"/><text x="53.6335%" y="847.50">`0x7FFC3F188CAC</text></g><g><title>`0x7FFC3F198940 (8 samples, 6.02%)</title><rect x="61.6541%" y="821" width="6.0150%" height="15" fill="rgb(220,160,43)" fg:x="82" fg:w="8"/><text x="61.9041%" y="831.50">`0x7FFC3..</text></g><g><title>`0x7FFC3F19D62D (8 samples, 6.02%)</title><rect x="61.6541%" y="805" width="6.0150%" height="15" fill="rgb(213,52,39)" fg:x="82" fg:w="8"/><text x="61.9041%" y="815.50">`0x7FFC3..</text></g><g><title>`0x7FFC3F1DCE70 (8 samples, 6.02%)</title><rect x="61.6541%" y="789" width="6.0150%" height="15" fill="rgb(243,137,7)" fg:x="82" fg:w="8"/><text x="61.9041%" y="799.50">`0x7FFC3..</text></g><g><title>`0x7FFC3F1DCDFE (8 samples, 6.02%)</title><rect x="61.6541%" y="773" width="6.0150%" height="15" fill="rgb(230,79,13)" fg:x="82" fg:w="8"/><text x="61.9041%" y="783.50">`0x7FFC3..</text></g><g><title>`0x7FFC3F1DD04D (8 samples, 6.02%)</title><rect x="61.6541%" y="757" width="6.0150%" height="15" fill="rgb(247,105,23)" fg:x="82" fg:w="8"/><text x="61.9041%" y="767.50">`0x7FFC3..</text></g><g><title>`0x7FFC3F19869F (8 samples, 6.02%)</title><rect x="61.6541%" y="741" width="6.0150%" height="15" fill="rgb(223,179,41)" fg:x="82" fg:w="8"/><text x="61.9041%" y="751.50">`0x7FFC3..</text></g><g><title>`0x7FFC3C5DC780 (1 samples, 0.75%)</title><rect x="66.9173%" y="725" width="0.7519%" height="15" fill="rgb(218,9,34)" fg:x="89" fg:w="1"/><text x="67.1673%" y="735.50"></text></g><g><title>`0x7FFC3C5DCF3E (1 samples, 0.75%)</title><rect x="66.9173%" y="709" width="0.7519%" height="15" fill="rgb(222,106,8)" fg:x="89" fg:w="1"/><text x="67.1673%" y="719.50"></text></g><g><title>`0x7FFC3C619788 (1 samples, 0.75%)</title><rect x="66.9173%" y="693" width="0.7519%" height="15" fill="rgb(211,220,0)" fg:x="89" fg:w="1"/><text x="67.1673%" y="703.50"></text></g><g><title>`0x7FFC3F1A14E0 (1 samples, 0.75%)</title><rect x="66.9173%" y="677" width="0.7519%" height="15" fill="rgb(229,52,16)" fg:x="89" fg:w="1"/><text x="67.1673%" y="687.50"></text></g><g><title>`0x7FFC3F1A21CA (1 samples, 0.75%)</title><rect x="66.9173%" y="661" width="0.7519%" height="15" fill="rgb(212,155,18)" fg:x="89" fg:w="1"/><text x="67.1673%" y="671.50"></text></g><g><title>`0x7FFC3F1A2057 (1 samples, 0.75%)</title><rect x="66.9173%" y="645" width="0.7519%" height="15" fill="rgb(242,21,14)" fg:x="89" fg:w="1"/><text x="67.1673%" y="655.50"></text></g><g><title>`0x7FFC3F212DC4 (1 samples, 0.75%)</title><rect x="66.9173%" y="629" width="0.7519%" height="15" fill="rgb(222,19,48)" fg:x="89" fg:w="1"/><text x="67.1673%" y="639.50"></text></g><g><title>`0x7FFC3F24E664 (1 samples, 0.75%)</title><rect x="67.6692%" y="869" width="0.7519%" height="15" fill="rgb(232,45,27)" fg:x="90" fg:w="1"/><text x="67.9192%" y="879.50"></text></g><g><title>`0x7FFC3F191D90 (1 samples, 0.75%)</title><rect x="67.6692%" y="853" width="0.7519%" height="15" fill="rgb(249,103,42)" fg:x="90" fg:w="1"/><text x="67.9192%" y="863.50"></text></g><g><title>`0x7FFC3F192457 (1 samples, 0.75%)</title><rect x="67.6692%" y="837" width="0.7519%" height="15" fill="rgb(246,81,33)" fg:x="90" fg:w="1"/><text x="67.9192%" y="847.50"></text></g><g><title>`0x7FFC3F1928B3 (1 samples, 0.75%)</title><rect x="67.6692%" y="821" width="0.7519%" height="15" fill="rgb(252,33,42)" fg:x="90" fg:w="1"/><text x="67.9192%" y="831.50"></text></g><g><title>`0x7FFC3F18854F (1 samples, 0.75%)</title><rect x="68.4211%" y="853" width="0.7519%" height="15" fill="rgb(209,212,41)" fg:x="91" fg:w="1"/><text x="68.6711%" y="863.50"></text></g><g><title>`0x7FFC3F1897EA (1 samples, 0.75%)</title><rect x="68.4211%" y="837" width="0.7519%" height="15" fill="rgb(207,154,6)" fg:x="91" fg:w="1"/><text x="68.6711%" y="847.50"></text></g><g><title>`0x7FFC3F18994B (1 samples, 0.75%)</title><rect x="68.4211%" y="821" width="0.7519%" height="15" fill="rgb(223,64,47)" fg:x="91" fg:w="1"/><text x="68.6711%" y="831.50"></text></g><g><title>`0x7FFC3F184526 (1 samples, 0.75%)</title><rect x="68.4211%" y="805" width="0.7519%" height="15" fill="rgb(211,161,38)" fg:x="91" fg:w="1"/><text x="68.6711%" y="815.50"></text></g><g><title>`0x7FFC3F24E669 (3 samples, 2.26%)</title><rect x="68.4211%" y="869" width="2.2556%" height="15" fill="rgb(219,138,40)" fg:x="91" fg:w="3"/><text x="68.6711%" y="879.50">`..</text></g><g><title>`0x7FFC3F1885EC (2 samples, 1.50%)</title><rect x="69.1729%" y="853" width="1.5038%" height="15" fill="rgb(241,228,46)" fg:x="92" fg:w="2"/><text x="69.4229%" y="863.50"></text></g><g><title>`0x7FFC3F19B8E1 (2 samples, 1.50%)</title><rect x="69.1729%" y="837" width="1.5038%" height="15" fill="rgb(223,209,38)" fg:x="92" fg:w="2"/><text x="69.4229%" y="847.50"></text></g><g><title>`0x7FFC3F19B9F7 (2 samples, 1.50%)</title><rect x="69.1729%" y="821" width="1.5038%" height="15" fill="rgb(236,164,45)" fg:x="92" fg:w="2"/><text x="69.4229%" y="831.50"></text></g><g><title>`0x7FFC3F1930CA (2 samples, 1.50%)</title><rect x="69.1729%" y="805" width="1.5038%" height="15" fill="rgb(231,15,5)" fg:x="92" fg:w="2"/><text x="69.4229%" y="815.50"></text></g><g><title>`0x7FFC3F1DA6C5 (2 samples, 1.50%)</title><rect x="69.1729%" y="789" width="1.5038%" height="15" fill="rgb(252,35,15)" fg:x="92" fg:w="2"/><text x="69.4229%" y="799.50"></text></g><g><title>`0x7FFC3F20FD74 (1 samples, 0.75%)</title><rect x="69.9248%" y="773" width="0.7519%" height="15" fill="rgb(248,181,18)" fg:x="93" fg:w="1"/><text x="70.1748%" y="783.50"></text></g><g><title>`0x7FFC3F24E67C (1 samples, 0.75%)</title><rect x="70.6767%" y="869" width="0.7519%" height="15" fill="rgb(233,39,42)" fg:x="94" fg:w="1"/><text x="70.9267%" y="879.50"></text></g><g><title>`0x7FFC3F17985D (1 samples, 0.75%)</title><rect x="70.6767%" y="853" width="0.7519%" height="15" fill="rgb(238,110,33)" fg:x="94" fg:w="1"/><text x="70.9267%" y="863.50"></text></g><g><title>`0x7FFC3F18A702 (1 samples, 0.75%)</title><rect x="70.6767%" y="837" width="0.7519%" height="15" fill="rgb(233,195,10)" fg:x="94" fg:w="1"/><text x="70.9267%" y="847.50"></text></g><g><title>`0x7FFC3F20F794 (1 samples, 0.75%)</title><rect x="70.6767%" y="821" width="0.7519%" height="15" fill="rgb(254,105,3)" fg:x="94" fg:w="1"/><text x="70.9267%" y="831.50"></text></g><g><title>`0x7FFC3F24E889 (1 samples, 0.75%)</title><rect x="71.4286%" y="869" width="0.7519%" height="15" fill="rgb(221,225,9)" fg:x="95" fg:w="1"/><text x="71.6786%" y="879.50"></text></g><g><title>`0x7FFC3F1BB10D (1 samples, 0.75%)</title><rect x="71.4286%" y="853" width="0.7519%" height="15" fill="rgb(224,227,45)" fg:x="95" fg:w="1"/><text x="71.6786%" y="863.50"></text></g><g><title>`0x7FFC3F1BBD90 (1 samples, 0.75%)</title><rect x="71.4286%" y="837" width="0.7519%" height="15" fill="rgb(229,198,43)" fg:x="95" fg:w="1"/><text x="71.6786%" y="847.50"></text></g><g><title>`0x7FFC3F210DC4 (1 samples, 0.75%)</title><rect x="71.4286%" y="821" width="0.7519%" height="15" fill="rgb(206,209,35)" fg:x="95" fg:w="1"/><text x="71.6786%" y="831.50"></text></g><g><title>`0x7FFC3F19485A (1 samples, 0.75%)</title><rect x="72.1805%" y="837" width="0.7519%" height="15" fill="rgb(245,195,53)" fg:x="96" fg:w="1"/><text x="72.4305%" y="847.50"></text></g><g><title>`0x7FFC3F19CD9A (1 samples, 0.75%)</title><rect x="72.9323%" y="805" width="0.7519%" height="15" fill="rgb(240,92,26)" fg:x="97" fg:w="1"/><text x="73.1823%" y="815.50"></text></g><g><title>`0x7FFC3F19BEEB (1 samples, 0.75%)</title><rect x="72.9323%" y="789" width="0.7519%" height="15" fill="rgb(207,40,23)" fg:x="97" fg:w="1"/><text x="73.1823%" y="799.50"></text></g><g><title>`0x7FFC3F20FA54 (1 samples, 0.75%)</title><rect x="72.9323%" y="773" width="0.7519%" height="15" fill="rgb(223,111,35)" fg:x="97" fg:w="1"/><text x="73.1823%" y="783.50"></text></g><g><title>`0x7FFC3F19C254 (1 samples, 0.75%)</title><rect x="73.6842%" y="789" width="0.7519%" height="15" fill="rgb(229,147,28)" fg:x="98" fg:w="1"/><text x="73.9342%" y="799.50"></text></g><g><title>`0x7FFC3F19C0CA (1 samples, 0.75%)</title><rect x="73.6842%" y="773" width="0.7519%" height="15" fill="rgb(211,29,28)" fg:x="98" fg:w="1"/><text x="73.9342%" y="783.50"></text></g><g><title>`0x7FFC3F19C4CC (1 samples, 0.75%)</title><rect x="73.6842%" y="757" width="0.7519%" height="15" fill="rgb(228,72,33)" fg:x="98" fg:w="1"/><text x="73.9342%" y="767.50"></text></g><g><title>`0x7FFC3F20F874 (1 samples, 0.75%)</title><rect x="73.6842%" y="741" width="0.7519%" height="15" fill="rgb(205,214,31)" fg:x="98" fg:w="1"/><text x="73.9342%" y="751.50"></text></g><g><title>`0x7FFC3F19C399 (1 samples, 0.75%)</title><rect x="74.4361%" y="789" width="0.7519%" height="15" fill="rgb(224,111,15)" fg:x="99" fg:w="1"/><text x="74.6861%" y="799.50"></text></g><g><title>`0x7FFC3F19AF46 (1 samples, 0.75%)</title><rect x="74.4361%" y="773" width="0.7519%" height="15" fill="rgb(253,21,26)" fg:x="99" fg:w="1"/><text x="74.6861%" y="783.50"></text></g><g><title>`0x7FFC3F19B121 (1 samples, 0.75%)</title><rect x="74.4361%" y="757" width="0.7519%" height="15" fill="rgb(245,139,43)" fg:x="99" fg:w="1"/><text x="74.6861%" y="767.50"></text></g><g><title>`0x7FFC3F19B261 (1 samples, 0.75%)</title><rect x="74.4361%" y="741" width="0.7519%" height="15" fill="rgb(252,170,7)" fg:x="99" fg:w="1"/><text x="74.6861%" y="751.50"></text></g><g><title>`0x7FFC3F19B346 (1 samples, 0.75%)</title><rect x="74.4361%" y="725" width="0.7519%" height="15" fill="rgb(231,118,14)" fg:x="99" fg:w="1"/><text x="74.6861%" y="735.50"></text></g><g><title>`0x7FFC3F19467A (1 samples, 0.75%)</title><rect x="75.1880%" y="773" width="0.7519%" height="15" fill="rgb(238,83,0)" fg:x="100" fg:w="1"/><text x="75.4380%" y="783.50"></text></g><g><title>`0x7FFC3F194F2B (1 samples, 0.75%)</title><rect x="75.9398%" y="741" width="0.7519%" height="15" fill="rgb(221,39,39)" fg:x="101" fg:w="1"/><text x="76.1898%" y="751.50"></text></g><g><title>`0x7FFC3F19CD9A (1 samples, 0.75%)</title><rect x="76.6917%" y="725" width="0.7519%" height="15" fill="rgb(222,119,46)" fg:x="102" fg:w="1"/><text x="76.9417%" y="735.50"></text></g><g><title>`0x7FFC3F19BEEB (1 samples, 0.75%)</title><rect x="76.6917%" y="709" width="0.7519%" height="15" fill="rgb(222,165,49)" fg:x="102" fg:w="1"/><text x="76.9417%" y="719.50"></text></g><g><title>`0x7FFC3F20FA54 (1 samples, 0.75%)</title><rect x="76.6917%" y="693" width="0.7519%" height="15" fill="rgb(219,113,52)" fg:x="102" fg:w="1"/><text x="76.9417%" y="703.50"></text></g><g><title>`0x7FFC3F19C254 (2 samples, 1.50%)</title><rect x="77.4436%" y="709" width="1.5038%" height="15" fill="rgb(214,7,15)" fg:x="103" fg:w="2"/><text x="77.6936%" y="719.50"></text></g><g><title>`0x7FFC3F19C0CA (2 samples, 1.50%)</title><rect x="77.4436%" y="693" width="1.5038%" height="15" fill="rgb(235,32,4)" fg:x="103" fg:w="2"/><text x="77.6936%" y="703.50"></text></g><g><title>`0x7FFC3F19C4CC (2 samples, 1.50%)</title><rect x="77.4436%" y="677" width="1.5038%" height="15" fill="rgb(238,90,54)" fg:x="103" fg:w="2"/><text x="77.6936%" y="687.50"></text></g><g><title>`0x7FFC3F20F874 (2 samples, 1.50%)</title><rect x="77.4436%" y="661" width="1.5038%" height="15" fill="rgb(213,208,19)" fg:x="103" fg:w="2"/><text x="77.6936%" y="671.50"></text></g><g><title>`0x7FFC3F19AF85 (1 samples, 0.75%)</title><rect x="78.9474%" y="693" width="0.7519%" height="15" fill="rgb(233,156,4)" fg:x="105" fg:w="1"/><text x="79.1974%" y="703.50"></text></g><g><title>`0x7FFC3F19B4B5 (1 samples, 0.75%)</title><rect x="78.9474%" y="677" width="0.7519%" height="15" fill="rgb(207,194,5)" fg:x="105" fg:w="1"/><text x="79.1974%" y="687.50"></text></g><g><title>`0x7FFC3F19D4AE (1 samples, 0.75%)</title><rect x="78.9474%" y="661" width="0.7519%" height="15" fill="rgb(206,111,30)" fg:x="105" fg:w="1"/><text x="79.1974%" y="671.50"></text></g><g><title>`0x7FFC3F19AFAC (1 samples, 0.75%)</title><rect x="79.6992%" y="693" width="0.7519%" height="15" fill="rgb(243,70,54)" fg:x="106" fg:w="1"/><text x="79.9492%" y="703.50"></text></g><g><title>`0x7FFC3F19BC0D (1 samples, 0.75%)</title><rect x="79.6992%" y="677" width="0.7519%" height="15" fill="rgb(242,28,8)" fg:x="106" fg:w="1"/><text x="79.9492%" y="687.50"></text></g><g><title>`0x7FFC3F1A290B (1 samples, 0.75%)</title><rect x="79.6992%" y="661" width="0.7519%" height="15" fill="rgb(219,106,18)" fg:x="106" fg:w="1"/><text x="79.9492%" y="671.50"></text></g><g><title>`0x7FFC3F19C399 (3 samples, 2.26%)</title><rect x="78.9474%" y="709" width="2.2556%" height="15" fill="rgb(244,222,10)" fg:x="105" fg:w="3"/><text x="79.1974%" y="719.50">`..</text></g><g><title>`0x7FFC3F19AFC6 (1 samples, 0.75%)</title><rect x="80.4511%" y="693" width="0.7519%" height="15" fill="rgb(236,179,52)" fg:x="107" fg:w="1"/><text x="80.7011%" y="703.50"></text></g><g><title>`0x7FFC3F1946BB (1 samples, 0.75%)</title><rect x="81.2030%" y="693" width="0.7519%" height="15" fill="rgb(213,23,39)" fg:x="108" fg:w="1"/><text x="81.4530%" y="703.50"></text></g><g><title>`0x7FFC3F194906 (1 samples, 0.75%)</title><rect x="81.2030%" y="677" width="0.7519%" height="15" fill="rgb(238,48,10)" fg:x="108" fg:w="1"/><text x="81.4530%" y="687.50"></text></g><g><title>`0x7FFC3F195367 (1 samples, 0.75%)</title><rect x="81.2030%" y="661" width="0.7519%" height="15" fill="rgb(251,196,23)" fg:x="108" fg:w="1"/><text x="81.4530%" y="671.50"></text></g><g><title>`0x7FFC3F24E8EF (14 samples, 10.53%)</title><rect x="72.1805%" y="869" width="10.5263%" height="15" fill="rgb(250,152,24)" fg:x="96" fg:w="14"/><text x="72.4305%" y="879.50">`0x7FFC3F24E8EF</text></g><g><title>`0x7FFC3F1946BB (14 samples, 10.53%)</title><rect x="72.1805%" y="853" width="10.5263%" height="15" fill="rgb(209,150,17)" fg:x="96" fg:w="14"/><text x="72.4305%" y="863.50">`0x7FFC3F1946BB</text></g><g><title>`0x7FFC3F194906 (13 samples, 9.77%)</title><rect x="72.9323%" y="837" width="9.7744%" height="15" fill="rgb(234,202,34)" fg:x="97" fg:w="13"/><text x="73.1823%" y="847.50">`0x7FFC3F194906</text></g><g><title>`0x7FFC3F1958C4 (13 samples, 9.77%)</title><rect x="72.9323%" y="821" width="9.7744%" height="15" fill="rgb(253,148,53)" fg:x="97" fg:w="13"/><text x="73.1823%" y="831.50">`0x7FFC3F1958C4</text></g><g><title>`0x7FFC3F19CE29 (12 samples, 9.02%)</title><rect x="73.6842%" y="805" width="9.0226%" height="15" fill="rgb(218,129,16)" fg:x="98" fg:w="12"/><text x="73.9342%" y="815.50">`0x7FFC3F19CE..</text></g><g><title>`0x7FFC3F19C3F8 (10 samples, 7.52%)</title><rect x="75.1880%" y="789" width="7.5188%" height="15" fill="rgb(216,85,19)" fg:x="100" fg:w="10"/><text x="75.4380%" y="799.50">`0x7FFC3F1..</text></g><g><title>`0x7FFC3F1946BB (9 samples, 6.77%)</title><rect x="75.9398%" y="773" width="6.7669%" height="15" fill="rgb(235,228,7)" fg:x="101" fg:w="9"/><text x="76.1898%" y="783.50">`0x7FFC3F..</text></g><g><title>`0x7FFC3F194906 (9 samples, 6.77%)</title><rect x="75.9398%" y="757" width="6.7669%" height="15" fill="rgb(245,175,0)" fg:x="101" fg:w="9"/><text x="76.1898%" y="767.50">`0x7FFC3F..</text></g><g><title>`0x7FFC3F1958C4 (8 samples, 6.02%)</title><rect x="76.6917%" y="741" width="6.0150%" height="15" fill="rgb(208,168,36)" fg:x="102" fg:w="8"/><text x="76.9417%" y="751.50">`0x7FFC3..</text></g><g><title>`0x7FFC3F19CE29 (7 samples, 5.26%)</title><rect x="77.4436%" y="725" width="5.2632%" height="15" fill="rgb(246,171,24)" fg:x="103" fg:w="7"/><text x="77.6936%" y="735.50">`0x7FF..</text></g><g><title>`0x7FFC3F19C3F8 (2 samples, 1.50%)</title><rect x="81.2030%" y="709" width="1.5038%" height="15" fill="rgb(215,142,24)" fg:x="108" fg:w="2"/><text x="81.4530%" y="719.50"></text></g><g><title>`0x7FFC3F194749 (1 samples, 0.75%)</title><rect x="81.9549%" y="693" width="0.7519%" height="15" fill="rgb(250,187,7)" fg:x="109" fg:w="1"/><text x="82.2049%" y="703.50"></text></g><g><title>`0x7FFC3F1E2EEF (1 samples, 0.75%)</title><rect x="81.9549%" y="677" width="0.7519%" height="15" fill="rgb(228,66,33)" fg:x="109" fg:w="1"/><text x="82.2049%" y="687.50"></text></g><g><title>`0x7FFC3F1A4D44 (1 samples, 0.75%)</title><rect x="81.9549%" y="661" width="0.7519%" height="15" fill="rgb(234,215,21)" fg:x="109" fg:w="1"/><text x="82.2049%" y="671.50"></text></g><g><title>`0x7FFC3F1A4EE6 (1 samples, 0.75%)</title><rect x="81.9549%" y="645" width="0.7519%" height="15" fill="rgb(222,191,20)" fg:x="109" fg:w="1"/><text x="82.2049%" y="655.50"></text></g><g><title>`0x7FFC3F2122E4 (1 samples, 0.75%)</title><rect x="81.9549%" y="629" width="0.7519%" height="15" fill="rgb(245,79,54)" fg:x="109" fg:w="1"/><text x="82.2049%" y="639.50"></text></g><g><title>`0x7FFC3F180AFE (4 samples, 3.01%)</title><rect x="82.7068%" y="821" width="3.0075%" height="15" fill="rgb(240,10,37)" fg:x="110" fg:w="4"/><text x="82.9568%" y="831.50">`0x..</text></g><g><title>`0x7FFC3F19DB51 (4 samples, 3.01%)</title><rect x="82.7068%" y="805" width="3.0075%" height="15" fill="rgb(214,192,32)" fg:x="110" fg:w="4"/><text x="82.9568%" y="815.50">`0x..</text></g><g><title>`0x7FFC3F19A407 (4 samples, 3.01%)</title><rect x="82.7068%" y="789" width="3.0075%" height="15" fill="rgb(209,36,54)" fg:x="110" fg:w="4"/><text x="82.9568%" y="799.50">`0x..</text></g><g><title>`0x7FFC3F19AC49 (4 samples, 3.01%)</title><rect x="82.7068%" y="773" width="3.0075%" height="15" fill="rgb(220,10,11)" fg:x="110" fg:w="4"/><text x="82.9568%" y="783.50">`0x..</text></g><g><title>`0x7FFC3F20FB14 (4 samples, 3.01%)</title><rect x="82.7068%" y="757" width="3.0075%" height="15" fill="rgb(221,106,17)" fg:x="110" fg:w="4"/><text x="82.9568%" y="767.50">`0x..</text></g><g><title>`0x7FFC3F1806B6 (2 samples, 1.50%)</title><rect x="85.7143%" y="805" width="1.5038%" height="15" fill="rgb(251,142,44)" fg:x="114" fg:w="2"/><text x="85.9643%" y="815.50"></text></g><g><title>`0x7FFC3F20FCB4 (2 samples, 1.50%)</title><rect x="85.7143%" y="789" width="1.5038%" height="15" fill="rgb(238,13,15)" fg:x="114" fg:w="2"/><text x="85.9643%" y="799.50"></text></g><g><title>`0x7FFC3F19C254 (1 samples, 0.75%)</title><rect x="87.2180%" y="789" width="0.7519%" height="15" fill="rgb(208,107,27)" fg:x="116" fg:w="1"/><text x="87.4680%" y="799.50"></text></g><g><title>`0x7FFC3F19C0CA (1 samples, 0.75%)</title><rect x="87.2180%" y="773" width="0.7519%" height="15" fill="rgb(205,136,37)" fg:x="116" fg:w="1"/><text x="87.4680%" y="783.50"></text></g><g><title>`0x7FFC3F19C4CC (1 samples, 0.75%)</title><rect x="87.2180%" y="757" width="0.7519%" height="15" fill="rgb(250,205,27)" fg:x="116" fg:w="1"/><text x="87.4680%" y="767.50"></text></g><g><title>`0x7FFC3F19C399 (1 samples, 0.75%)</title><rect x="87.9699%" y="789" width="0.7519%" height="15" fill="rgb(210,80,43)" fg:x="117" fg:w="1"/><text x="88.2199%" y="799.50"></text></g><g><title>`0x7FFC3F19AF46 (1 samples, 0.75%)</title><rect x="87.9699%" y="773" width="0.7519%" height="15" fill="rgb(247,160,36)" fg:x="117" fg:w="1"/><text x="88.2199%" y="783.50"></text></g><g><title>`0x7FFC3F19B1A3 (1 samples, 0.75%)</title><rect x="87.9699%" y="757" width="0.7519%" height="15" fill="rgb(234,13,49)" fg:x="117" fg:w="1"/><text x="88.2199%" y="767.50"></text></g><g><title>`0x7FFC3F18070F (3 samples, 2.26%)</title><rect x="87.2180%" y="805" width="2.2556%" height="15" fill="rgb(234,122,0)" fg:x="116" fg:w="3"/><text x="87.4680%" y="815.50">`..</text></g><g><title>`0x7FFC3F19C3F8 (1 samples, 0.75%)</title><rect x="88.7218%" y="789" width="0.7519%" height="15" fill="rgb(207,146,38)" fg:x="118" fg:w="1"/><text x="88.9718%" y="799.50"></text></g><g><title>`0x7FFC3F1946F5 (1 samples, 0.75%)</title><rect x="88.7218%" y="773" width="0.7519%" height="15" fill="rgb(207,177,25)" fg:x="118" fg:w="1"/><text x="88.9718%" y="783.50"></text></g><g><title>`0x7FFC3F1AAB11 (1 samples, 0.75%)</title><rect x="88.7218%" y="757" width="0.7519%" height="15" fill="rgb(211,178,42)" fg:x="118" fg:w="1"/><text x="88.9718%" y="767.50"></text></g><g><title>`0x7FFC3F21C45D (1 samples, 0.75%)</title><rect x="88.7218%" y="741" width="0.7519%" height="15" fill="rgb(230,69,54)" fg:x="118" fg:w="1"/><text x="88.9718%" y="751.50"></text></g><g><title>`0x7FFC3F24E8F7 (10 samples, 7.52%)</title><rect x="82.7068%" y="869" width="7.5188%" height="15" fill="rgb(214,135,41)" fg:x="110" fg:w="10"/><text x="82.9568%" y="879.50">`0x7FFC3F2..</text></g><g><title>`0x7FFC3F19A0A0 (10 samples, 7.52%)</title><rect x="82.7068%" y="853" width="7.5188%" height="15" fill="rgb(237,67,25)" fg:x="110" fg:w="10"/><text x="82.9568%" y="863.50">`0x7FFC3F1..</text></g><g><title>`0x7FFC3F180F90 (10 samples, 7.52%)</title><rect x="82.7068%" y="837" width="7.5188%" height="15" fill="rgb(222,189,50)" fg:x="110" fg:w="10"/><text x="82.9568%" y="847.50">`0x7FFC3F1..</text></g><g><title>`0x7FFC3F180BC8 (6 samples, 4.51%)</title><rect x="85.7143%" y="821" width="4.5113%" height="15" fill="rgb(245,148,34)" fg:x="114" fg:w="6"/><text x="85.9643%" y="831.50">`0x7F..</text></g><g><title>`0x7FFC3F18072D (1 samples, 0.75%)</title><rect x="89.4737%" y="805" width="0.7519%" height="15" fill="rgb(222,29,6)" fg:x="119" fg:w="1"/><text x="89.7237%" y="815.50"></text></g><g><title>`0x7FFC3F20F554 (1 samples, 0.75%)</title><rect x="89.4737%" y="789" width="0.7519%" height="15" fill="rgb(221,189,43)" fg:x="119" fg:w="1"/><text x="89.7237%" y="799.50"></text></g><g><title>`0x7FFC3F24EA1F (1 samples, 0.75%)</title><rect x="90.2256%" y="869" width="0.7519%" height="15" fill="rgb(207,36,27)" fg:x="120" fg:w="1"/><text x="90.4756%" y="879.50"></text></g><g><title>`0x7FFC3F1F539C (1 samples, 0.75%)</title><rect x="90.2256%" y="853" width="0.7519%" height="15" fill="rgb(217,90,24)" fg:x="120" fg:w="1"/><text x="90.4756%" y="863.50"></text></g><g><title>`0x7FFC3DDE5BA7 (1 samples, 0.75%)</title><rect x="90.2256%" y="837" width="0.7519%" height="15" fill="rgb(224,66,35)" fg:x="120" fg:w="1"/><text x="90.4756%" y="847.50"></text></g><g><title>`0x7FFC3BE7A067 (1 samples, 0.75%)</title><rect x="90.9774%" y="789" width="0.7519%" height="15" fill="rgb(221,13,50)" fg:x="121" fg:w="1"/><text x="91.2274%" y="799.50"></text></g><g><title>`0x7FFC3BE7359F (1 samples, 0.75%)</title><rect x="90.9774%" y="773" width="0.7519%" height="15" fill="rgb(236,68,49)" fg:x="121" fg:w="1"/><text x="91.2274%" y="783.50"></text></g><g><title>`0x7FFC3BE765F4 (1 samples, 0.75%)</title><rect x="90.9774%" y="757" width="0.7519%" height="15" fill="rgb(229,146,28)" fg:x="121" fg:w="1"/><text x="91.2274%" y="767.50"></text></g><g><title>`0x7FFC3F1A14E0 (1 samples, 0.75%)</title><rect x="90.9774%" y="741" width="0.7519%" height="15" fill="rgb(225,31,38)" fg:x="121" fg:w="1"/><text x="91.2274%" y="751.50"></text></g><g><title>`0x7FFC3F1A21CA (1 samples, 0.75%)</title><rect x="90.9774%" y="725" width="0.7519%" height="15" fill="rgb(250,208,3)" fg:x="121" fg:w="1"/><text x="91.2274%" y="735.50"></text></g><g><title>`0x7FFC3F1A2057 (1 samples, 0.75%)</title><rect x="90.9774%" y="709" width="0.7519%" height="15" fill="rgb(246,54,23)" fg:x="121" fg:w="1"/><text x="91.2274%" y="719.50"></text></g><g><title>`0x7FFC3F212DC4 (1 samples, 0.75%)</title><rect x="90.9774%" y="693" width="0.7519%" height="15" fill="rgb(243,76,11)" fg:x="121" fg:w="1"/><text x="91.2274%" y="703.50"></text></g><g><title>`0x7FFC3E56ABA0 (1 samples, 0.75%)</title><rect x="91.7293%" y="757" width="0.7519%" height="15" fill="rgb(245,21,50)" fg:x="122" fg:w="1"/><text x="91.9793%" y="767.50"></text></g><g><title>`0x7FFC3F1DCDFE (3 samples, 2.26%)</title><rect x="90.9774%" y="837" width="2.2556%" height="15" fill="rgb(228,9,43)" fg:x="121" fg:w="3"/><text x="91.2274%" y="847.50">`..</text></g><g><title>`0x7FFC3F1DD04D (3 samples, 2.26%)</title><rect x="90.9774%" y="821" width="2.2556%" height="15" fill="rgb(208,100,47)" fg:x="121" fg:w="3"/><text x="91.2274%" y="831.50">`..</text></g><g><title>`0x7FFC3F19869F (3 samples, 2.26%)</title><rect x="90.9774%" y="805" width="2.2556%" height="15" fill="rgb(232,26,8)" fg:x="121" fg:w="3"/><text x="91.2274%" y="815.50">`..</text></g><g><title>`0x7FFC3E564829 (2 samples, 1.50%)</title><rect x="91.7293%" y="789" width="1.5038%" height="15" fill="rgb(216,166,38)" fg:x="122" fg:w="2"/><text x="91.9793%" y="799.50"></text></g><g><title>`0x7FFC3E564908 (2 samples, 1.50%)</title><rect x="91.7293%" y="773" width="1.5038%" height="15" fill="rgb(251,202,51)" fg:x="122" fg:w="2"/><text x="91.9793%" y="783.50"></text></g><g><title>`0x7FFC3E5744D6 (1 samples, 0.75%)</title><rect x="92.4812%" y="757" width="0.7519%" height="15" fill="rgb(254,216,34)" fg:x="123" fg:w="1"/><text x="92.7312%" y="767.50"></text></g><g><title>`0x7FFC3F1A14E0 (1 samples, 0.75%)</title><rect x="92.4812%" y="741" width="0.7519%" height="15" fill="rgb(251,32,27)" fg:x="123" fg:w="1"/><text x="92.7312%" y="751.50"></text></g><g><title>`0x7FFC3F1A2179 (1 samples, 0.75%)</title><rect x="92.4812%" y="725" width="0.7519%" height="15" fill="rgb(208,127,28)" fg:x="123" fg:w="1"/><text x="92.7312%" y="735.50"></text></g><g><title>`0x7FFC3F1A22D9 (1 samples, 0.75%)</title><rect x="92.4812%" y="709" width="0.7519%" height="15" fill="rgb(224,137,22)" fg:x="123" fg:w="1"/><text x="92.7312%" y="719.50"></text></g><g><title>`0x7FFC3F1AC7BA (1 samples, 0.75%)</title><rect x="92.4812%" y="693" width="0.7519%" height="15" fill="rgb(254,70,32)" fg:x="123" fg:w="1"/><text x="92.7312%" y="703.50"></text></g><g><title>`0x7FFC3F1AD082 (1 samples, 0.75%)</title><rect x="92.4812%" y="677" width="0.7519%" height="15" fill="rgb(229,75,37)" fg:x="123" fg:w="1"/><text x="92.7312%" y="687.50"></text></g><g><title>`0x7FFC3CDB8138 (1 samples, 0.75%)</title><rect x="93.2331%" y="757" width="0.7519%" height="15" fill="rgb(252,64,23)" fg:x="124" fg:w="1"/><text x="93.4831%" y="767.50"></text></g><g><title>`0x7FFC3CDF1FC1 (1 samples, 0.75%)</title><rect x="93.2331%" y="741" width="0.7519%" height="15" fill="rgb(232,162,48)" fg:x="124" fg:w="1"/><text x="93.4831%" y="751.50"></text></g><g><title>`0x7FFC3CDF2E54 (1 samples, 0.75%)</title><rect x="93.2331%" y="725" width="0.7519%" height="15" fill="rgb(246,160,12)" fg:x="124" fg:w="1"/><text x="93.4831%" y="735.50"></text></g><g><title>`0x7FFC3CDA6544 (1 samples, 0.75%)</title><rect x="93.9850%" y="741" width="0.7519%" height="15" fill="rgb(247,166,0)" fg:x="125" fg:w="1"/><text x="94.2350%" y="751.50"></text></g><g><title>`0x7FFC3CDA65D0 (1 samples, 0.75%)</title><rect x="93.9850%" y="725" width="0.7519%" height="15" fill="rgb(249,219,21)" fg:x="125" fg:w="1"/><text x="94.2350%" y="735.50"></text></g><g><title>`0x7FFC3CDB1AD0 (1 samples, 0.75%)</title><rect x="93.9850%" y="709" width="0.7519%" height="15" fill="rgb(205,209,3)" fg:x="125" fg:w="1"/><text x="94.2350%" y="719.50"></text></g><g><title>`0x7FFC3CDB7853 (3 samples, 2.26%)</title><rect x="93.2331%" y="773" width="2.2556%" height="15" fill="rgb(243,44,1)" fg:x="124" fg:w="3"/><text x="93.4831%" y="783.50">`..</text></g><g><title>`0x7FFC3CDB816A (2 samples, 1.50%)</title><rect x="93.9850%" y="757" width="1.5038%" height="15" fill="rgb(206,159,16)" fg:x="125" fg:w="2"/><text x="94.2350%" y="767.50"></text></g><g><title>`0x7FFC3CDC7869 (1 samples, 0.75%)</title><rect x="94.7368%" y="741" width="0.7519%" height="15" fill="rgb(244,77,30)" fg:x="126" fg:w="1"/><text x="94.9868%" y="751.50"></text></g><g><title>`0x7FFC3CDC78B8 (1 samples, 0.75%)</title><rect x="94.7368%" y="725" width="0.7519%" height="15" fill="rgb(218,69,12)" fg:x="126" fg:w="1"/><text x="94.9868%" y="735.50"></text></g><g><title>`0x7FFC3CDA6AD0 (1 samples, 0.75%)</title><rect x="94.7368%" y="709" width="0.7519%" height="15" fill="rgb(212,87,7)" fg:x="126" fg:w="1"/><text x="94.9868%" y="719.50"></text></g><g><title>`0x7FFC3CDA8A7C (1 samples, 0.75%)</title><rect x="94.7368%" y="693" width="0.7519%" height="15" fill="rgb(245,114,25)" fg:x="126" fg:w="1"/><text x="94.9868%" y="703.50"></text></g><g><title>`0x7FFC3C5D5335 (1 samples, 0.75%)</title><rect x="94.7368%" y="677" width="0.7519%" height="15" fill="rgb(210,61,42)" fg:x="126" fg:w="1"/><text x="94.9868%" y="687.50"></text></g><g><title>`0x7FFC3C5D5703 (1 samples, 0.75%)</title><rect x="94.7368%" y="661" width="0.7519%" height="15" fill="rgb(211,52,33)" fg:x="126" fg:w="1"/><text x="94.9868%" y="671.50"></text></g><g><title>`0x7FFC3D117BE7 (1 samples, 0.75%)</title><rect x="95.4887%" y="773" width="0.7519%" height="15" fill="rgb(234,58,33)" fg:x="127" fg:w="1"/><text x="95.7387%" y="783.50"></text></g><g><title>`0x7FFC3D117EEC (1 samples, 0.75%)</title><rect x="95.4887%" y="757" width="0.7519%" height="15" fill="rgb(220,115,36)" fg:x="127" fg:w="1"/><text x="95.7387%" y="767.50"></text></g><g><title>`0x7FFC3D14E282 (1 samples, 0.75%)</title><rect x="95.4887%" y="741" width="0.7519%" height="15" fill="rgb(243,153,54)" fg:x="127" fg:w="1"/><text x="95.7387%" y="751.50"></text></g><g><title>`0x7FFC3D14E1EA (1 samples, 0.75%)</title><rect x="95.4887%" y="725" width="0.7519%" height="15" fill="rgb(251,47,18)" fg:x="127" fg:w="1"/><text x="95.7387%" y="735.50"></text></g><g><title>`0x7FFC3D13BAC3 (1 samples, 0.75%)</title><rect x="95.4887%" y="709" width="0.7519%" height="15" fill="rgb(242,102,42)" fg:x="127" fg:w="1"/><text x="95.7387%" y="719.50"></text></g><g><title>`0x7FFC3D117C2F (1 samples, 0.75%)</title><rect x="96.2406%" y="773" width="0.7519%" height="15" fill="rgb(234,31,38)" fg:x="128" fg:w="1"/><text x="96.4906%" y="783.50"></text></g><g><title>`0x7FFC3D1339A2 (1 samples, 0.75%)</title><rect x="96.2406%" y="757" width="0.7519%" height="15" fill="rgb(221,117,51)" fg:x="128" fg:w="1"/><text x="96.4906%" y="767.50"></text></g><g><title>`0x7FFC3D133BA4 (1 samples, 0.75%)</title><rect x="96.2406%" y="741" width="0.7519%" height="15" fill="rgb(212,20,18)" fg:x="128" fg:w="1"/><text x="96.4906%" y="751.50"></text></g><g><title>`0x7FFC3D133F73 (1 samples, 0.75%)</title><rect x="96.2406%" y="725" width="0.7519%" height="15" fill="rgb(245,133,36)" fg:x="128" fg:w="1"/><text x="96.4906%" y="735.50"></text></g><g><title>`0x7FFC3D13387A (1 samples, 0.75%)</title><rect x="96.2406%" y="709" width="0.7519%" height="15" fill="rgb(212,6,19)" fg:x="128" fg:w="1"/><text x="96.4906%" y="719.50"></text></g><g><title>`0x7FFC3D1439F4 (1 samples, 0.75%)</title><rect x="96.2406%" y="693" width="0.7519%" height="15" fill="rgb(218,1,36)" fg:x="128" fg:w="1"/><text x="96.4906%" y="703.50"></text></g><g><title>`0x7FFC3D14394B (1 samples, 0.75%)</title><rect x="96.2406%" y="677" width="0.7519%" height="15" fill="rgb(246,84,54)" fg:x="128" fg:w="1"/><text x="96.4906%" y="687.50"></text></g><g><title>`0x7FFC3C5E56CE (1 samples, 0.75%)</title><rect x="96.2406%" y="661" width="0.7519%" height="15" fill="rgb(242,110,6)" fg:x="128" fg:w="1"/><text x="96.4906%" y="671.50"></text></g><g><title>`0x7FFC3D117C34 (1 samples, 0.75%)</title><rect x="96.9925%" y="773" width="0.7519%" height="15" fill="rgb(214,47,5)" fg:x="129" fg:w="1"/><text x="97.2425%" y="783.50"></text></g><g><title>`0x7FFC3D14F818 (1 samples, 0.75%)</title><rect x="96.9925%" y="757" width="0.7519%" height="15" fill="rgb(218,159,25)" fg:x="129" fg:w="1"/><text x="97.2425%" y="767.50"></text></g><g><title>`0x7FFC3F24EA75 (10 samples, 7.52%)</title><rect x="90.9774%" y="869" width="7.5188%" height="15" fill="rgb(215,211,28)" fg:x="121" fg:w="10"/><text x="91.2274%" y="879.50">`0x7FFC3F2..</text></g><g><title>`0x7FFC3F1DCE70 (10 samples, 7.52%)</title><rect x="90.9774%" y="853" width="7.5188%" height="15" fill="rgb(238,59,32)" fg:x="121" fg:w="10"/><text x="91.2274%" y="863.50">`0x7FFC3F1..</text></g><g><title>`0x7FFC3F1DCE70 (7 samples, 5.26%)</title><rect x="93.2331%" y="837" width="5.2632%" height="15" fill="rgb(226,82,3)" fg:x="124" fg:w="7"/><text x="93.4831%" y="847.50">`0x7FF..</text></g><g><title>`0x7FFC3F1DCDFE (7 samples, 5.26%)</title><rect x="93.2331%" y="821" width="5.2632%" height="15" fill="rgb(240,164,32)" fg:x="124" fg:w="7"/><text x="93.4831%" y="831.50">`0x7FF..</text></g><g><title>`0x7FFC3F1DD04D (7 samples, 5.26%)</title><rect x="93.2331%" y="805" width="5.2632%" height="15" fill="rgb(232,46,7)" fg:x="124" fg:w="7"/><text x="93.4831%" y="815.50">`0x7FF..</text></g><g><title>`0x7FFC3F19869F (7 samples, 5.26%)</title><rect x="93.2331%" y="789" width="5.2632%" height="15" fill="rgb(229,129,53)" fg:x="124" fg:w="7"/><text x="93.4831%" y="799.50">`0x7FF..</text></g><g><title>`0x7FFC3F0979AA (1 samples, 0.75%)</title><rect x="97.7444%" y="773" width="0.7519%" height="15" fill="rgb(234,188,29)" fg:x="130" fg:w="1"/><text x="97.9944%" y="783.50"></text></g><g><title>`0x7FFC3F0986C5 (1 samples, 0.75%)</title><rect x="97.7444%" y="757" width="0.7519%" height="15" fill="rgb(246,141,4)" fg:x="130" fg:w="1"/><text x="97.9944%" y="767.50"></text></g><g><title>`0x7FFC3F092528 (1 samples, 0.75%)</title><rect x="97.7444%" y="741" width="0.7519%" height="15" fill="rgb(229,23,39)" fg:x="130" fg:w="1"/><text x="97.9944%" y="751.50"></text></g><g><title>`0x7FFC3F092615 (1 samples, 0.75%)</title><rect x="97.7444%" y="725" width="0.7519%" height="15" fill="rgb(206,12,3)" fg:x="130" fg:w="1"/><text x="97.9944%" y="735.50"></text></g><g><title>`0x7FFC3F0930B0 (1 samples, 0.75%)</title><rect x="97.7444%" y="709" width="0.7519%" height="15" fill="rgb(252,226,20)" fg:x="130" fg:w="1"/><text x="97.9944%" y="719.50"></text></g><g><title>`0x7FFC3F1A14E0 (1 samples, 0.75%)</title><rect x="97.7444%" y="693" width="0.7519%" height="15" fill="rgb(216,123,35)" fg:x="130" fg:w="1"/><text x="97.9944%" y="703.50"></text></g><g><title>`0x7FFC3F1A21CA (1 samples, 0.75%)</title><rect x="97.7444%" y="677" width="0.7519%" height="15" fill="rgb(212,68,40)" fg:x="130" fg:w="1"/><text x="97.9944%" y="687.50"></text></g><g><title>`0x7FFC3F1A2057 (1 samples, 0.75%)</title><rect x="97.7444%" y="661" width="0.7519%" height="15" fill="rgb(254,125,32)" fg:x="130" fg:w="1"/><text x="97.9944%" y="671.50"></text></g><g><title>`0x7FFC3F212DC4 (1 samples, 0.75%)</title><rect x="97.7444%" y="645" width="0.7519%" height="15" fill="rgb(253,97,22)" fg:x="130" fg:w="1"/><text x="97.9944%" y="655.50"></text></g><g><title>`0x7FFC3F1E3EB3 (68 samples, 51.13%)</title><rect x="48.1203%" y="901" width="51.1278%" height="15" fill="rgb(241,101,14)" fg:x="64" fg:w="68"/><text x="48.3703%" y="911.50">`0x7FFC3F1E3EB3</text></g><g><title>`0x7FFC3F23A184 (68 samples, 51.13%)</title><rect x="48.1203%" y="885" width="51.1278%" height="15" fill="rgb(238,103,29)" fg:x="64" fg:w="68"/><text x="48.3703%" y="895.50">`0x7FFC3F23A184</text></g><g><title>`0x7FFC3F24EAEE (1 samples, 0.75%)</title><rect x="98.4962%" y="869" width="0.7519%" height="15" fill="rgb(233,195,47)" fg:x="131" fg:w="1"/><text x="98.7462%" y="879.50"></text></g><g><title>`0x7FFC3F1EF0D4 (1 samples, 0.75%)</title><rect x="98.4962%" y="853" width="0.7519%" height="15" fill="rgb(246,218,30)" fg:x="131" fg:w="1"/><text x="98.7462%" y="863.50"></text></g><g><title>`0x7FFC3F20F5B4 (1 samples, 0.75%)</title><rect x="98.4962%" y="837" width="0.7519%" height="15" fill="rgb(219,145,47)" fg:x="131" fg:w="1"/><text x="98.7462%" y="847.50"></text></g><g><title>all (133 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(243,12,26)" fg:x="0" fg:w="133"/><text x="0.2500%" y="943.50"></text></g><g><title>`0x7FFC3F1E3DDE (69 samples, 51.88%)</title><rect x="48.1203%" y="917" width="51.8797%" height="15" fill="rgb(214,87,16)" fg:x="64" fg:w="69"/><text x="48.3703%" y="927.50">`0x7FFC3F1E3DDE</text></g><g><title>`0x7FFC3F21D3F3 (1 samples, 0.75%)</title><rect x="99.2481%" y="901" width="0.7519%" height="15" fill="rgb(208,99,42)" fg:x="132" fg:w="1"/><text x="99.4981%" y="911.50"></text></g><g><title>`0x7FFC3F21DB8D (1 samples, 0.75%)</title><rect x="99.2481%" y="885" width="0.7519%" height="15" fill="rgb(253,99,2)" fg:x="132" fg:w="1"/><text x="99.4981%" y="895.50"></text></g><g><title>`0x7FFC3F19B162 (1 samples, 0.75%)</title><rect x="99.2481%" y="869" width="0.7519%" height="15" fill="rgb(220,168,23)" fg:x="132" fg:w="1"/><text x="99.4981%" y="879.50"></text></g></svg></svg>