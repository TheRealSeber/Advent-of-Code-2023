<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="886" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="869.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="869.00"> </text><svg id="frames" x="10" width="1180" total_samples="149"><g><title>`0x7FFE9FA4AA30 (3 samples, 2.01%)</title><rect x="0.0000%" y="821" width="2.0134%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="831.50">`..</text></g><g><title>`0x7FFE9FA522F8 (1 samples, 0.67%)</title><rect x="2.0134%" y="773" width="0.6711%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="1"/><text x="2.2634%" y="783.50"></text></g><g><title>`0x7FFE9FA3E722 (1 samples, 0.67%)</title><rect x="2.0134%" y="757" width="0.6711%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="1"/><text x="2.2634%" y="767.50"></text></g><g><title>`0x7FFE9FA24EE6 (1 samples, 0.67%)</title><rect x="2.0134%" y="741" width="0.6711%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="1"/><text x="2.2634%" y="751.50"></text></g><g><title>`0x7FFE9FA922E4 (1 samples, 0.67%)</title><rect x="2.0134%" y="725" width="0.6711%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="1"/><text x="2.2634%" y="735.50"></text></g><g><title>`0x7FFE9FA13B68 (1 samples, 0.67%)</title><rect x="2.6846%" y="725" width="0.6711%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="1"/><text x="2.9346%" y="735.50"></text></g><g><title>`0x7FFE9FA13C57 (4 samples, 2.68%)</title><rect x="3.3557%" y="725" width="2.6846%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="4"/><text x="3.6057%" y="735.50">`0..</text></g><g><title>`0x7FFE9FA13C66 (6 samples, 4.03%)</title><rect x="6.0403%" y="725" width="4.0268%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="6"/><text x="6.2903%" y="735.50">`0x7..</text></g><g><title>`0x7FFE9FA13CD5 (1 samples, 0.67%)</title><rect x="10.0671%" y="725" width="0.6711%" height="15" fill="rgb(218,30,26)" fg:x="15" fg:w="1"/><text x="10.3171%" y="735.50"></text></g><g><title>`0x7FFE9FA00E8B (13 samples, 8.72%)</title><rect x="2.6846%" y="741" width="8.7248%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="13"/><text x="2.9346%" y="751.50">`0x7FFE9FA00..</text></g><g><title>`0x7FFE9FA13CDB (1 samples, 0.67%)</title><rect x="10.7383%" y="725" width="0.6711%" height="15" fill="rgb(250,228,42)" fg:x="16" fg:w="1"/><text x="10.9883%" y="735.50"></text></g><g><title>`0x7FFE9FA1D9E8 (1 samples, 0.67%)</title><rect x="11.4094%" y="709" width="0.6711%" height="15" fill="rgb(240,193,28)" fg:x="17" fg:w="1"/><text x="11.6594%" y="719.50"></text></g><g><title>`0x7FFE9FA6A8EA (1 samples, 0.67%)</title><rect x="11.4094%" y="693" width="0.6711%" height="15" fill="rgb(216,20,37)" fg:x="17" fg:w="1"/><text x="11.6594%" y="703.50"></text></g><g><title>`0x7FFE9FA216A8 (1 samples, 0.67%)</title><rect x="11.4094%" y="677" width="0.6711%" height="15" fill="rgb(206,188,39)" fg:x="17" fg:w="1"/><text x="11.6594%" y="687.50"></text></g><g><title>`0x7FFE9FA2192F (1 samples, 0.67%)</title><rect x="11.4094%" y="661" width="0.6711%" height="15" fill="rgb(217,207,13)" fg:x="17" fg:w="1"/><text x="11.6594%" y="671.50"></text></g><g><title>`0x7FFE9FA59DD3 (1 samples, 0.67%)</title><rect x="11.4094%" y="645" width="0.6711%" height="15" fill="rgb(231,73,38)" fg:x="17" fg:w="1"/><text x="11.6594%" y="655.50"></text></g><g><title>`0x7FFE9FA5A5BA (1 samples, 0.67%)</title><rect x="11.4094%" y="629" width="0.6711%" height="15" fill="rgb(225,20,46)" fg:x="17" fg:w="1"/><text x="11.6594%" y="639.50"></text></g><g><title>`0x7FFE9FA8F654 (1 samples, 0.67%)</title><rect x="11.4094%" y="613" width="0.6711%" height="15" fill="rgb(210,31,41)" fg:x="17" fg:w="1"/><text x="11.6594%" y="623.50"></text></g><g><title>`0x7FFE9FA00AFE (9 samples, 6.04%)</title><rect x="11.4094%" y="725" width="6.0403%" height="15" fill="rgb(221,200,47)" fg:x="17" fg:w="9"/><text x="11.6594%" y="735.50">`0x7FFE9..</text></g><g><title>`0x7FFE9FA1DB51 (8 samples, 5.37%)</title><rect x="12.0805%" y="709" width="5.3691%" height="15" fill="rgb(226,26,5)" fg:x="18" fg:w="8"/><text x="12.3305%" y="719.50">`0x7FFE..</text></g><g><title>`0x7FFE9FA1A407 (8 samples, 5.37%)</title><rect x="12.0805%" y="693" width="5.3691%" height="15" fill="rgb(249,33,26)" fg:x="18" fg:w="8"/><text x="12.3305%" y="703.50">`0x7FFE..</text></g><g><title>`0x7FFE9FA1AC49 (8 samples, 5.37%)</title><rect x="12.0805%" y="677" width="5.3691%" height="15" fill="rgb(235,183,28)" fg:x="18" fg:w="8"/><text x="12.3305%" y="687.50">`0x7FFE..</text></g><g><title>`0x7FFE9FA8FB14 (8 samples, 5.37%)</title><rect x="12.0805%" y="661" width="5.3691%" height="15" fill="rgb(221,5,38)" fg:x="18" fg:w="8"/><text x="12.3305%" y="671.50">`0x7FFE..</text></g><g><title>`0x7FFE9FA0065C (3 samples, 2.01%)</title><rect x="17.4497%" y="709" width="2.0134%" height="15" fill="rgb(247,18,42)" fg:x="26" fg:w="3"/><text x="17.6997%" y="719.50">`..</text></g><g><title>`0x7FFE9FA8F9D4 (3 samples, 2.01%)</title><rect x="17.4497%" y="693" width="2.0134%" height="15" fill="rgb(241,131,45)" fg:x="26" fg:w="3"/><text x="17.6997%" y="703.50">`..</text></g><g><title>`0x7FFE9FA006B6 (1 samples, 0.67%)</title><rect x="19.4631%" y="709" width="0.6711%" height="15" fill="rgb(249,31,29)" fg:x="29" fg:w="1"/><text x="19.7131%" y="719.50"></text></g><g><title>`0x7FFE9FA8FCB4 (1 samples, 0.67%)</title><rect x="19.4631%" y="693" width="0.6711%" height="15" fill="rgb(225,111,53)" fg:x="29" fg:w="1"/><text x="19.7131%" y="703.50"></text></g><g><title>`0x7FFE9FA1C254 (2 samples, 1.34%)</title><rect x="20.1342%" y="693" width="1.3423%" height="15" fill="rgb(238,160,17)" fg:x="30" fg:w="2"/><text x="20.3842%" y="703.50"></text></g><g><title>`0x7FFE9FA1C0CA (2 samples, 1.34%)</title><rect x="20.1342%" y="677" width="1.3423%" height="15" fill="rgb(214,148,48)" fg:x="30" fg:w="2"/><text x="20.3842%" y="687.50"></text></g><g><title>`0x7FFE9FA1C4CC (2 samples, 1.34%)</title><rect x="20.1342%" y="661" width="1.3423%" height="15" fill="rgb(232,36,49)" fg:x="30" fg:w="2"/><text x="20.3842%" y="671.50"></text></g><g><title>`0x7FFE9FA8F874 (2 samples, 1.34%)</title><rect x="20.1342%" y="645" width="1.3423%" height="15" fill="rgb(209,103,24)" fg:x="30" fg:w="2"/><text x="20.3842%" y="655.50"></text></g><g><title>`0x7FFE9FA1AF46 (1 samples, 0.67%)</title><rect x="21.4765%" y="677" width="0.6711%" height="15" fill="rgb(229,88,8)" fg:x="32" fg:w="1"/><text x="21.7265%" y="687.50"></text></g><g><title>`0x7FFE9FA1B1A3 (1 samples, 0.67%)</title><rect x="21.4765%" y="661" width="0.6711%" height="15" fill="rgb(213,181,19)" fg:x="32" fg:w="1"/><text x="21.7265%" y="671.50"></text></g><g><title>`0x7FFE9FA1C399 (2 samples, 1.34%)</title><rect x="21.4765%" y="693" width="1.3423%" height="15" fill="rgb(254,191,54)" fg:x="32" fg:w="2"/><text x="21.7265%" y="703.50"></text></g><g><title>`0x7FFE9FA1AFAC (1 samples, 0.67%)</title><rect x="22.1477%" y="677" width="0.6711%" height="15" fill="rgb(241,83,37)" fg:x="33" fg:w="1"/><text x="22.3977%" y="687.50"></text></g><g><title>`0x7FFE9FA1BC0D (1 samples, 0.67%)</title><rect x="22.1477%" y="661" width="0.6711%" height="15" fill="rgb(233,36,39)" fg:x="33" fg:w="1"/><text x="22.3977%" y="671.50"></text></g><g><title>`0x7FFE9FA2290B (1 samples, 0.67%)</title><rect x="22.1477%" y="645" width="0.6711%" height="15" fill="rgb(226,3,54)" fg:x="33" fg:w="1"/><text x="22.3977%" y="655.50"></text></g><g><title>`0x7FFE9FA0070F (5 samples, 3.36%)</title><rect x="20.1342%" y="709" width="3.3557%" height="15" fill="rgb(245,192,40)" fg:x="30" fg:w="5"/><text x="20.3842%" y="719.50">`0x..</text></g><g><title>`0x7FFE9FA1C3F8 (1 samples, 0.67%)</title><rect x="22.8188%" y="693" width="0.6711%" height="15" fill="rgb(238,167,29)" fg:x="34" fg:w="1"/><text x="23.0688%" y="703.50"></text></g><g><title>`0x7FFE9FA146BB (1 samples, 0.67%)</title><rect x="22.8188%" y="677" width="0.6711%" height="15" fill="rgb(232,182,51)" fg:x="34" fg:w="1"/><text x="23.0688%" y="687.50"></text></g><g><title>`0x7FFE9FA14906 (1 samples, 0.67%)</title><rect x="22.8188%" y="661" width="0.6711%" height="15" fill="rgb(231,60,39)" fg:x="34" fg:w="1"/><text x="23.0688%" y="671.50"></text></g><g><title>`0x7FFE9FA14E71 (1 samples, 0.67%)</title><rect x="22.8188%" y="645" width="0.6711%" height="15" fill="rgb(208,69,12)" fg:x="34" fg:w="1"/><text x="23.0688%" y="655.50"></text></g><g><title>`0x7FFE9FA097D4 (1 samples, 0.67%)</title><rect x="22.8188%" y="629" width="0.6711%" height="15" fill="rgb(235,93,37)" fg:x="34" fg:w="1"/><text x="23.0688%" y="639.50"></text></g><g><title>`0x7FFE9FA25986 (34 samples, 22.82%)</title><rect x="2.0134%" y="789" width="22.8188%" height="15" fill="rgb(213,116,39)" fg:x="3" fg:w="34"/><text x="2.2634%" y="799.50">`0x7FFE9FA25986</text></g><g><title>`0x7FFE9FA523CA (33 samples, 22.15%)</title><rect x="2.6846%" y="773" width="22.1477%" height="15" fill="rgb(222,207,29)" fg:x="4" fg:w="33"/><text x="2.9346%" y="783.50">`0x7FFE9FA523CA</text></g><g><title>`0x7FFE9FA00DCB (33 samples, 22.15%)</title><rect x="2.6846%" y="757" width="22.1477%" height="15" fill="rgb(206,96,30)" fg:x="4" fg:w="33"/><text x="2.9346%" y="767.50">`0x7FFE9FA00DCB</text></g><g><title>`0x7FFE9FA00F90 (20 samples, 13.42%)</title><rect x="11.4094%" y="741" width="13.4228%" height="15" fill="rgb(218,138,4)" fg:x="17" fg:w="20"/><text x="11.6594%" y="751.50">`0x7FFE9FA00F90</text></g><g><title>`0x7FFE9FA00BC8 (11 samples, 7.38%)</title><rect x="17.4497%" y="725" width="7.3826%" height="15" fill="rgb(250,191,14)" fg:x="26" fg:w="11"/><text x="17.6997%" y="735.50">`0x7FFE9FA..</text></g><g><title>`0x7FFE9FA0072D (2 samples, 1.34%)</title><rect x="23.4899%" y="709" width="1.3423%" height="15" fill="rgb(239,60,40)" fg:x="35" fg:w="2"/><text x="23.7399%" y="719.50"></text></g><g><title>`0x7FFE9FA8F554 (2 samples, 1.34%)</title><rect x="23.4899%" y="693" width="1.3423%" height="15" fill="rgb(206,27,48)" fg:x="35" fg:w="2"/><text x="23.7399%" y="703.50"></text></g><g><title>`0x7FFE9FA01082 (2 samples, 1.34%)</title><rect x="24.8322%" y="629" width="1.3423%" height="15" fill="rgb(225,35,8)" fg:x="37" fg:w="2"/><text x="25.0822%" y="639.50"></text></g><g><title>`0x7FFE9FA1A407 (2 samples, 1.34%)</title><rect x="24.8322%" y="613" width="1.3423%" height="15" fill="rgb(250,213,24)" fg:x="37" fg:w="2"/><text x="25.0822%" y="623.50"></text></g><g><title>`0x7FFE9FA1AC49 (2 samples, 1.34%)</title><rect x="24.8322%" y="597" width="1.3423%" height="15" fill="rgb(247,123,22)" fg:x="37" fg:w="2"/><text x="25.0822%" y="607.50"></text></g><g><title>`0x7FFE9FA8FB14 (2 samples, 1.34%)</title><rect x="24.8322%" y="581" width="1.3423%" height="15" fill="rgb(231,138,38)" fg:x="37" fg:w="2"/><text x="25.0822%" y="591.50"></text></g><g><title>`0x7FFE9FA0065C (1 samples, 0.67%)</title><rect x="26.1745%" y="613" width="0.6711%" height="15" fill="rgb(231,145,46)" fg:x="39" fg:w="1"/><text x="26.4245%" y="623.50"></text></g><g><title>`0x7FFE9FA8F9D4 (1 samples, 0.67%)</title><rect x="26.1745%" y="597" width="0.6711%" height="15" fill="rgb(251,118,11)" fg:x="39" fg:w="1"/><text x="26.4245%" y="607.50"></text></g><g><title>`0x7FFE9FA1C254 (1 samples, 0.67%)</title><rect x="26.8456%" y="597" width="0.6711%" height="15" fill="rgb(217,147,25)" fg:x="40" fg:w="1"/><text x="27.0956%" y="607.50"></text></g><g><title>`0x7FFE9FA1C0CA (1 samples, 0.67%)</title><rect x="26.8456%" y="581" width="0.6711%" height="15" fill="rgb(247,81,37)" fg:x="40" fg:w="1"/><text x="27.0956%" y="591.50"></text></g><g><title>`0x7FFE9FA1C4CC (1 samples, 0.67%)</title><rect x="26.8456%" y="565" width="0.6711%" height="15" fill="rgb(209,12,38)" fg:x="40" fg:w="1"/><text x="27.0956%" y="575.50"></text></g><g><title>`0x7FFE9FA8F874 (1 samples, 0.67%)</title><rect x="26.8456%" y="549" width="0.6711%" height="15" fill="rgb(227,1,9)" fg:x="40" fg:w="1"/><text x="27.0956%" y="559.50"></text></g><g><title>`0x7FFE9FA1C399 (1 samples, 0.67%)</title><rect x="27.5168%" y="597" width="0.6711%" height="15" fill="rgb(248,47,43)" fg:x="41" fg:w="1"/><text x="27.7668%" y="607.50"></text></g><g><title>`0x7FFE9FA1AF46 (1 samples, 0.67%)</title><rect x="27.5168%" y="581" width="0.6711%" height="15" fill="rgb(221,10,30)" fg:x="41" fg:w="1"/><text x="27.7668%" y="591.50"></text></g><g><title>`0x7FFE9FA1B1A3 (1 samples, 0.67%)</title><rect x="27.5168%" y="565" width="0.6711%" height="15" fill="rgb(210,229,1)" fg:x="41" fg:w="1"/><text x="27.7668%" y="575.50"></text></g><g><title>`0x7FFE9FA146BB (1 samples, 0.67%)</title><rect x="28.1879%" y="581" width="0.6711%" height="15" fill="rgb(222,148,37)" fg:x="42" fg:w="1"/><text x="28.4379%" y="591.50"></text></g><g><title>`0x7FFE9FA14906 (1 samples, 0.67%)</title><rect x="28.1879%" y="565" width="0.6711%" height="15" fill="rgb(234,67,33)" fg:x="42" fg:w="1"/><text x="28.4379%" y="575.50"></text></g><g><title>`0x7FFE9FA15BF7 (1 samples, 0.67%)</title><rect x="28.1879%" y="549" width="0.6711%" height="15" fill="rgb(247,98,35)" fg:x="42" fg:w="1"/><text x="28.4379%" y="559.50"></text></g><g><title>`0x7FFE9FA0070F (4 samples, 2.68%)</title><rect x="26.8456%" y="613" width="2.6846%" height="15" fill="rgb(247,138,52)" fg:x="40" fg:w="4"/><text x="27.0956%" y="623.50">`0..</text></g><g><title>`0x7FFE9FA1C3F8 (2 samples, 1.34%)</title><rect x="28.1879%" y="597" width="1.3423%" height="15" fill="rgb(213,79,30)" fg:x="42" fg:w="2"/><text x="28.4379%" y="607.50"></text></g><g><title>`0x7FFE9FA14774 (1 samples, 0.67%)</title><rect x="28.8591%" y="581" width="0.6711%" height="15" fill="rgb(246,177,23)" fg:x="43" fg:w="1"/><text x="29.1091%" y="591.50"></text></g><g><title>`0x7FFE9FA13C66 (1 samples, 0.67%)</title><rect x="28.8591%" y="565" width="0.6711%" height="15" fill="rgb(230,62,27)" fg:x="43" fg:w="1"/><text x="29.1091%" y="575.50"></text></g><g><title>`0x7FFE9FA188D4 (8 samples, 5.37%)</title><rect x="24.8322%" y="661" width="5.3691%" height="15" fill="rgb(216,154,8)" fg:x="37" fg:w="8"/><text x="25.0822%" y="671.50">`0x7FFE..</text></g><g><title>`0x7FFE9FA00EBF (8 samples, 5.37%)</title><rect x="24.8322%" y="645" width="5.3691%" height="15" fill="rgb(244,35,45)" fg:x="37" fg:w="8"/><text x="25.0822%" y="655.50">`0x7FFE..</text></g><g><title>`0x7FFE9FA010F0 (6 samples, 4.03%)</title><rect x="26.1745%" y="629" width="4.0268%" height="15" fill="rgb(251,115,12)" fg:x="39" fg:w="6"/><text x="26.4245%" y="639.50">`0x7..</text></g><g><title>`0x7FFE9FA0072D (1 samples, 0.67%)</title><rect x="29.5302%" y="613" width="0.6711%" height="15" fill="rgb(240,54,50)" fg:x="44" fg:w="1"/><text x="29.7802%" y="623.50"></text></g><g><title>`0x7FFE9FA8F554 (1 samples, 0.67%)</title><rect x="29.5302%" y="597" width="0.6711%" height="15" fill="rgb(233,84,52)" fg:x="44" fg:w="1"/><text x="29.7802%" y="607.50"></text></g><g><title>`0x7FFE9CDEBAE8 (9 samples, 6.04%)</title><rect x="24.8322%" y="757" width="6.0403%" height="15" fill="rgb(207,117,47)" fg:x="37" fg:w="9"/><text x="25.0822%" y="767.50">`0x7FFE9..</text></g><g><title>`0x7FFE9CDF8F91 (9 samples, 6.04%)</title><rect x="24.8322%" y="741" width="6.0403%" height="15" fill="rgb(249,43,39)" fg:x="37" fg:w="9"/><text x="25.0822%" y="751.50">`0x7FFE9..</text></g><g><title>`0x7FFE9CDF1843 (9 samples, 6.04%)</title><rect x="24.8322%" y="725" width="6.0403%" height="15" fill="rgb(209,38,44)" fg:x="37" fg:w="9"/><text x="25.0822%" y="735.50">`0x7FFE9..</text></g><g><title>`0x7FFE9D336452 (9 samples, 6.04%)</title><rect x="24.8322%" y="709" width="6.0403%" height="15" fill="rgb(236,212,23)" fg:x="37" fg:w="9"/><text x="25.0822%" y="719.50">`0x7FFE9..</text></g><g><title>`0x7FFE9FA1A25A (9 samples, 6.04%)</title><rect x="24.8322%" y="693" width="6.0403%" height="15" fill="rgb(242,79,21)" fg:x="37" fg:w="9"/><text x="25.0822%" y="703.50">`0x7FFE9..</text></g><g><title>`0x7FFE9FA08CAC (9 samples, 6.04%)</title><rect x="24.8322%" y="677" width="6.0403%" height="15" fill="rgb(211,96,35)" fg:x="37" fg:w="9"/><text x="25.0822%" y="687.50">`0x7FFE9..</text></g><g><title>`0x7FFE9FA18940 (1 samples, 0.67%)</title><rect x="30.2013%" y="661" width="0.6711%" height="15" fill="rgb(253,215,40)" fg:x="45" fg:w="1"/><text x="30.4513%" y="671.50"></text></g><g><title>`0x7FFE9FA1D5E1 (1 samples, 0.67%)</title><rect x="30.2013%" y="645" width="0.6711%" height="15" fill="rgb(211,81,21)" fg:x="45" fg:w="1"/><text x="30.4513%" y="655.50"></text></g><g><title>`0x7FFE9FA1E7EF (1 samples, 0.67%)</title><rect x="30.2013%" y="629" width="0.6711%" height="15" fill="rgb(208,190,38)" fg:x="45" fg:w="1"/><text x="30.4513%" y="639.50"></text></g><g><title>`0x7FFE9FA1E8CC (1 samples, 0.67%)</title><rect x="30.2013%" y="613" width="0.6711%" height="15" fill="rgb(235,213,38)" fg:x="45" fg:w="1"/><text x="30.4513%" y="623.50"></text></g><g><title>`0x7FFE9FA63C10 (1 samples, 0.67%)</title><rect x="30.2013%" y="597" width="0.6711%" height="15" fill="rgb(237,122,38)" fg:x="45" fg:w="1"/><text x="30.4513%" y="607.50"></text></g><g><title>`0x7FFE9FA8FCF4 (1 samples, 0.67%)</title><rect x="30.2013%" y="581" width="0.6711%" height="15" fill="rgb(244,218,35)" fg:x="45" fg:w="1"/><text x="30.4513%" y="591.50"></text></g><g><title>`0x7FFE9D6F0E15 (1 samples, 0.67%)</title><rect x="30.8725%" y="677" width="0.6711%" height="15" fill="rgb(240,68,47)" fg:x="46" fg:w="1"/><text x="31.1225%" y="687.50"></text></g><g><title>`0x7FFE9D6DDEA6 (1 samples, 0.67%)</title><rect x="30.8725%" y="661" width="0.6711%" height="15" fill="rgb(210,16,53)" fg:x="46" fg:w="1"/><text x="31.1225%" y="671.50"></text></g><g><title>`0x7FFE9FA6D0B6 (1 samples, 0.67%)</title><rect x="30.8725%" y="645" width="0.6711%" height="15" fill="rgb(235,124,12)" fg:x="46" fg:w="1"/><text x="31.1225%" y="655.50"></text></g><g><title>`0x7FFE9FA1FB60 (1 samples, 0.67%)</title><rect x="30.8725%" y="629" width="0.6711%" height="15" fill="rgb(224,169,11)" fg:x="46" fg:w="1"/><text x="31.1225%" y="639.50"></text></g><g><title>`0x7FFE9FA8F554 (1 samples, 0.67%)</title><rect x="30.8725%" y="613" width="0.6711%" height="15" fill="rgb(250,166,2)" fg:x="46" fg:w="1"/><text x="31.1225%" y="623.50"></text></g><g><title>`0x7FFE9CDEBCD9 (11 samples, 7.38%)</title><rect x="24.8322%" y="773" width="7.3826%" height="15" fill="rgb(242,216,29)" fg:x="37" fg:w="11"/><text x="25.0822%" y="783.50">`0x7FFE9CD..</text></g><g><title>`0x7FFE9CDEBB18 (2 samples, 1.34%)</title><rect x="30.8725%" y="757" width="1.3423%" height="15" fill="rgb(230,116,27)" fg:x="46" fg:w="2"/><text x="31.1225%" y="767.50"></text></g><g><title>`0x7FFE9DFE7FAB (2 samples, 1.34%)</title><rect x="30.8725%" y="741" width="1.3423%" height="15" fill="rgb(228,99,48)" fg:x="46" fg:w="2"/><text x="31.1225%" y="751.50"></text></g><g><title>`0x7FFE9FA40C9D (2 samples, 1.34%)</title><rect x="30.8725%" y="725" width="1.3423%" height="15" fill="rgb(253,11,6)" fg:x="46" fg:w="2"/><text x="31.1225%" y="735.50"></text></g><g><title>`0x7FFE9FA410A6 (2 samples, 1.34%)</title><rect x="30.8725%" y="709" width="1.3423%" height="15" fill="rgb(247,143,39)" fg:x="46" fg:w="2"/><text x="31.1225%" y="719.50"></text></g><g><title>`0x7FFE9FA1869F (2 samples, 1.34%)</title><rect x="30.8725%" y="693" width="1.3423%" height="15" fill="rgb(236,97,10)" fg:x="46" fg:w="2"/><text x="31.1225%" y="703.50"></text></g><g><title>`0x7FFE9DFE2607 (1 samples, 0.67%)</title><rect x="31.5436%" y="677" width="0.6711%" height="15" fill="rgb(233,208,19)" fg:x="47" fg:w="1"/><text x="31.7936%" y="687.50"></text></g><g><title>`0x7FFE9DFE286F (1 samples, 0.67%)</title><rect x="31.5436%" y="661" width="0.6711%" height="15" fill="rgb(216,164,2)" fg:x="47" fg:w="1"/><text x="31.7936%" y="671.50"></text></g><g><title>`0x7FFE9DFE2A22 (1 samples, 0.67%)</title><rect x="31.5436%" y="645" width="0.6711%" height="15" fill="rgb(220,129,5)" fg:x="47" fg:w="1"/><text x="31.7936%" y="655.50"></text></g><g><title>`0x7FFE9D38AD57 (1 samples, 0.67%)</title><rect x="31.5436%" y="629" width="0.6711%" height="15" fill="rgb(242,17,10)" fg:x="47" fg:w="1"/><text x="31.7936%" y="639.50"></text></g><g><title>`0x7FFE9CDF4E5D (1 samples, 0.67%)</title><rect x="32.2148%" y="773" width="0.6711%" height="15" fill="rgb(242,107,0)" fg:x="48" fg:w="1"/><text x="32.4648%" y="783.50"></text></g><g><title>part1.exe`pre_c_initialization() (1 samples, 0.67%)</title><rect x="32.2148%" y="757" width="0.6711%" height="15" fill="rgb(251,28,31)" fg:x="48" fg:w="1"/><text x="32.4648%" y="767.50"></text></g><g><title>part1.exe`__scrt_narrow_argv_policy::configure_argv (1 samples, 0.67%)</title><rect x="32.2148%" y="741" width="0.6711%" height="15" fill="rgb(233,223,10)" fg:x="48" fg:w="1"/><text x="32.4648%" y="751.50"></text></g><g><title>part1.exe`atexit(void (*)()) (1 samples, 0.67%)</title><rect x="32.2148%" y="725" width="0.6711%" height="15" fill="rgb(215,21,27)" fg:x="48" fg:w="1"/><text x="32.4648%" y="735.50"></text></g><g><title>part1.exe`_onexit(int (*)()) (1 samples, 0.67%)</title><rect x="32.2148%" y="709" width="0.6711%" height="15" fill="rgb(232,23,21)" fg:x="48" fg:w="1"/><text x="32.4648%" y="719.50"></text></g><g><title>`0x7FFE9CDF40B8 (1 samples, 0.67%)</title><rect x="32.2148%" y="693" width="0.6711%" height="15" fill="rgb(244,5,23)" fg:x="48" fg:w="1"/><text x="32.4648%" y="703.50"></text></g><g><title>`0x7FFE9CDF4106 (1 samples, 0.67%)</title><rect x="32.2148%" y="677" width="0.6711%" height="15" fill="rgb(226,81,46)" fg:x="48" fg:w="1"/><text x="32.4648%" y="687.50"></text></g><g><title>`0x7FFE9CE238BF (1 samples, 0.67%)</title><rect x="32.2148%" y="661" width="0.6711%" height="15" fill="rgb(247,70,30)" fg:x="48" fg:w="1"/><text x="32.4648%" y="671.50"></text></g><g><title>`0x7FFE9CDE0F16 (1 samples, 0.67%)</title><rect x="32.2148%" y="645" width="0.6711%" height="15" fill="rgb(212,68,19)" fg:x="48" fg:w="1"/><text x="32.4648%" y="655.50"></text></g><g><title>`0x7FFE9CDE1AA5 (1 samples, 0.67%)</title><rect x="32.2148%" y="629" width="0.6711%" height="15" fill="rgb(240,187,13)" fg:x="48" fg:w="1"/><text x="32.4648%" y="639.50"></text></g><g><title>`0x7FFE9CDE1B06 (1 samples, 0.67%)</title><rect x="32.2148%" y="613" width="0.6711%" height="15" fill="rgb(223,113,26)" fg:x="48" fg:w="1"/><text x="32.4648%" y="623.50"></text></g><g><title>`0x7FFE9FA2C7BA (1 samples, 0.67%)</title><rect x="32.2148%" y="597" width="0.6711%" height="15" fill="rgb(206,192,2)" fg:x="48" fg:w="1"/><text x="32.4648%" y="607.50"></text></g><g><title>`0x7FFE9FA2D0A8 (1 samples, 0.67%)</title><rect x="32.2148%" y="581" width="0.6711%" height="15" fill="rgb(241,108,4)" fg:x="48" fg:w="1"/><text x="32.4648%" y="591.50"></text></g><g><title>`0x7FFE9CDF4EAD (1 samples, 0.67%)</title><rect x="32.8859%" y="773" width="0.6711%" height="15" fill="rgb(247,173,49)" fg:x="49" fg:w="1"/><text x="33.1359%" y="783.50"></text></g><g><title>part1.exe`pre_cpp_initialization() (1 samples, 0.67%)</title><rect x="32.8859%" y="757" width="0.6711%" height="15" fill="rgb(224,114,35)" fg:x="49" fg:w="1"/><text x="33.1359%" y="767.50"></text></g><g><title>`0x7FFE9D3827DB (1 samples, 0.67%)</title><rect x="32.8859%" y="741" width="0.6711%" height="15" fill="rgb(245,159,27)" fg:x="49" fg:w="1"/><text x="33.1359%" y="751.50"></text></g><g><title>`0x7FFE9D382A2D (1 samples, 0.67%)</title><rect x="32.8859%" y="725" width="0.6711%" height="15" fill="rgb(245,172,44)" fg:x="49" fg:w="1"/><text x="33.1359%" y="735.50"></text></g><g><title>`0x7FFE9FA8F7D4 (1 samples, 0.67%)</title><rect x="32.8859%" y="709" width="0.6711%" height="15" fill="rgb(236,23,11)" fg:x="49" fg:w="1"/><text x="33.1359%" y="719.50"></text></g><g><title>part1.exe`alloc::ffi::c_str::impl$1::new::impl$2::spec_new_impl (1 samples, 0.67%)</title><rect x="33.5570%" y="645" width="0.6711%" height="15" fill="rgb(205,117,38)" fg:x="50" fg:w="1"/><text x="33.8070%" y="655.50"></text></g><g><title>part1.exe`alloc::ffi::c_str::impl$1::new::spec_new_impl_bytes (1 samples, 0.67%)</title><rect x="33.5570%" y="629" width="0.6711%" height="15" fill="rgb(237,72,25)" fg:x="50" fg:w="1"/><text x="33.8070%" y="639.50"></text></g><g><title>part1.exe`core::slice::memchr::memchr (1 samples, 0.67%)</title><rect x="33.5570%" y="613" width="0.6711%" height="15" fill="rgb(244,70,9)" fg:x="50" fg:w="1"/><text x="33.8070%" y="623.50"></text></g><g><title>`0x7FFE8B191310 (1 samples, 0.67%)</title><rect x="33.5570%" y="597" width="0.6711%" height="15" fill="rgb(217,125,39)" fg:x="50" fg:w="1"/><text x="33.8070%" y="607.50"></text></g><g><title>part1.exe`std::rt::lang_start_internal::closure$1 (2 samples, 1.34%)</title><rect x="33.5570%" y="677" width="1.3423%" height="15" fill="rgb(235,36,10)" fg:x="50" fg:w="2"/><text x="33.8070%" y="687.50"></text></g><g><title>part1.exe`std::rt::init (2 samples, 1.34%)</title><rect x="33.5570%" y="661" width="1.3423%" height="15" fill="rgb(251,123,47)" fg:x="50" fg:w="2"/><text x="33.8070%" y="671.50"></text></g><g><title>part1.exe`std::sys::windows::init (1 samples, 0.67%)</title><rect x="34.2282%" y="645" width="0.6711%" height="15" fill="rgb(221,13,13)" fg:x="51" fg:w="1"/><text x="34.4782%" y="655.50"></text></g><g><title>part1.exe`std::sys::windows::stack_overflow::init (1 samples, 0.67%)</title><rect x="34.2282%" y="629" width="0.6711%" height="15" fill="rgb(238,131,9)" fg:x="51" fg:w="1"/><text x="34.4782%" y="639.50"></text></g><g><title>part1.exe`std::sys::windows::stack_overflow::Handler::new (1 samples, 0.67%)</title><rect x="34.2282%" y="613" width="0.6711%" height="15" fill="rgb(211,50,8)" fg:x="51" fg:w="1"/><text x="34.4782%" y="623.50"></text></g><g><title>`0x7FFE9D386BC3 (1 samples, 0.67%)</title><rect x="34.2282%" y="597" width="0.6711%" height="15" fill="rgb(245,182,24)" fg:x="51" fg:w="1"/><text x="34.4782%" y="607.50"></text></g><g><title>`0x7FFE9FA8F674 (1 samples, 0.67%)</title><rect x="34.2282%" y="581" width="0.6711%" height="15" fill="rgb(242,14,37)" fg:x="51" fg:w="1"/><text x="34.4782%" y="591.50"></text></g><g><title>part1.exe`day_19::part1::Rating::get_part_value (1 samples, 0.67%)</title><rect x="34.8993%" y="485" width="0.6711%" height="15" fill="rgb(246,228,12)" fg:x="52" fg:w="1"/><text x="35.1493%" y="495.50"></text></g><g><title>part1.exe`core::iter::traits::iterator::Iterator::fold(alloc::vec::into_iter::IntoIter (2 samples, 1.34%)</title><rect x="34.8993%" y="533" width="1.3423%" height="15" fill="rgb(213,55,15)" fg:x="52" fg:w="2"/><text x="35.1493%" y="543.50"></text></g><g><title>part1.exe`day_19::part1::process::closure$0 (2 samples, 1.34%)</title><rect x="34.8993%" y="517" width="1.3423%" height="15" fill="rgb(209,9,3)" fg:x="52" fg:w="2"/><text x="35.1493%" y="527.50"></text></g><g><title>part1.exe`day_19::part1::check_acceptance(day_19::part1::Rating*, std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (2 samples, 1.34%)</title><rect x="34.8993%" y="501" width="1.3423%" height="15" fill="rgb(230,59,30)" fg:x="52" fg:w="2"/><text x="35.1493%" y="511.50"></text></g><g><title>part1.exe`std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;,std::hash::random::RandomState&gt;::get(ref$ (1 samples, 0.67%)</title><rect x="35.5705%" y="485" width="0.6711%" height="15" fill="rgb(209,121,21)" fg:x="53" fg:w="1"/><text x="35.8205%" y="495.50"></text></g><g><title>part1.exe`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::get(ref$ (1 samples, 0.67%)</title><rect x="35.5705%" y="469" width="0.6711%" height="15" fill="rgb(220,109,13)" fg:x="53" fg:w="1"/><text x="35.8205%" y="479.50"></text></g><g><title>part1.exe`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::get_inner(ref$ (1 samples, 0.67%)</title><rect x="35.5705%" y="453" width="0.6711%" height="15" fill="rgb(232,18,1)" fg:x="53" fg:w="1"/><text x="35.8205%" y="463.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (1 samples, 0.67%)</title><rect x="35.5705%" y="437" width="0.6711%" height="15" fill="rgb(215,41,42)" fg:x="53" fg:w="1"/><text x="35.8205%" y="447.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (1 samples, 0.67%)</title><rect x="35.5705%" y="421" width="0.6711%" height="15" fill="rgb(224,123,36)" fg:x="53" fg:w="1"/><text x="35.8205%" y="431.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.67%)</title><rect x="35.5705%" y="405" width="0.6711%" height="15" fill="rgb(240,125,3)" fg:x="53" fg:w="1"/><text x="35.8205%" y="415.50"></text></g><g><title>part1.exe`hashbrown::raw::h2 (1 samples, 0.67%)</title><rect x="35.5705%" y="389" width="0.6711%" height="15" fill="rgb(205,98,50)" fg:x="53" fg:w="1"/><text x="35.8205%" y="399.50"></text></g><g><title>part1.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;str$&gt; &gt;(std::hash::random::RandomState*, ref$ (1 samples, 0.67%)</title><rect x="35.5705%" y="373" width="0.6711%" height="15" fill="rgb(205,185,37)" fg:x="53" fg:w="1"/><text x="35.8205%" y="383.50"></text></g><g><title>part1.exe`std::hash::random::impl$4::finish (1 samples, 0.67%)</title><rect x="35.5705%" y="357" width="0.6711%" height="15" fill="rgb(238,207,15)" fg:x="53" fg:w="1"/><text x="35.8205%" y="367.50"></text></g><g><title>part1.exe`core::hash::sip::impl$4::finish (1 samples, 0.67%)</title><rect x="35.5705%" y="341" width="0.6711%" height="15" fill="rgb(213,199,42)" fg:x="53" fg:w="1"/><text x="35.8205%" y="351.50"></text></g><g><title>part1.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1 samples, 0.67%)</title><rect x="35.5705%" y="325" width="0.6711%" height="15" fill="rgb(235,201,11)" fg:x="53" fg:w="1"/><text x="35.8205%" y="335.50"></text></g><g><title>part1.exe`std::hash::random::impl$4::write(std::hash::random::DefaultHasher*, ref$&lt;slice2$ (1 samples, 0.67%)</title><rect x="35.5705%" y="309" width="0.6711%" height="15" fill="rgb(207,46,11)" fg:x="53" fg:w="1"/><text x="35.8205%" y="319.50"></text></g><g><title>part1.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (1 samples, 0.67%)</title><rect x="35.5705%" y="293" width="0.6711%" height="15" fill="rgb(241,35,35)" fg:x="53" fg:w="1"/><text x="35.8205%" y="303.50"></text></g><g><title>part1.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 0.67%)</title><rect x="35.5705%" y="277" width="0.6711%" height="15" fill="rgb(243,32,47)" fg:x="53" fg:w="1"/><text x="35.8205%" y="287.50"></text></g><g><title>part1.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (1 samples, 0.67%)</title><rect x="36.2416%" y="533" width="0.6711%" height="15" fill="rgb(247,202,23)" fg:x="54" fg:w="1"/><text x="36.4916%" y="543.50"></text></g><g><title>part1.exe`core::ptr::drop_in_place(hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (1 samples, 0.67%)</title><rect x="36.2416%" y="517" width="0.6711%" height="15" fill="rgb(219,102,11)" fg:x="54" fg:w="1"/><text x="36.4916%" y="527.50"></text></g><g><title>part1.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (1 samples, 0.67%)</title><rect x="36.2416%" y="501" width="0.6711%" height="15" fill="rgb(243,110,44)" fg:x="54" fg:w="1"/><text x="36.4916%" y="511.50"></text></g><g><title>part1.exe`hashbrown::raw::impl$18::drop(hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (1 samples, 0.67%)</title><rect x="36.2416%" y="485" width="0.6711%" height="15" fill="rgb(222,74,54)" fg:x="54" fg:w="1"/><text x="36.4916%" y="495.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.67%)</title><rect x="36.2416%" y="469" width="0.6711%" height="15" fill="rgb(216,99,12)" fg:x="54" fg:w="1"/><text x="36.4916%" y="479.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.67%)</title><rect x="36.2416%" y="453" width="0.6711%" height="15" fill="rgb(226,22,26)" fg:x="54" fg:w="1"/><text x="36.4916%" y="463.50"></text></g><g><title>part1.exe`hashbrown::raw::Bucket&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt; &gt;::drop (1 samples, 0.67%)</title><rect x="36.2416%" y="437" width="0.6711%" height="15" fill="rgb(217,163,10)" fg:x="54" fg:w="1"/><text x="36.4916%" y="447.50"></text></g><g><title>part1.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (1 samples, 0.67%)</title><rect x="36.2416%" y="421" width="0.6711%" height="15" fill="rgb(213,25,53)" fg:x="54" fg:w="1"/><text x="36.4916%" y="431.50"></text></g><g><title>part1.exe`core::ptr::drop_in_place(tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (1 samples, 0.67%)</title><rect x="36.2416%" y="405" width="0.6711%" height="15" fill="rgb(252,105,26)" fg:x="54" fg:w="1"/><text x="36.4916%" y="415.50"></text></g><g><title>part1.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$ (1 samples, 0.67%)</title><rect x="36.2416%" y="389" width="0.6711%" height="15" fill="rgb(220,39,43)" fg:x="54" fg:w="1"/><text x="36.4916%" y="399.50"></text></g><g><title>part1.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;enum2$ (1 samples, 0.67%)</title><rect x="36.2416%" y="373" width="0.6711%" height="15" fill="rgb(229,68,48)" fg:x="54" fg:w="1"/><text x="36.4916%" y="383.50"></text></g><g><title>part1.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;enum2$ (1 samples, 0.67%)</title><rect x="36.2416%" y="357" width="0.6711%" height="15" fill="rgb(252,8,32)" fg:x="54" fg:w="1"/><text x="36.4916%" y="367.50"></text></g><g><title>part1.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.67%)</title><rect x="36.2416%" y="341" width="0.6711%" height="15" fill="rgb(223,20,43)" fg:x="54" fg:w="1"/><text x="36.4916%" y="351.50"></text></g><g><title>part1.exe`alloc::alloc::dealloc (1 samples, 0.67%)</title><rect x="36.2416%" y="325" width="0.6711%" height="15" fill="rgb(229,81,49)" fg:x="54" fg:w="1"/><text x="36.4916%" y="335.50"></text></g><g><title>`0x7FFE9FA2AB11 (1 samples, 0.67%)</title><rect x="36.2416%" y="309" width="0.6711%" height="15" fill="rgb(236,28,36)" fg:x="54" fg:w="1"/><text x="36.4916%" y="319.50"></text></g><g><title>`0x7FFE9FA9BFA1 (1 samples, 0.67%)</title><rect x="36.2416%" y="293" width="0.6711%" height="15" fill="rgb(249,185,26)" fg:x="54" fg:w="1"/><text x="36.4916%" y="303.50"></text></g><g><title>part1.exe`nom::internal::impl$12::parse(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;day_19::part1::Rating,alloc::alloc::Global&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (**)(ref$&lt;str$&gt;), ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="485" width="0.6711%" height="15" fill="rgb(249,174,33)" fg:x="55" fg:w="1"/><text x="37.1628%" y="495.50"></text></g><g><title>part1.exe`core::ops::function::FnMut::call_mut(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;day_19::part1::Rating,alloc::alloc::Global&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (**)(ref$&lt;str$&gt;), ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="469" width="0.6711%" height="15" fill="rgb(233,201,37)" fg:x="55" fg:w="1"/><text x="37.1628%" y="479.50"></text></g><g><title>part1.exe`day_19::part1::parse_ratings(ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="453" width="0.6711%" height="15" fill="rgb(221,78,26)" fg:x="55" fg:w="1"/><text x="37.1628%" y="463.50"></text></g><g><title>part1.exe`nom::internal::impl$14::parse(nom::internal::Map&lt;nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,day_19::part1::parse_ratings::closure_env$0,alloc::vec::Vec&lt;alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;*, ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="437" width="0.6711%" height="15" fill="rgb(250,127,30)" fg:x="55" fg:w="1"/><text x="37.1628%" y="447.50"></text></g><g><title>part1.exe`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;(nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;*, ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="421" width="0.6711%" height="15" fill="rgb(230,49,44)" fg:x="55" fg:w="1"/><text x="37.1628%" y="431.50"></text></g><g><title>part1.exe`nom::multi::separated_list1::closure$0(nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;*, ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="405" width="0.6711%" height="15" fill="rgb(229,67,23)" fg:x="55" fg:w="1"/><text x="37.1628%" y="415.50"></text></g><g><title>part1.exe`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (**)(ref$&lt;str$&gt;), ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="389" width="0.6711%" height="15" fill="rgb(249,83,47)" fg:x="55" fg:w="1"/><text x="37.1628%" y="399.50"></text></g><g><title>part1.exe`core::ops::function::FnMut::call_mut(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (**)(ref$&lt;str$&gt;), ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="373" width="0.6711%" height="15" fill="rgb(215,43,3)" fg:x="55" fg:w="1"/><text x="37.1628%" y="383.50"></text></g><g><title>part1.exe`day_19::part1::parse_rating(ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="357" width="0.6711%" height="15" fill="rgb(238,154,13)" fg:x="55" fg:w="1"/><text x="37.1628%" y="367.50"></text></g><g><title>part1.exe`nom::internal::impl$12::parse(nom::sequence::delimited::closure_env$0&lt;ref$&lt;str$&gt;,char,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,u32,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::preceded::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,char&gt;,u32,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,u32&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="341" width="0.6711%" height="15" fill="rgb(219,56,2)" fg:x="55" fg:w="1"/><text x="37.1628%" y="351.50"></text></g><g><title>part1.exe`nom::sequence::delimited::closure$0(nom::sequence::delimited::closure_env$0&lt;ref$&lt;str$&gt;,char,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,u32,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::preceded::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,char&gt;,u32,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,u32&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="325" width="0.6711%" height="15" fill="rgb(233,0,4)" fg:x="55" fg:w="1"/><text x="37.1628%" y="335.50"></text></g><g><title>part1.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="309" width="0.6711%" height="15" fill="rgb(235,30,7)" fg:x="55" fg:w="1"/><text x="37.1628%" y="319.50"></text></g><g><title>part1.exe`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,u32,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::preceded::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,char&gt;,u32,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,u32&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;(nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,u32,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::preceded::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,char&gt;,u32,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,u32&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="293" width="0.6711%" height="15" fill="rgb(250,79,13)" fg:x="55" fg:w="1"/><text x="37.1628%" y="303.50"></text></g><g><title>part1.exe`nom::multi::separated_list1::closure$0(nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,u32,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::preceded::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,char&gt;,u32,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,u32&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="277" width="0.6711%" height="15" fill="rgb(211,146,34)" fg:x="55" fg:w="1"/><text x="37.1628%" y="287.50"></text></g><g><title>part1.exe`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,u32,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::preceded::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,char&gt;,u32,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,u32&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;(nom::sequence::preceded::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,char&gt;,u32,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,u32&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;*, ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="261" width="0.6711%" height="15" fill="rgb(228,22,38)" fg:x="55" fg:w="1"/><text x="37.1628%" y="271.50"></text></g><g><title>part1.exe`nom::sequence::preceded::closure$0(nom::sequence::preceded::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,char&gt;,u32,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,u32&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;*, ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="245" width="0.6711%" height="15" fill="rgb(235,168,5)" fg:x="55" fg:w="1"/><text x="37.1628%" y="255.50"></text></g><g><title>part1.exe`nom::internal::impl$12::parse(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,u32&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (**)(ref$&lt;str$&gt;), ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="229" width="0.6711%" height="15" fill="rgb(221,155,16)" fg:x="55" fg:w="1"/><text x="37.1628%" y="239.50"></text></g><g><title>part1.exe`core::ops::function::FnMut::call_mut(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,u32&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (**)(ref$&lt;str$&gt;), ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="213" width="0.6711%" height="15" fill="rgb(215,215,53)" fg:x="55" fg:w="1"/><text x="37.1628%" y="223.50"></text></g><g><title>part1.exe`nom::character::complete::u32&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;(ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="197" width="0.6711%" height="15" fill="rgb(223,4,10)" fg:x="55" fg:w="1"/><text x="37.1628%" y="207.50"></text></g><g><title>part1.exe`nom::traits::impl$130::slice(ref$&lt;str$&gt;*, core::ops::range::RangeFrom (1 samples, 0.67%)</title><rect x="36.9128%" y="181" width="0.6711%" height="15" fill="rgb(234,103,6)" fg:x="55" fg:w="1"/><text x="37.1628%" y="191.50"></text></g><g><title>part1.exe`core::str::traits::impl$4::index(ref$&lt;str$&gt;, core::ops::range::RangeFrom (1 samples, 0.67%)</title><rect x="36.9128%" y="165" width="0.6711%" height="15" fill="rgb(227,97,0)" fg:x="55" fg:w="1"/><text x="37.1628%" y="175.50"></text></g><g><title>part1.exe`core::str::traits::impl$10::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="149" width="0.6711%" height="15" fill="rgb(234,150,53)" fg:x="55" fg:w="1"/><text x="37.1628%" y="159.50"></text></g><g><title>part1.exe`core::str::traits::impl$10::get(core::ops::range::RangeFrom&lt;usize&gt;, ref$ (1 samples, 0.67%)</title><rect x="36.9128%" y="133" width="0.6711%" height="15" fill="rgb(228,201,54)" fg:x="55" fg:w="1"/><text x="37.1628%" y="143.50"></text></g><g><title>part1.exe`core::iter::traits::iterator::Iterator::for_each(alloc::vec::into_iter::IntoIter&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (3 samples, 2.01%)</title><rect x="37.5839%" y="437" width="2.0134%" height="15" fill="rgb(222,22,37)" fg:x="56" fg:w="3"/><text x="37.8339%" y="447.50">p..</text></g><g><title>part1.exe`core::iter::traits::iterator::Iterator::fold(alloc::vec::into_iter::IntoIter&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (3 samples, 2.01%)</title><rect x="37.5839%" y="421" width="2.0134%" height="15" fill="rgb(237,53,32)" fg:x="56" fg:w="3"/><text x="37.8339%" y="431.50">p..</text></g><g><title>part1.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt;,day_19::part1::parse_workflows::closure_env$0&gt;*, tuple$&lt;&gt;, tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (3 samples, 2.01%)</title><rect x="37.5839%" y="405" width="2.0134%" height="15" fill="rgb(233,25,53)" fg:x="56" fg:w="3"/><text x="37.8339%" y="415.50">p..</text></g><g><title>part1.exe`day_19::part1::parse_workflows::closure$0(day_19::part1::parse_workflows::closure_env$0*, tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (3 samples, 2.01%)</title><rect x="37.5839%" y="389" width="2.0134%" height="15" fill="rgb(210,40,34)" fg:x="56" fg:w="3"/><text x="37.8339%" y="399.50">p..</text></g><g><title>part1.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::vec::Vec&lt;enum2$ (3 samples, 2.01%)</title><rect x="37.5839%" y="373" width="2.0134%" height="15" fill="rgb(241,220,44)" fg:x="56" fg:w="3"/><text x="37.8339%" y="383.50">p..</text></g><g><title>part1.exe`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;(ref$&lt;str$&gt;, alloc::vec::Vec&lt;enum2$ (3 samples, 2.01%)</title><rect x="37.5839%" y="357" width="2.0134%" height="15" fill="rgb(235,28,35)" fg:x="56" fg:w="3"/><text x="37.8339%" y="367.50">p..</text></g><g><title>part1.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt;, hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (3 samples, 2.01%)</title><rect x="37.5839%" y="341" width="2.0134%" height="15" fill="rgb(210,56,17)" fg:x="56" fg:w="3"/><text x="37.8339%" y="351.50">p..</text></g><g><title>part1.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;,std::hash::random::RandomState&gt; &gt;(unsigned long long, hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (3 samples, 2.01%)</title><rect x="37.5839%" y="325" width="2.0134%" height="15" fill="rgb(224,130,29)" fg:x="56" fg:w="3"/><text x="37.8339%" y="335.50">p..</text></g><g><title>part1.exe`hashbrown::raw::RawTableInner::reserve_rehash_inner(alloc::alloc::Global*, unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&gt;,usize&gt;,assoc$&lt;Output,u64&gt; &gt; &gt; &gt;, hashbrown::raw::Fallibility, hashbrown::raw::TableLayout, enum2$&lt;core::option::Option&lt;void (*)(ptr_mut$ (2 samples, 1.34%)</title><rect x="38.2550%" y="309" width="1.3423%" height="15" fill="rgb(235,212,8)" fg:x="57" fg:w="2"/><text x="38.5050%" y="319.50"></text></g><g><title>part1.exe`hashbrown::raw::RawTableInner::resize_inner(alloc::alloc::Global*, unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&gt;,usize&gt;,assoc$ (2 samples, 1.34%)</title><rect x="38.2550%" y="293" width="1.3423%" height="15" fill="rgb(223,33,50)" fg:x="57" fg:w="2"/><text x="38.5050%" y="303.50"></text></g><g><title>part1.exe`core::intrinsics::copy_nonoverlapping (2 samples, 1.34%)</title><rect x="38.2550%" y="277" width="1.3423%" height="15" fill="rgb(219,149,13)" fg:x="57" fg:w="2"/><text x="38.5050%" y="287.50"></text></g><g><title>`0x7FFE9FA324DF (1 samples, 0.67%)</title><rect x="39.5973%" y="277" width="0.6711%" height="15" fill="rgb(250,156,29)" fg:x="59" fg:w="1"/><text x="39.8473%" y="287.50"></text></g><g><title>`0x7FFE9FA2CD59 (1 samples, 0.67%)</title><rect x="39.5973%" y="261" width="0.6711%" height="15" fill="rgb(216,193,19)" fg:x="59" fg:w="1"/><text x="39.8473%" y="271.50"></text></g><g><title>`0x7FFE9FA2F738 (1 samples, 0.67%)</title><rect x="39.5973%" y="245" width="0.6711%" height="15" fill="rgb(216,135,14)" fg:x="59" fg:w="1"/><text x="39.8473%" y="255.50"></text></g><g><title>`0x7FFE9FA357DB (1 samples, 0.67%)</title><rect x="39.5973%" y="229" width="0.6711%" height="15" fill="rgb(241,47,5)" fg:x="59" fg:w="1"/><text x="39.8473%" y="239.50"></text></g><g><title>`0x7FFE9FA35C25 (1 samples, 0.67%)</title><rect x="39.5973%" y="213" width="0.6711%" height="15" fill="rgb(233,42,35)" fg:x="59" fg:w="1"/><text x="39.8473%" y="223.50"></text></g><g><title>`0x7FFE9FA35D75 (1 samples, 0.67%)</title><rect x="39.5973%" y="197" width="0.6711%" height="15" fill="rgb(231,13,6)" fg:x="59" fg:w="1"/><text x="39.8473%" y="207.50"></text></g><g><title>part1.exe`alloc::vec::Vec&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::push(tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$ (2 samples, 1.34%)</title><rect x="39.5973%" y="405" width="1.3423%" height="15" fill="rgb(207,181,40)" fg:x="59" fg:w="2"/><text x="39.8473%" y="415.50"></text></g><g><title>part1.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;ref$&lt;regex_syntax::hir::Hir&gt;,enum2$&lt;regex_syntax::hir::visitor::Frame&gt; &gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;tuple$&lt;ref$&lt;regex_syntax::hir::Hir&gt;,enum2$&lt;regex_syntax::hir::visitor::Frame&gt; &gt;,alloc::alloc::Global&gt; (2 samples, 1.34%)</title><rect x="39.5973%" y="389" width="1.3423%" height="15" fill="rgb(254,173,49)" fg:x="59" fg:w="2"/><text x="39.8473%" y="399.50"></text></g><g><title>part1.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;ref$&lt;regex_syntax::hir::Hir&gt;,enum2$&lt;regex_syntax::hir::visitor::Frame&gt; &gt;,alloc::alloc::Global&gt;::grow_amortized (2 samples, 1.34%)</title><rect x="39.5973%" y="373" width="1.3423%" height="15" fill="rgb(221,1,38)" fg:x="59" fg:w="2"/><text x="39.8473%" y="383.50"></text></g><g><title>part1.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2 samples, 1.34%)</title><rect x="39.5973%" y="357" width="1.3423%" height="15" fill="rgb(206,124,46)" fg:x="59" fg:w="2"/><text x="39.8473%" y="367.50"></text></g><g><title>part1.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2 samples, 1.34%)</title><rect x="39.5973%" y="341" width="1.3423%" height="15" fill="rgb(249,21,11)" fg:x="59" fg:w="2"/><text x="39.8473%" y="351.50"></text></g><g><title>part1.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (2 samples, 1.34%)</title><rect x="39.5973%" y="325" width="1.3423%" height="15" fill="rgb(222,201,40)" fg:x="59" fg:w="2"/><text x="39.8473%" y="335.50"></text></g><g><title>`0x7FFE9FA31CAA (2 samples, 1.34%)</title><rect x="39.5973%" y="309" width="1.3423%" height="15" fill="rgb(235,61,29)" fg:x="59" fg:w="2"/><text x="39.8473%" y="319.50"></text></g><g><title>`0x7FFE9FA31DE7 (2 samples, 1.34%)</title><rect x="39.5973%" y="293" width="1.3423%" height="15" fill="rgb(219,207,3)" fg:x="59" fg:w="2"/><text x="39.8473%" y="303.50"></text></g><g><title>`0x7FFE9FA3261E (1 samples, 0.67%)</title><rect x="40.2685%" y="277" width="0.6711%" height="15" fill="rgb(222,56,46)" fg:x="60" fg:w="1"/><text x="40.5185%" y="287.50"></text></g><g><title>`0x7FFE9FA96013 (1 samples, 0.67%)</title><rect x="40.2685%" y="261" width="0.6711%" height="15" fill="rgb(239,76,54)" fg:x="60" fg:w="1"/><text x="40.5185%" y="271.50"></text></g><g><title>`0x7FFE9FA2C7BA (1 samples, 0.67%)</title><rect x="40.9396%" y="149" width="0.6711%" height="15" fill="rgb(231,124,27)" fg:x="61" fg:w="1"/><text x="41.1896%" y="159.50"></text></g><g><title>`0x7FFE9FA2D661 (1 samples, 0.67%)</title><rect x="40.9396%" y="133" width="0.6711%" height="15" fill="rgb(249,195,6)" fg:x="61" fg:w="1"/><text x="41.1896%" y="143.50"></text></g><g><title>`0x7FFE9FA53148 (1 samples, 0.67%)</title><rect x="40.9396%" y="117" width="0.6711%" height="15" fill="rgb(237,174,47)" fg:x="61" fg:w="1"/><text x="41.1896%" y="127.50"></text></g><g><title>`0x7FFE9FA53234 (1 samples, 0.67%)</title><rect x="40.9396%" y="101" width="0.6711%" height="15" fill="rgb(206,201,31)" fg:x="61" fg:w="1"/><text x="41.1896%" y="111.50"></text></g><g><title>`0x7FFE9FA2CD59 (1 samples, 0.67%)</title><rect x="40.9396%" y="85" width="0.6711%" height="15" fill="rgb(231,57,52)" fg:x="61" fg:w="1"/><text x="41.1896%" y="95.50"></text></g><g><title>`0x7FFE9FA2F503 (1 samples, 0.67%)</title><rect x="40.9396%" y="69" width="0.6711%" height="15" fill="rgb(248,177,22)" fg:x="61" fg:w="1"/><text x="41.1896%" y="79.50"></text></g><g><title>part1.exe`alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;::push(enum2$ (2 samples, 1.34%)</title><rect x="40.9396%" y="277" width="1.3423%" height="15" fill="rgb(215,211,37)" fg:x="61" fg:w="2"/><text x="41.1896%" y="287.50"></text></g><g><title>part1.exe`alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;::as_mut_ptr (2 samples, 1.34%)</title><rect x="40.9396%" y="261" width="1.3423%" height="15" fill="rgb(241,128,51)" fg:x="61" fg:w="2"/><text x="41.1896%" y="271.50"></text></g><g><title>part1.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;::ptr (2 samples, 1.34%)</title><rect x="40.9396%" y="245" width="1.3423%" height="15" fill="rgb(227,165,31)" fg:x="61" fg:w="2"/><text x="41.1896%" y="255.50"></text></g><g><title>part1.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;regex_automata::nfa::compiler::CState&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$&lt;regex_automata::nfa::compiler::CState&gt;,alloc::alloc::Global&gt; (2 samples, 1.34%)</title><rect x="40.9396%" y="229" width="1.3423%" height="15" fill="rgb(228,167,24)" fg:x="61" fg:w="2"/><text x="41.1896%" y="239.50"></text></g><g><title>part1.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;regex_automata::nfa::compiler::CState&gt;,alloc::alloc::Global&gt;::grow_amortized (2 samples, 1.34%)</title><rect x="40.9396%" y="213" width="1.3423%" height="15" fill="rgb(228,143,12)" fg:x="61" fg:w="2"/><text x="41.1896%" y="223.50"></text></g><g><title>part1.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2 samples, 1.34%)</title><rect x="40.9396%" y="197" width="1.3423%" height="15" fill="rgb(249,149,8)" fg:x="61" fg:w="2"/><text x="41.1896%" y="207.50"></text></g><g><title>part1.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2 samples, 1.34%)</title><rect x="40.9396%" y="181" width="1.3423%" height="15" fill="rgb(243,35,44)" fg:x="61" fg:w="2"/><text x="41.1896%" y="191.50"></text></g><g><title>part1.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (2 samples, 1.34%)</title><rect x="40.9396%" y="165" width="1.3423%" height="15" fill="rgb(246,89,9)" fg:x="61" fg:w="2"/><text x="41.1896%" y="175.50"></text></g><g><title>`0x7FFE9FA2CD59 (1 samples, 0.67%)</title><rect x="41.6107%" y="149" width="0.6711%" height="15" fill="rgb(233,213,13)" fg:x="62" fg:w="1"/><text x="41.8607%" y="159.50"></text></g><g><title>`0x7FFE9FA2F2FE (1 samples, 0.67%)</title><rect x="41.6107%" y="133" width="0.6711%" height="15" fill="rgb(233,141,41)" fg:x="62" fg:w="1"/><text x="41.8607%" y="143.50"></text></g><g><title>part1.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,u32&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$ (1 samples, 0.67%)</title><rect x="42.2819%" y="213" width="0.6711%" height="15" fill="rgb(239,167,4)" fg:x="63" fg:w="1"/><text x="42.5319%" y="223.50"></text></g><g><title>part1.exe`nom::character::complete::u32&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;(ref$ (1 samples, 0.67%)</title><rect x="42.2819%" y="197" width="0.6711%" height="15" fill="rgb(209,217,16)" fg:x="63" fg:w="1"/><text x="42.5319%" y="207.50"></text></g><g><title>part1.exe`nom::traits::impl$130::slice(ref$&lt;str$&gt;*, core::ops::range::RangeFrom (1 samples, 0.67%)</title><rect x="42.2819%" y="181" width="0.6711%" height="15" fill="rgb(219,88,35)" fg:x="63" fg:w="1"/><text x="42.5319%" y="191.50"></text></g><g><title>part1.exe`core::str::traits::impl$4::index(ref$&lt;str$&gt;, core::ops::range::RangeFrom (1 samples, 0.67%)</title><rect x="42.2819%" y="165" width="0.6711%" height="15" fill="rgb(220,193,23)" fg:x="63" fg:w="1"/><text x="42.5319%" y="175.50"></text></g><g><title>part1.exe`core::str::traits::impl$10::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$ (1 samples, 0.67%)</title><rect x="42.2819%" y="149" width="0.6711%" height="15" fill="rgb(230,90,52)" fg:x="63" fg:w="1"/><text x="42.5319%" y="159.50"></text></g><g><title>part1.exe`core::str::traits::impl$10::get(core::ops::range::RangeFrom&lt;usize&gt;, ref$ (1 samples, 0.67%)</title><rect x="42.2819%" y="133" width="0.6711%" height="15" fill="rgb(252,106,19)" fg:x="63" fg:w="1"/><text x="42.5319%" y="143.50"></text></g><g><title>part1.exe`nom::internal::impl$14::parse(nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_19::part1::parse_rule_test::closure_env$0,char&gt;*, ref$ (1 samples, 0.67%)</title><rect x="42.9530%" y="181" width="0.6711%" height="15" fill="rgb(206,74,20)" fg:x="64" fg:w="1"/><text x="43.2030%" y="191.50"></text></g><g><title>part1.exe`nom::internal::impl$12::parse(nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;*, ref$ (1 samples, 0.67%)</title><rect x="42.9530%" y="165" width="0.6711%" height="15" fill="rgb(230,138,44)" fg:x="64" fg:w="1"/><text x="43.2030%" y="175.50"></text></g><g><title>part1.exe`nom::character::complete::char::closure$0(nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;*, ref$ (1 samples, 0.67%)</title><rect x="42.9530%" y="149" width="0.6711%" height="15" fill="rgb(235,182,43)" fg:x="64" fg:w="1"/><text x="43.2030%" y="159.50"></text></g><g><title>part1.exe`nom::traits::impl$130::slice(ref$&lt;str$&gt;*, core::ops::range::RangeFrom (1 samples, 0.67%)</title><rect x="42.9530%" y="133" width="0.6711%" height="15" fill="rgb(242,16,51)" fg:x="64" fg:w="1"/><text x="43.2030%" y="143.50"></text></g><g><title>part1.exe`nom::internal::impl$12::parse(nom::sequence::delimited::closure_env$0&lt;ref$&lt;str$&gt;,char,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, ref$ (5 samples, 3.36%)</title><rect x="40.9396%" y="357" width="3.3557%" height="15" fill="rgb(248,9,4)" fg:x="61" fg:w="5"/><text x="41.1896%" y="367.50">par..</text></g><g><title>part1.exe`nom::sequence::delimited::closure$0(nom::sequence::delimited::closure_env$0&lt;ref$&lt;str$&gt;,char,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, ref$ (5 samples, 3.36%)</title><rect x="40.9396%" y="341" width="3.3557%" height="15" fill="rgb(210,31,22)" fg:x="61" fg:w="5"/><text x="41.1896%" y="351.50">par..</text></g><g><title>part1.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$ (5 samples, 3.36%)</title><rect x="40.9396%" y="325" width="3.3557%" height="15" fill="rgb(239,54,39)" fg:x="61" fg:w="5"/><text x="41.1896%" y="335.50">par..</text></g><g><title>part1.exe`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;(nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, ref$ (5 samples, 3.36%)</title><rect x="40.9396%" y="309" width="3.3557%" height="15" fill="rgb(230,99,41)" fg:x="61" fg:w="5"/><text x="41.1896%" y="319.50">par..</text></g><g><title>part1.exe`nom::multi::separated_list1::closure$0(nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, ref$ (5 samples, 3.36%)</title><rect x="40.9396%" y="293" width="3.3557%" height="15" fill="rgb(253,106,12)" fg:x="61" fg:w="5"/><text x="41.1896%" y="303.50">par..</text></g><g><title>part1.exe`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;(tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;*, ref$ (3 samples, 2.01%)</title><rect x="42.2819%" y="277" width="2.0134%" height="15" fill="rgb(213,46,41)" fg:x="63" fg:w="3"/><text x="42.5319%" y="287.50">p..</text></g><g><title>part1.exe`nom::internal::impl$12::parse(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (**)(ref$&lt;str$&gt;), ref$ (3 samples, 2.01%)</title><rect x="42.2819%" y="261" width="2.0134%" height="15" fill="rgb(215,133,35)" fg:x="63" fg:w="3"/><text x="42.5319%" y="271.50">p..</text></g><g><title>part1.exe`core::ops::function::FnMut::call_mut(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (**)(ref$&lt;str$&gt;), ref$ (3 samples, 2.01%)</title><rect x="42.2819%" y="245" width="2.0134%" height="15" fill="rgb(213,28,5)" fg:x="63" fg:w="3"/><text x="42.5319%" y="255.50">p..</text></g><g><title>part1.exe`day_19::part1::parse_rule_test(ref$ (3 samples, 2.01%)</title><rect x="42.2819%" y="229" width="2.0134%" height="15" fill="rgb(215,77,49)" fg:x="63" fg:w="3"/><text x="42.5319%" y="239.50">p..</text></g><g><title>part1.exe`nom::branch::alt(tuple$&lt;nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_19::part1::parse_rule_test::closure_env$0,char&gt;,nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_19::part1::parse_rule_test::closure_env$1,char&gt;,nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_19::part1::parse_rule_test::closure_env$2,char&gt;,nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 1.34%)</title><rect x="42.9530%" y="213" width="1.3423%" height="15" fill="rgb(248,100,22)" fg:x="64" fg:w="2"/><text x="43.2030%" y="223.50"></text></g><g><title>part1.exe`nom::branch::impl$3::choice&lt;ref$&lt;str$&gt;,day_19::part1::Part,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_19::part1::parse_rule_test::closure_env$0,char&gt;,nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_19::part1::parse_rule_test::closure_env$1,char&gt;,nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_19::part1::parse_rule_test::closure_env$2,char&gt;,nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_19::part1::parse_rule_test::closure_env$3,char&gt; &gt;(tuple$&lt;nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_19::part1::parse_rule_test::closure_env$0,char&gt;,nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_19::part1::parse_rule_test::closure_env$1,char&gt;,nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_19::part1::parse_rule_test::closure_env$2,char&gt;,nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_19::part1::parse_rule_test::closure_env$3,char&gt; &gt;*, ref$ (2 samples, 1.34%)</title><rect x="42.9530%" y="197" width="1.3423%" height="15" fill="rgb(208,67,9)" fg:x="64" fg:w="2"/><text x="43.2030%" y="207.50"></text></g><g><title>part1.exe`nom::internal::impl$14::parse(nom::internal::Map&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,day_19::part1::parse_rule_test::closure_env$3,char&gt;*, ref$ (1 samples, 0.67%)</title><rect x="43.6242%" y="181" width="0.6711%" height="15" fill="rgb(219,133,21)" fg:x="65" fg:w="1"/><text x="43.8742%" y="191.50"></text></g><g><title>part1.exe`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;(nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;*, ref$ (1 samples, 0.67%)</title><rect x="43.6242%" y="165" width="0.6711%" height="15" fill="rgb(246,46,29)" fg:x="65" fg:w="1"/><text x="43.8742%" y="175.50"></text></g><g><title>part1.exe`nom::character::complete::char::closure$0(nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;*, ref$ (1 samples, 0.67%)</title><rect x="43.6242%" y="149" width="0.6711%" height="15" fill="rgb(246,185,52)" fg:x="65" fg:w="1"/><text x="43.8742%" y="159.50"></text></g><g><title>part1.exe`miette::eyreish::context::impl$0::context(enum2$&lt;core::result::Result&lt;alloc::string::String,enum2$&lt;day_19::custom_error::AocError&gt; &gt; &gt;, ref$ (15 samples, 10.07%)</title><rect x="34.8993%" y="581" width="10.0671%" height="15" fill="rgb(252,136,11)" fg:x="52" fg:w="15"/><text x="35.1493%" y="591.50">part1.exe`miett..</text></g><g><title>part1.exe`miette::eyreish::context::impl$0::wrap_err(enum2$&lt;core::result::Result&lt;alloc::string::String,enum2$&lt;day_19::custom_error::AocError&gt; &gt; &gt;, ref$ (15 samples, 10.07%)</title><rect x="34.8993%" y="565" width="10.0671%" height="15" fill="rgb(219,138,53)" fg:x="52" fg:w="15"/><text x="35.1493%" y="575.50">part1.exe`miett..</text></g><g><title>part1.exe`day_19::part1::process(ref$ (15 samples, 10.07%)</title><rect x="34.8993%" y="549" width="10.0671%" height="15" fill="rgb(211,51,23)" fg:x="52" fg:w="15"/><text x="35.1493%" y="559.50">part1.exe`day_1..</text></g><g><title>part1.exe`day_19::part1::parse_input(ref$ (12 samples, 8.05%)</title><rect x="36.9128%" y="533" width="8.0537%" height="15" fill="rgb(247,221,28)" fg:x="55" fg:w="12"/><text x="37.1628%" y="543.50">part1.exe`d..</text></g><g><title>part1.exe`nom::internal::impl$12::parse(nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;,std::hash::random::RandomState&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,alloc::vec::Vec&lt;day_19::part1::Rating,alloc::alloc::Global&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;,std::hash::random::RandomState&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;day_19::part1::Rating,alloc::alloc::Global&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;*, ref$ (12 samples, 8.05%)</title><rect x="36.9128%" y="517" width="8.0537%" height="15" fill="rgb(251,222,45)" fg:x="55" fg:w="12"/><text x="37.1628%" y="527.50">part1.exe`n..</text></g><g><title>part1.exe`nom::sequence::separated_pair::closure$0(nom::sequence::separated_pair::closure_env$0&lt;ref$&lt;str$&gt;,std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;,std::hash::random::RandomState&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,alloc::vec::Vec&lt;day_19::part1::Rating,alloc::alloc::Global&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;,std::hash::random::RandomState&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;day_19::part1::Rating,alloc::alloc::Global&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;*, ref$ (12 samples, 8.05%)</title><rect x="36.9128%" y="501" width="8.0537%" height="15" fill="rgb(217,162,53)" fg:x="55" fg:w="12"/><text x="37.1628%" y="511.50">part1.exe`n..</text></g><g><title>part1.exe`nom::internal::impl$12::parse(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;,std::hash::random::RandomState&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (**)(ref$&lt;str$&gt;), ref$ (11 samples, 7.38%)</title><rect x="37.5839%" y="485" width="7.3826%" height="15" fill="rgb(229,93,14)" fg:x="56" fg:w="11"/><text x="37.8339%" y="495.50">part1.exe`..</text></g><g><title>part1.exe`core::ops::function::FnMut::call_mut(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt;,std::hash::random::RandomState&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (**)(ref$&lt;str$&gt;), ref$ (11 samples, 7.38%)</title><rect x="37.5839%" y="469" width="7.3826%" height="15" fill="rgb(209,67,49)" fg:x="56" fg:w="11"/><text x="37.8339%" y="479.50">part1.exe`..</text></g><g><title>part1.exe`day_19::part1::parse_workflows(ref$ (11 samples, 7.38%)</title><rect x="37.5839%" y="453" width="7.3826%" height="15" fill="rgb(213,87,29)" fg:x="56" fg:w="11"/><text x="37.8339%" y="463.50">part1.exe`..</text></g><g><title>part1.exe`nom::internal::impl$12::parse(nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;*, ref$ (8 samples, 5.37%)</title><rect x="39.5973%" y="437" width="5.3691%" height="15" fill="rgb(205,151,52)" fg:x="59" fg:w="8"/><text x="39.8473%" y="447.50">part1.e..</text></g><g><title>part1.exe`nom::multi::separated_list1::closure$0(nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;*, ref$ (8 samples, 5.37%)</title><rect x="39.5973%" y="421" width="5.3691%" height="15" fill="rgb(253,215,39)" fg:x="59" fg:w="8"/><text x="39.8473%" y="431.50">part1.e..</text></g><g><title>part1.exe`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (**)(ref$&lt;str$&gt;), ref$ (6 samples, 4.03%)</title><rect x="40.9396%" y="405" width="4.0268%" height="15" fill="rgb(221,220,41)" fg:x="61" fg:w="6"/><text x="41.1896%" y="415.50">part..</text></g><g><title>part1.exe`core::ops::function::FnMut::call_mut(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,alloc::vec::Vec&lt;enum2$&lt;day_19::part1::Rule&gt;,alloc::alloc::Global&gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (**)(ref$&lt;str$&gt;), ref$ (6 samples, 4.03%)</title><rect x="40.9396%" y="389" width="4.0268%" height="15" fill="rgb(218,133,21)" fg:x="61" fg:w="6"/><text x="41.1896%" y="399.50">part..</text></g><g><title>part1.exe`day_19::part1::parse_workflow(ref$ (6 samples, 4.03%)</title><rect x="40.9396%" y="373" width="4.0268%" height="15" fill="rgb(221,193,43)" fg:x="61" fg:w="6"/><text x="41.1896%" y="383.50">part..</text></g><g><title>part1.exe`nom::sequence::delimited(nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;, nom::multi::separated_list1::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;day_19::part1::Rule&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;, nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.67%)</title><rect x="44.2953%" y="357" width="0.6711%" height="15" fill="rgb(240,128,52)" fg:x="66" fg:w="1"/><text x="44.5453%" y="367.50"></text></g><g><title>part1.exe`std::io::stdio::_print (2 samples, 1.34%)</title><rect x="44.9664%" y="581" width="1.3423%" height="15" fill="rgb(253,114,12)" fg:x="67" fg:w="2"/><text x="45.2164%" y="591.50"></text></g><g><title>part1.exe`std::io::stdio::print_to (1 samples, 0.67%)</title><rect x="45.6376%" y="565" width="0.6711%" height="15" fill="rgb(215,223,47)" fg:x="68" fg:w="1"/><text x="45.8876%" y="575.50"></text></g><g><title>part1.exe`std::io::stdio::impl$12::write_fmt (1 samples, 0.67%)</title><rect x="45.6376%" y="549" width="0.6711%" height="15" fill="rgb(248,225,23)" fg:x="68" fg:w="1"/><text x="45.8876%" y="559.50"></text></g><g><title>part1.exe`std::io::Write::write_fmt (1 samples, 0.67%)</title><rect x="45.6376%" y="533" width="0.6711%" height="15" fill="rgb(250,108,0)" fg:x="68" fg:w="1"/><text x="45.8876%" y="543.50"></text></g><g><title>part1.exe`core::fmt::write (1 samples, 0.67%)</title><rect x="45.6376%" y="517" width="0.6711%" height="15" fill="rgb(228,208,7)" fg:x="68" fg:w="1"/><text x="45.8876%" y="527.50"></text></g><g><title>part1.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (1 samples, 0.67%)</title><rect x="45.6376%" y="501" width="0.6711%" height="15" fill="rgb(244,45,10)" fg:x="68" fg:w="1"/><text x="45.8876%" y="511.50"></text></g><g><title>part1.exe`std::io::stdio::impl$13::write_all (1 samples, 0.67%)</title><rect x="45.6376%" y="485" width="0.6711%" height="15" fill="rgb(207,125,25)" fg:x="68" fg:w="1"/><text x="45.8876%" y="495.50"></text></g><g><title>part1.exe`std::sync::remutex::impl$6::deref (1 samples, 0.67%)</title><rect x="45.6376%" y="469" width="0.6711%" height="15" fill="rgb(210,195,18)" fg:x="68" fg:w="1"/><text x="45.8876%" y="479.50"></text></g><g><title>part1.exe`std::io::buffered::linewritershim::impl$1::write_all (1 samples, 0.67%)</title><rect x="45.6376%" y="453" width="0.6711%" height="15" fill="rgb(249,80,12)" fg:x="68" fg:w="1"/><text x="45.8876%" y="463.50"></text></g><g><title>part1.exe`core::result::impl$26::branch (1 samples, 0.67%)</title><rect x="45.6376%" y="437" width="0.6711%" height="15" fill="rgb(221,65,9)" fg:x="68" fg:w="1"/><text x="45.8876%" y="447.50"></text></g><g><title>part1.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (1 samples, 0.67%)</title><rect x="45.6376%" y="421" width="0.6711%" height="15" fill="rgb(235,49,36)" fg:x="68" fg:w="1"/><text x="45.8876%" y="431.50"></text></g><g><title>part1.exe`std::io::stdio::impl$1::write (1 samples, 0.67%)</title><rect x="45.6376%" y="405" width="0.6711%" height="15" fill="rgb(225,32,20)" fg:x="68" fg:w="1"/><text x="45.8876%" y="415.50"></text></g><g><title>part1.exe`std::io::stdio::handle_ebadf (1 samples, 0.67%)</title><rect x="45.6376%" y="389" width="0.6711%" height="15" fill="rgb(215,141,46)" fg:x="68" fg:w="1"/><text x="45.8876%" y="399.50"></text></g><g><title>part1.exe`std::sys::windows::stdio::write (1 samples, 0.67%)</title><rect x="45.6376%" y="373" width="0.6711%" height="15" fill="rgb(250,160,47)" fg:x="68" fg:w="1"/><text x="45.8876%" y="383.50"></text></g><g><title>part1.exe`std::sys::windows::stdio::write_valid_utf8_to_console (1 samples, 0.67%)</title><rect x="45.6376%" y="357" width="0.6711%" height="15" fill="rgb(216,222,40)" fg:x="68" fg:w="1"/><text x="45.8876%" y="367.50"></text></g><g><title>part1.exe`std::sys::windows::stdio::write_u16s (1 samples, 0.67%)</title><rect x="45.6376%" y="341" width="0.6711%" height="15" fill="rgb(234,217,39)" fg:x="68" fg:w="1"/><text x="45.8876%" y="351.50"></text></g><g><title>part1.exe`std::sys::windows::cvt (1 samples, 0.67%)</title><rect x="45.6376%" y="325" width="0.6711%" height="15" fill="rgb(207,178,40)" fg:x="68" fg:w="1"/><text x="45.8876%" y="335.50"></text></g><g><title>part1.exe`std::sys::windows::impl$3::is_zero (1 samples, 0.67%)</title><rect x="45.6376%" y="309" width="0.6711%" height="15" fill="rgb(221,136,13)" fg:x="68" fg:w="1"/><text x="45.8876%" y="319.50"></text></g><g><title>`0x7FFE9D34D64E (1 samples, 0.67%)</title><rect x="45.6376%" y="293" width="0.6711%" height="15" fill="rgb(249,199,10)" fg:x="68" fg:w="1"/><text x="45.8876%" y="303.50"></text></g><g><title>`0x7FFE9D34D6E3 (1 samples, 0.67%)</title><rect x="45.6376%" y="277" width="0.6711%" height="15" fill="rgb(249,222,13)" fg:x="68" fg:w="1"/><text x="45.8876%" y="287.50"></text></g><g><title>`0x7FFE9D34DA19 (1 samples, 0.67%)</title><rect x="45.6376%" y="261" width="0.6711%" height="15" fill="rgb(244,185,38)" fg:x="68" fg:w="1"/><text x="45.8876%" y="271.50"></text></g><g><title>`0x7FFE9FA8F454 (1 samples, 0.67%)</title><rect x="45.6376%" y="245" width="0.6711%" height="15" fill="rgb(236,202,9)" fg:x="68" fg:w="1"/><text x="45.8876%" y="255.50"></text></g><g><title>part1.exe`__chkstk() (1 samples, 0.67%)</title><rect x="46.3087%" y="469" width="0.6711%" height="15" fill="rgb(250,229,37)" fg:x="69" fg:w="1"/><text x="46.5587%" y="479.50"></text></g><g><title>part1.exe`std::hash::random::impl$5::default (1 samples, 0.67%)</title><rect x="46.9799%" y="421" width="0.6711%" height="15" fill="rgb(206,174,23)" fg:x="70" fg:w="1"/><text x="47.2299%" y="431.50"></text></g><g><title>part1.exe`std::hash::random::RandomState::new (1 samples, 0.67%)</title><rect x="46.9799%" y="405" width="0.6711%" height="15" fill="rgb(211,33,43)" fg:x="70" fg:w="1"/><text x="47.2299%" y="415.50"></text></g><g><title>part1.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::with (1 samples, 0.67%)</title><rect x="46.9799%" y="389" width="0.6711%" height="15" fill="rgb(245,58,50)" fg:x="70" fg:w="1"/><text x="47.2299%" y="399.50"></text></g><g><title>part1.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_with (1 samples, 0.67%)</title><rect x="46.9799%" y="373" width="0.6711%" height="15" fill="rgb(244,68,36)" fg:x="70" fg:w="1"/><text x="47.2299%" y="383.50"></text></g><g><title>part1.exe`std::hash::random::impl$0::new::KEYS::__getit(enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (1 samples, 0.67%)</title><rect x="46.9799%" y="357" width="0.6711%" height="15" fill="rgb(232,229,15)" fg:x="70" fg:w="1"/><text x="47.2299%" y="367.50"></text></g><g><title>part1.exe`std::sys::common::thread_local::fast_local::Key&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::get (1 samples, 0.67%)</title><rect x="46.9799%" y="341" width="0.6711%" height="15" fill="rgb(254,30,23)" fg:x="70" fg:w="1"/><text x="47.2299%" y="351.50"></text></g><g><title>part1.exe`std::sys::common::thread_local::lazy::LazyKeyInner&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::get (1 samples, 0.67%)</title><rect x="46.9799%" y="325" width="0.6711%" height="15" fill="rgb(235,160,14)" fg:x="70" fg:w="1"/><text x="47.2299%" y="335.50"></text></g><g><title>part1.exe`enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;::as_ref (1 samples, 0.67%)</title><rect x="46.9799%" y="309" width="0.6711%" height="15" fill="rgb(212,155,44)" fg:x="70" fg:w="1"/><text x="47.2299%" y="319.50"></text></g><g><title>part1.exe`std::hash::random::impl$0::new::KEYS::__getit::__KEY (1 samples, 0.67%)</title><rect x="46.9799%" y="293" width="0.6711%" height="15" fill="rgb(226,2,50)" fg:x="70" fg:w="1"/><text x="47.2299%" y="303.50"></text></g><g><title>`0x7FFE9C6F189E (1 samples, 0.67%)</title><rect x="47.6510%" y="309" width="0.6711%" height="15" fill="rgb(234,177,6)" fg:x="71" fg:w="1"/><text x="47.9010%" y="319.50"></text></g><g><title>`0x7FFE9C6F3E20 (1 samples, 0.67%)</title><rect x="47.6510%" y="293" width="0.6711%" height="15" fill="rgb(217,24,9)" fg:x="71" fg:w="1"/><text x="47.9010%" y="303.50"></text></g><g><title>`0x7FFE9C6F62C9 (1 samples, 0.67%)</title><rect x="47.6510%" y="277" width="0.6711%" height="15" fill="rgb(220,13,46)" fg:x="71" fg:w="1"/><text x="47.9010%" y="287.50"></text></g><g><title>`0x7FFE9C6F6413 (1 samples, 0.67%)</title><rect x="47.6510%" y="261" width="0.6711%" height="15" fill="rgb(239,221,27)" fg:x="71" fg:w="1"/><text x="47.9010%" y="271.50"></text></g><g><title>`0x7FFE9FA8F454 (1 samples, 0.67%)</title><rect x="47.6510%" y="245" width="0.6711%" height="15" fill="rgb(222,198,25)" fg:x="71" fg:w="1"/><text x="47.9010%" y="255.50"></text></g><g><title>`0x7FFE9C6F46FF (1 samples, 0.67%)</title><rect x="48.3221%" y="293" width="0.6711%" height="15" fill="rgb(211,99,13)" fg:x="72" fg:w="1"/><text x="48.5721%" y="303.50"></text></g><g><title>`0x7FFE9C6F3E20 (1 samples, 0.67%)</title><rect x="48.3221%" y="277" width="0.6711%" height="15" fill="rgb(232,111,31)" fg:x="72" fg:w="1"/><text x="48.5721%" y="287.50"></text></g><g><title>`0x7FFE9C6F62C9 (1 samples, 0.67%)</title><rect x="48.3221%" y="261" width="0.6711%" height="15" fill="rgb(245,82,37)" fg:x="72" fg:w="1"/><text x="48.5721%" y="271.50"></text></g><g><title>`0x7FFE9C6F6413 (1 samples, 0.67%)</title><rect x="48.3221%" y="245" width="0.6711%" height="15" fill="rgb(227,149,46)" fg:x="72" fg:w="1"/><text x="48.5721%" y="255.50"></text></g><g><title>`0x7FFE9FA8F454 (1 samples, 0.67%)</title><rect x="48.3221%" y="229" width="0.6711%" height="15" fill="rgb(218,36,50)" fg:x="72" fg:w="1"/><text x="48.5721%" y="239.50"></text></g><g><title>`0x7FFE9FA1C254 (1 samples, 0.67%)</title><rect x="48.9933%" y="149" width="0.6711%" height="15" fill="rgb(226,80,48)" fg:x="73" fg:w="1"/><text x="49.2433%" y="159.50"></text></g><g><title>`0x7FFE9FA1C0CA (1 samples, 0.67%)</title><rect x="48.9933%" y="133" width="0.6711%" height="15" fill="rgb(238,224,15)" fg:x="73" fg:w="1"/><text x="49.2433%" y="143.50"></text></g><g><title>`0x7FFE9FA1C4CC (1 samples, 0.67%)</title><rect x="48.9933%" y="117" width="0.6711%" height="15" fill="rgb(241,136,10)" fg:x="73" fg:w="1"/><text x="49.2433%" y="127.50"></text></g><g><title>`0x7FFE9FA8F874 (1 samples, 0.67%)</title><rect x="48.9933%" y="101" width="0.6711%" height="15" fill="rgb(208,32,45)" fg:x="73" fg:w="1"/><text x="49.2433%" y="111.50"></text></g><g><title>`0x7FFE9FA1C399 (1 samples, 0.67%)</title><rect x="49.6644%" y="149" width="0.6711%" height="15" fill="rgb(207,135,9)" fg:x="74" fg:w="1"/><text x="49.9144%" y="159.50"></text></g><g><title>`0x7FFE9FA1AF46 (1 samples, 0.67%)</title><rect x="49.6644%" y="133" width="0.6711%" height="15" fill="rgb(206,86,44)" fg:x="74" fg:w="1"/><text x="49.9144%" y="143.50"></text></g><g><title>`0x7FFE9FA1B121 (1 samples, 0.67%)</title><rect x="49.6644%" y="117" width="0.6711%" height="15" fill="rgb(245,177,15)" fg:x="74" fg:w="1"/><text x="49.9144%" y="127.50"></text></g><g><title>`0x7FFE9FA1B261 (1 samples, 0.67%)</title><rect x="49.6644%" y="101" width="0.6711%" height="15" fill="rgb(206,64,50)" fg:x="74" fg:w="1"/><text x="49.9144%" y="111.50"></text></g><g><title>`0x7FFE9FA1B346 (1 samples, 0.67%)</title><rect x="49.6644%" y="85" width="0.6711%" height="15" fill="rgb(234,36,40)" fg:x="74" fg:w="1"/><text x="49.9144%" y="95.50"></text></g><g><title>`0x7FFE9FA188B6 (3 samples, 2.01%)</title><rect x="48.9933%" y="197" width="2.0134%" height="15" fill="rgb(213,64,8)" fg:x="73" fg:w="3"/><text x="49.2433%" y="207.50">`..</text></g><g><title>`0x7FFE9FA1DDA9 (3 samples, 2.01%)</title><rect x="48.9933%" y="181" width="2.0134%" height="15" fill="rgb(210,75,36)" fg:x="73" fg:w="3"/><text x="49.2433%" y="191.50">`..</text></g><g><title>`0x7FFE9FA1CE29 (3 samples, 2.01%)</title><rect x="48.9933%" y="165" width="2.0134%" height="15" fill="rgb(229,88,21)" fg:x="73" fg:w="3"/><text x="49.2433%" y="175.50">`..</text></g><g><title>`0x7FFE9FA1C3F8 (1 samples, 0.67%)</title><rect x="50.3356%" y="149" width="0.6711%" height="15" fill="rgb(252,204,47)" fg:x="75" fg:w="1"/><text x="50.5856%" y="159.50"></text></g><g><title>`0x7FFE9FA146F5 (1 samples, 0.67%)</title><rect x="50.3356%" y="133" width="0.6711%" height="15" fill="rgb(208,77,27)" fg:x="75" fg:w="1"/><text x="50.5856%" y="143.50"></text></g><g><title>`0x7FFE9FA2AB11 (1 samples, 0.67%)</title><rect x="50.3356%" y="117" width="0.6711%" height="15" fill="rgb(221,76,26)" fg:x="75" fg:w="1"/><text x="50.5856%" y="127.50"></text></g><g><title>`0x7FFE9FA9BF81 (1 samples, 0.67%)</title><rect x="50.3356%" y="101" width="0.6711%" height="15" fill="rgb(225,139,18)" fg:x="75" fg:w="1"/><text x="50.5856%" y="111.50"></text></g><g><title>`0x7FFE9D6F0CF5 (1 samples, 0.67%)</title><rect x="51.0067%" y="117" width="0.6711%" height="15" fill="rgb(230,137,11)" fg:x="76" fg:w="1"/><text x="51.2567%" y="127.50"></text></g><g><title>`0x7FFE9D6DD941 (1 samples, 0.67%)</title><rect x="51.0067%" y="101" width="0.6711%" height="15" fill="rgb(212,28,1)" fg:x="76" fg:w="1"/><text x="51.2567%" y="111.50"></text></g><g><title>`0x7FFE9FA4D6E6 (1 samples, 0.67%)</title><rect x="51.0067%" y="85" width="0.6711%" height="15" fill="rgb(248,164,17)" fg:x="76" fg:w="1"/><text x="51.2567%" y="95.50"></text></g><g><title>`0x7FFE9FA221CA (1 samples, 0.67%)</title><rect x="51.0067%" y="69" width="0.6711%" height="15" fill="rgb(222,171,42)" fg:x="76" fg:w="1"/><text x="51.2567%" y="79.50"></text></g><g><title>`0x7FFE9FA22057 (1 samples, 0.67%)</title><rect x="51.0067%" y="53" width="0.6711%" height="15" fill="rgb(243,84,45)" fg:x="76" fg:w="1"/><text x="51.2567%" y="63.50"></text></g><g><title>`0x7FFE9FA92DC4 (1 samples, 0.67%)</title><rect x="51.0067%" y="37" width="0.6711%" height="15" fill="rgb(252,49,23)" fg:x="76" fg:w="1"/><text x="51.2567%" y="47.50"></text></g><g><title>`0x7FFE9D6D6FB9 (1 samples, 0.67%)</title><rect x="51.6779%" y="101" width="0.6711%" height="15" fill="rgb(215,19,7)" fg:x="77" fg:w="1"/><text x="51.9279%" y="111.50"></text></g><g><title>`0x7FFE9D6D6CA9 (1 samples, 0.67%)</title><rect x="51.6779%" y="85" width="0.6711%" height="15" fill="rgb(238,81,41)" fg:x="77" fg:w="1"/><text x="51.9279%" y="95.50"></text></g><g><title>`0x7FFE9D6D6714 (1 samples, 0.67%)</title><rect x="51.6779%" y="69" width="0.6711%" height="15" fill="rgb(210,199,37)" fg:x="77" fg:w="1"/><text x="51.9279%" y="79.50"></text></g><g><title>`0x7FFE9FA8F5B4 (1 samples, 0.67%)</title><rect x="51.6779%" y="53" width="0.6711%" height="15" fill="rgb(244,192,49)" fg:x="77" fg:w="1"/><text x="51.9279%" y="63.50"></text></g><g><title>part1.exe`std::collections::hash::map::impl$8::default (9 samples, 6.04%)</title><rect x="46.9799%" y="437" width="6.0403%" height="15" fill="rgb(226,211,11)" fg:x="70" fg:w="9"/><text x="47.2299%" y="447.50">part1.ex..</text></g><g><title>part1.exe`std::sys::common::thread_local::fast_local::Key&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_initialize&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;,std::hash::random::impl$0::new::KEYS::__getit::closure_env$0&gt; (8 samples, 5.37%)</title><rect x="47.6510%" y="421" width="5.3691%" height="15" fill="rgb(236,162,54)" fg:x="71" fg:w="8"/><text x="47.9010%" y="431.50">part1.e..</text></g><g><title>part1.exe`std::sys::common::thread_local::lazy::LazyKeyInner&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::initialize (8 samples, 5.37%)</title><rect x="47.6510%" y="405" width="5.3691%" height="15" fill="rgb(220,229,9)" fg:x="71" fg:w="8"/><text x="47.9010%" y="415.50">part1.e..</text></g><g><title>part1.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (8 samples, 5.37%)</title><rect x="47.6510%" y="389" width="5.3691%" height="15" fill="rgb(250,87,22)" fg:x="71" fg:w="8"/><text x="47.9010%" y="399.50">part1.e..</text></g><g><title>part1.exe`core::ptr::write(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (8 samples, 5.37%)</title><rect x="47.6510%" y="373" width="5.3691%" height="15" fill="rgb(239,43,17)" fg:x="71" fg:w="8"/><text x="47.9010%" y="383.50">part1.e..</text></g><g><title>part1.exe`std::sys::windows::rand::hashmap_random_keys (8 samples, 5.37%)</title><rect x="47.6510%" y="357" width="5.3691%" height="15" fill="rgb(231,177,25)" fg:x="71" fg:w="8"/><text x="47.9010%" y="367.50">part1.e..</text></g><g><title>part1.exe`std::sys::windows::c::nt_success (8 samples, 5.37%)</title><rect x="47.6510%" y="341" width="5.3691%" height="15" fill="rgb(219,179,1)" fg:x="71" fg:w="8"/><text x="47.9010%" y="351.50">part1.e..</text></g><g><title>`0x7FFE9C6F177C (8 samples, 5.37%)</title><rect x="47.6510%" y="325" width="5.3691%" height="15" fill="rgb(238,219,53)" fg:x="71" fg:w="8"/><text x="47.9010%" y="335.50">`0x7FFE..</text></g><g><title>`0x7FFE9C6F18D6 (7 samples, 4.70%)</title><rect x="48.3221%" y="309" width="4.6980%" height="15" fill="rgb(232,167,36)" fg:x="72" fg:w="7"/><text x="48.5721%" y="319.50">`0x7F..</text></g><g><title>`0x7FFE9C6F55D3 (6 samples, 4.03%)</title><rect x="48.9933%" y="293" width="4.0268%" height="15" fill="rgb(244,19,51)" fg:x="73" fg:w="6"/><text x="49.2433%" y="303.50">`0x7..</text></g><g><title>`0x7FFE9C6F7969 (6 samples, 4.03%)</title><rect x="48.9933%" y="277" width="4.0268%" height="15" fill="rgb(224,6,22)" fg:x="73" fg:w="6"/><text x="49.2433%" y="287.50">`0x7..</text></g><g><title>`0x7FFE9C6F7E85 (6 samples, 4.03%)</title><rect x="48.9933%" y="261" width="4.0268%" height="15" fill="rgb(224,145,5)" fg:x="73" fg:w="6"/><text x="49.2433%" y="271.50">`0x7..</text></g><g><title>`0x7FFE9D336452 (6 samples, 4.03%)</title><rect x="48.9933%" y="245" width="4.0268%" height="15" fill="rgb(234,130,49)" fg:x="73" fg:w="6"/><text x="49.2433%" y="255.50">`0x7..</text></g><g><title>`0x7FFE9FA1A25A (6 samples, 4.03%)</title><rect x="48.9933%" y="229" width="4.0268%" height="15" fill="rgb(254,6,2)" fg:x="73" fg:w="6"/><text x="49.2433%" y="239.50">`0x7..</text></g><g><title>`0x7FFE9FA08CAC (6 samples, 4.03%)</title><rect x="48.9933%" y="213" width="4.0268%" height="15" fill="rgb(208,96,46)" fg:x="73" fg:w="6"/><text x="49.2433%" y="223.50">`0x7..</text></g><g><title>`0x7FFE9FA18940 (3 samples, 2.01%)</title><rect x="51.0067%" y="197" width="2.0134%" height="15" fill="rgb(239,3,39)" fg:x="76" fg:w="3"/><text x="51.2567%" y="207.50">`..</text></g><g><title>`0x7FFE9FA1D62D (3 samples, 2.01%)</title><rect x="51.0067%" y="181" width="2.0134%" height="15" fill="rgb(233,210,1)" fg:x="76" fg:w="3"/><text x="51.2567%" y="191.50">`..</text></g><g><title>`0x7FFE9FA5CDFE (3 samples, 2.01%)</title><rect x="51.0067%" y="165" width="2.0134%" height="15" fill="rgb(244,137,37)" fg:x="76" fg:w="3"/><text x="51.2567%" y="175.50">`..</text></g><g><title>`0x7FFE9FA5D04D (3 samples, 2.01%)</title><rect x="51.0067%" y="149" width="2.0134%" height="15" fill="rgb(240,136,2)" fg:x="76" fg:w="3"/><text x="51.2567%" y="159.50">`..</text></g><g><title>`0x7FFE9FA1869F (3 samples, 2.01%)</title><rect x="51.0067%" y="133" width="2.0134%" height="15" fill="rgb(239,18,37)" fg:x="76" fg:w="3"/><text x="51.2567%" y="143.50">`..</text></g><g><title>`0x7FFE9D6F0CFA (2 samples, 1.34%)</title><rect x="51.6779%" y="117" width="1.3423%" height="15" fill="rgb(218,185,22)" fg:x="77" fg:w="2"/><text x="51.9279%" y="127.50"></text></g><g><title>`0x7FFE9D6D6FCD (1 samples, 0.67%)</title><rect x="52.3490%" y="101" width="0.6711%" height="15" fill="rgb(225,218,4)" fg:x="78" fg:w="1"/><text x="52.5990%" y="111.50"></text></g><g><title>`0x7FFE9D6D6E96 (1 samples, 0.67%)</title><rect x="52.3490%" y="85" width="0.6711%" height="15" fill="rgb(230,182,32)" fg:x="78" fg:w="1"/><text x="52.5990%" y="95.50"></text></g><g><title>`0x7FFE9D6D69C3 (1 samples, 0.67%)</title><rect x="52.3490%" y="69" width="0.6711%" height="15" fill="rgb(242,56,43)" fg:x="78" fg:w="1"/><text x="52.5990%" y="79.50"></text></g><g><title>`0x7FFE9D6D6AD4 (1 samples, 0.67%)</title><rect x="52.3490%" y="53" width="0.6711%" height="15" fill="rgb(233,99,24)" fg:x="78" fg:w="1"/><text x="52.5990%" y="63.50"></text></g><g><title>`0x7FFE9FA8F9D4 (1 samples, 0.67%)</title><rect x="52.3490%" y="37" width="0.6711%" height="15" fill="rgb(234,209,42)" fg:x="78" fg:w="1"/><text x="52.5990%" y="47.50"></text></g><g><title>part1.exe`tracing_subscriber::filter::env::EnvFilter::from_default_env (11 samples, 7.38%)</title><rect x="46.3087%" y="533" width="7.3826%" height="15" fill="rgb(227,7,12)" fg:x="69" fg:w="11"/><text x="46.5587%" y="543.50">part1.exe`..</text></g><g><title>part1.exe`core::ptr::drop_in_place (11 samples, 7.38%)</title><rect x="46.3087%" y="517" width="7.3826%" height="15" fill="rgb(245,203,43)" fg:x="69" fg:w="11"/><text x="46.5587%" y="527.50">part1.exe`..</text></g><g><title>part1.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (11 samples, 7.38%)</title><rect x="46.3087%" y="501" width="7.3826%" height="15" fill="rgb(238,205,33)" fg:x="69" fg:w="11"/><text x="46.5587%" y="511.50">part1.exe`..</text></g><g><title>part1.exe`tracing_subscriber::filter::env::builder::Builder::from_env_lossy (11 samples, 7.38%)</title><rect x="46.3087%" y="485" width="7.3826%" height="15" fill="rgb(231,56,7)" fg:x="69" fg:w="11"/><text x="46.5587%" y="495.50">part1.exe`..</text></g><g><title>part1.exe`tracing_subscriber::filter::env::builder::Builder::parse_lossy (10 samples, 6.71%)</title><rect x="46.9799%" y="469" width="6.7114%" height="15" fill="rgb(244,186,29)" fg:x="70" fg:w="10"/><text x="47.2299%" y="479.50">part1.exe..</text></g><g><title>part1.exe`tracing_subscriber::filter::env::builder::Builder::from_directives(core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::filter::Filter&lt;core::str::iter::Split&lt;char&gt;,tracing_subscriber::filter::env::builder::impl$0::parse_lossy::closure_env$0&lt;alloc::string::String&gt; &gt;,tracing_subscriber::filter::env::builder::impl$0::parse_lossy::closure_env$1 (10 samples, 6.71%)</title><rect x="46.9799%" y="453" width="6.7114%" height="15" fill="rgb(234,111,31)" fg:x="70" fg:w="10"/><text x="47.2299%" y="463.50">part1.exe..</text></g><g><title>part1.exe`thread_local::ThreadLocal&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;tracing_core::metadata::LevelFilter,alloc::alloc::Global&gt; &gt; &gt;::new (1 samples, 0.67%)</title><rect x="53.0201%" y="437" width="0.6711%" height="15" fill="rgb(241,149,10)" fg:x="79" fg:w="1"/><text x="53.2701%" y="447.50"></text></g><g><title>part1.exe`thread_local::ThreadLocal&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;tracing_core::metadata::LevelFilter,alloc::alloc::Global&gt; &gt; &gt;::with_capacity (1 samples, 0.67%)</title><rect x="53.0201%" y="421" width="0.6711%" height="15" fill="rgb(249,206,44)" fg:x="79" fg:w="1"/><text x="53.2701%" y="431.50"></text></g><g><title>part1.exe`thread_local::allocate_bucket (1 samples, 0.67%)</title><rect x="53.0201%" y="405" width="0.6711%" height="15" fill="rgb(251,153,30)" fg:x="79" fg:w="1"/><text x="53.2701%" y="415.50"></text></g><g><title>part1.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,thread_local::allocate_bucket::closure_env$0&lt;core::cell::RefCell&lt;alloc::vec::Vec (1 samples, 0.67%)</title><rect x="53.0201%" y="389" width="0.6711%" height="15" fill="rgb(239,152,38)" fg:x="79" fg:w="1"/><text x="53.2701%" y="399.50"></text></g><g><title>part1.exe`alloc::boxed::impl$52::from_iter&lt;thread_local::Entry&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;tracing_core::metadata::LevelFilter,alloc::alloc::Global&gt; &gt; &gt;,core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,thread_local::allocate_bucket::closure_env$0&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;tracing_core::metadata::LevelFilter,alloc::alloc::Global&gt; &gt; &gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,thread_local::allocate_bucket::closure_env$0&lt;core::cell::RefCell&lt;alloc::vec::Vec (1 samples, 0.67%)</title><rect x="53.0201%" y="373" width="0.6711%" height="15" fill="rgb(249,139,47)" fg:x="79" fg:w="1"/><text x="53.2701%" y="383.50"></text></g><g><title>part1.exe`tracing_subscriber::fmt::SubscriberBuilder&lt;tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,tracing_subscriber::filter::env::EnvFilter,std::io::stdio::Stdout (*)()&gt;::finish(tracing_subscriber::fmt::SubscriberBuilder&lt;tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,tracing_subscriber::filter::env::EnvFilter,std::io::stdio::Stdout (*) (1 samples, 0.67%)</title><rect x="53.6913%" y="533" width="0.6711%" height="15" fill="rgb(244,64,35)" fg:x="80" fg:w="1"/><text x="53.9413%" y="543.50"></text></g><g><title>part1.exe`tracing_subscriber::registry::sharded::impl$0::default (1 samples, 0.67%)</title><rect x="53.6913%" y="517" width="0.6711%" height="15" fill="rgb(216,46,15)" fg:x="80" fg:w="1"/><text x="53.9413%" y="527.50"></text></g><g><title>part1.exe`thread_local::ThreadLocal&lt;core::cell::RefCell&lt;tracing_subscriber::registry::stack::SpanStack&gt; &gt;::new (1 samples, 0.67%)</title><rect x="53.6913%" y="501" width="0.6711%" height="15" fill="rgb(250,74,19)" fg:x="80" fg:w="1"/><text x="53.9413%" y="511.50"></text></g><g><title>part1.exe`sharded_slab::shard::Array&lt;tracing_subscriber::registry::sharded::DataInner,sharded_slab::cfg::DefaultConfig&gt;::new&lt;tracing_subscriber::registry::sharded::DataInner,sharded_slab::cfg::DefaultConfig&gt; (1 samples, 0.67%)</title><rect x="53.6913%" y="485" width="0.6711%" height="15" fill="rgb(249,42,33)" fg:x="80" fg:w="1"/><text x="53.9413%" y="495.50"></text></g><g><title>part1.exe`alloc::vec::Vec&lt;sharded_slab::shard::Ptr&lt;tracing_subscriber::registry::sharded::DataInner,sharded_slab::cfg::DefaultConfig&gt;,alloc::alloc::Global&gt;::push(sharded_slab::shard::Ptr (1 samples, 0.67%)</title><rect x="53.6913%" y="469" width="0.6711%" height="15" fill="rgb(242,149,17)" fg:x="80" fg:w="1"/><text x="53.9413%" y="479.50"></text></g><g><title>part1.exe`core::ptr::write(sharded_slab::shard::Ptr&lt;tracing_subscriber::registry::sharded::DataInner,sharded_slab::cfg::DefaultConfig&gt;*, sharded_slab::shard::Ptr (1 samples, 0.67%)</title><rect x="53.6913%" y="453" width="0.6711%" height="15" fill="rgb(244,29,21)" fg:x="80" fg:w="1"/><text x="53.9413%" y="463.50"></text></g><g><title>`0x7FFE9FA4AA58 (79 samples, 53.02%)</title><rect x="2.0134%" y="821" width="53.0201%" height="15" fill="rgb(220,130,37)" fg:x="3" fg:w="79"/><text x="2.2634%" y="831.50">`0x7FFE9FA4AA58</text></g><g><title>`0x7FFE9DFE257D (79 samples, 53.02%)</title><rect x="2.0134%" y="805" width="53.0201%" height="15" fill="rgb(211,67,2)" fg:x="3" fg:w="79"/><text x="2.2634%" y="815.50">`0x7FFE9DFE257D</text></g><g><title>part1.exe`__scrt_common_main_seh() (45 samples, 30.20%)</title><rect x="24.8322%" y="789" width="30.2013%" height="15" fill="rgb(235,68,52)" fg:x="37" fg:w="45"/><text x="25.0822%" y="799.50">part1.exe`__scrt_common_main_seh()</text></g><g><title>part1.exe`invoke_main() (32 samples, 21.48%)</title><rect x="33.5570%" y="773" width="21.4765%" height="15" fill="rgb(246,142,3)" fg:x="50" fg:w="32"/><text x="33.8070%" y="783.50">part1.exe`invoke_main()</text></g><g><title>part1.exe`std::rt::lang_start&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; &gt;(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; (*) (32 samples, 21.48%)</title><rect x="33.5570%" y="757" width="21.4765%" height="15" fill="rgb(241,25,7)" fg:x="50" fg:w="32"/><text x="33.8070%" y="767.50">part1.exe`std::rt::lang_start&lt;enum..</text></g><g><title>part1.exe`std::rt::lang_start_internal (32 samples, 21.48%)</title><rect x="33.5570%" y="741" width="21.4765%" height="15" fill="rgb(242,119,39)" fg:x="50" fg:w="32"/><text x="33.8070%" y="751.50">part1.exe`std::rt::lang_start_inte..</text></g><g><title>part1.exe`std::panic::catch_unwind (32 samples, 21.48%)</title><rect x="33.5570%" y="725" width="21.4765%" height="15" fill="rgb(241,98,45)" fg:x="50" fg:w="32"/><text x="33.8070%" y="735.50">part1.exe`std::panic::catch_unwind</text></g><g><title>part1.exe`std::panicking::try (32 samples, 21.48%)</title><rect x="33.5570%" y="709" width="21.4765%" height="15" fill="rgb(254,28,30)" fg:x="50" fg:w="32"/><text x="33.8070%" y="719.50">part1.exe`std::panicking::try</text></g><g><title>part1.exe`std::panicking::try::do_call (32 samples, 21.48%)</title><rect x="33.5570%" y="693" width="21.4765%" height="15" fill="rgb(241,142,54)" fg:x="50" fg:w="32"/><text x="33.8070%" y="703.50">part1.exe`std::panicking::try::do_..</text></g><g><title>part1.exe`std::rt::lang_start_internal::closure$2 (30 samples, 20.13%)</title><rect x="34.8993%" y="677" width="20.1342%" height="15" fill="rgb(222,85,15)" fg:x="52" fg:w="30"/><text x="35.1493%" y="687.50">part1.exe`std::rt::lang_start_in..</text></g><g><title>part1.exe`std::panic::catch_unwind (30 samples, 20.13%)</title><rect x="34.8993%" y="661" width="20.1342%" height="15" fill="rgb(210,85,47)" fg:x="52" fg:w="30"/><text x="35.1493%" y="671.50">part1.exe`std::panic::catch_unwi..</text></g><g><title>part1.exe`std::rt::lang_start::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; &gt;(std::rt::lang_start::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$ (30 samples, 20.13%)</title><rect x="34.8993%" y="645" width="20.1342%" height="15" fill="rgb(224,206,25)" fg:x="52" fg:w="30"/><text x="35.1493%" y="655.50">part1.exe`std::rt::lang_start::c..</text></g><g><title>part1.exe`std::process::impl$61::report(enum2$&lt;core::result::Result&lt;tuple$ (30 samples, 20.13%)</title><rect x="34.8993%" y="629" width="20.1342%" height="15" fill="rgb(243,201,19)" fg:x="52" fg:w="30"/><text x="35.1493%" y="639.50">part1.exe`std::process::impl$61:..</text></g><g><title>part1.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; (*)(),enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; &gt;(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; (*) (30 samples, 20.13%)</title><rect x="34.8993%" y="613" width="20.1342%" height="15" fill="rgb(236,59,4)" fg:x="52" fg:w="30"/><text x="35.1493%" y="623.50">part1.exe`std::sys_common::backt..</text></g><g><title>part1.exe`part1::main (30 samples, 20.13%)</title><rect x="34.8993%" y="597" width="20.1342%" height="15" fill="rgb(254,179,45)" fg:x="52" fg:w="30"/><text x="35.1493%" y="607.50">part1.exe`part1::main</text></g><g><title>part1.exe`tracing_subscriber::fmt::init (13 samples, 8.72%)</title><rect x="46.3087%" y="581" width="8.7248%" height="15" fill="rgb(226,14,10)" fg:x="69" fg:w="13"/><text x="46.5587%" y="591.50">part1.exe`tr..</text></g><g><title>part1.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt; &gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt; &gt; &gt;, ref$ (13 samples, 8.72%)</title><rect x="46.3087%" y="565" width="8.7248%" height="15" fill="rgb(244,27,41)" fg:x="69" fg:w="13"/><text x="46.5587%" y="575.50">part1.exe`en..</text></g><g><title>part1.exe`tracing_subscriber::fmt::try_init (13 samples, 8.72%)</title><rect x="46.3087%" y="549" width="8.7248%" height="15" fill="rgb(235,35,32)" fg:x="69" fg:w="13"/><text x="46.5587%" y="559.50">part1.exe`tr..</text></g><g><title>part1.exe`tracing_subscriber::util::SubscriberInitExt::try_init(tracing_subscriber::fmt::Subscriber&lt;tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,tracing_subscriber::filter::env::EnvFilter,std::io::stdio::Stdout (*) (1 samples, 0.67%)</title><rect x="54.3624%" y="533" width="0.6711%" height="15" fill="rgb(218,68,31)" fg:x="81" fg:w="1"/><text x="54.6124%" y="543.50"></text></g><g><title>part1.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,log::SetLoggerError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,log::SetLoggerError&gt; &gt;, tracing_subscriber::util::TryInitError (*) (1 samples, 0.67%)</title><rect x="54.3624%" y="517" width="0.6711%" height="15" fill="rgb(207,120,37)" fg:x="81" fg:w="1"/><text x="54.6124%" y="527.50"></text></g><g><title>part1.exe`tracing_log::log_tracer::Builder::init (1 samples, 0.67%)</title><rect x="54.3624%" y="501" width="0.6711%" height="15" fill="rgb(227,98,0)" fg:x="81" fg:w="1"/><text x="54.6124%" y="511.50"></text></g><g><title>part1.exe`alloc::boxed::impl$0::new (1 samples, 0.67%)</title><rect x="54.3624%" y="485" width="0.6711%" height="15" fill="rgb(207,7,3)" fg:x="81" fg:w="1"/><text x="54.6124%" y="495.50"></text></g><g><title>part1.exe`alloc::alloc::exchange_malloc (1 samples, 0.67%)</title><rect x="54.3624%" y="469" width="0.6711%" height="15" fill="rgb(206,98,19)" fg:x="81" fg:w="1"/><text x="54.6124%" y="479.50"></text></g><g><title>part1.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.67%)</title><rect x="54.3624%" y="453" width="0.6711%" height="15" fill="rgb(217,5,26)" fg:x="81" fg:w="1"/><text x="54.6124%" y="463.50"></text></g><g><title>`0x7FFE9FACCE0D (1 samples, 0.67%)</title><rect x="55.0336%" y="773" width="0.6711%" height="15" fill="rgb(235,190,38)" fg:x="82" fg:w="1"/><text x="55.2836%" y="783.50"></text></g><g><title>`0x7FFE9FACCCC5 (1 samples, 0.67%)</title><rect x="55.0336%" y="757" width="0.6711%" height="15" fill="rgb(247,86,24)" fg:x="82" fg:w="1"/><text x="55.2836%" y="767.50"></text></g><g><title>`0x7FFE9FA9E3E3 (1 samples, 0.67%)</title><rect x="55.0336%" y="741" width="0.6711%" height="15" fill="rgb(205,101,16)" fg:x="82" fg:w="1"/><text x="55.2836%" y="751.50"></text></g><g><title>`0x7FFE9FA91364 (1 samples, 0.67%)</title><rect x="55.0336%" y="725" width="0.6711%" height="15" fill="rgb(246,168,33)" fg:x="82" fg:w="1"/><text x="55.2836%" y="735.50"></text></g><g><title>`0x7FFE9FACD067 (1 samples, 0.67%)</title><rect x="55.7047%" y="773" width="0.6711%" height="15" fill="rgb(231,114,1)" fg:x="83" fg:w="1"/><text x="55.9547%" y="783.50"></text></g><g><title>`0x7FFE9FACC8A8 (1 samples, 0.67%)</title><rect x="55.7047%" y="757" width="0.6711%" height="15" fill="rgb(207,184,53)" fg:x="83" fg:w="1"/><text x="55.9547%" y="767.50"></text></g><g><title>`0x7FFE9FA9EC37 (1 samples, 0.67%)</title><rect x="55.7047%" y="741" width="0.6711%" height="15" fill="rgb(224,95,51)" fg:x="83" fg:w="1"/><text x="55.9547%" y="751.50"></text></g><g><title>`0x7FFE9FA9EDBF (1 samples, 0.67%)</title><rect x="55.7047%" y="725" width="0.6711%" height="15" fill="rgb(212,188,45)" fg:x="83" fg:w="1"/><text x="55.9547%" y="735.50"></text></g><g><title>`0x7FFE9FA8F5B4 (1 samples, 0.67%)</title><rect x="55.7047%" y="709" width="0.6711%" height="15" fill="rgb(223,154,38)" fg:x="83" fg:w="1"/><text x="55.9547%" y="719.50"></text></g><g><title>`0x7FFE9FACD5C9 (1 samples, 0.67%)</title><rect x="56.3758%" y="773" width="0.6711%" height="15" fill="rgb(251,22,52)" fg:x="84" fg:w="1"/><text x="56.6258%" y="783.50"></text></g><g><title>`0x7FFE9FACEE6E (1 samples, 0.67%)</title><rect x="56.3758%" y="757" width="0.6711%" height="15" fill="rgb(229,209,22)" fg:x="84" fg:w="1"/><text x="56.6258%" y="767.50"></text></g><g><title>`0x7FFE9FA37ED0 (1 samples, 0.67%)</title><rect x="56.3758%" y="741" width="0.6711%" height="15" fill="rgb(234,138,34)" fg:x="84" fg:w="1"/><text x="56.6258%" y="751.50"></text></g><g><title>`0x7FFE9FACD74E (1 samples, 0.67%)</title><rect x="57.0470%" y="773" width="0.6711%" height="15" fill="rgb(212,95,11)" fg:x="85" fg:w="1"/><text x="57.2970%" y="783.50"></text></g><g><title>`0x7FFE9FA214E0 (1 samples, 0.67%)</title><rect x="57.0470%" y="757" width="0.6711%" height="15" fill="rgb(240,179,47)" fg:x="85" fg:w="1"/><text x="57.2970%" y="767.50"></text></g><g><title>`0x7FFE9FA221CA (1 samples, 0.67%)</title><rect x="57.0470%" y="741" width="0.6711%" height="15" fill="rgb(240,163,11)" fg:x="85" fg:w="1"/><text x="57.2970%" y="751.50"></text></g><g><title>`0x7FFE9FA22057 (1 samples, 0.67%)</title><rect x="57.0470%" y="725" width="0.6711%" height="15" fill="rgb(236,37,12)" fg:x="85" fg:w="1"/><text x="57.2970%" y="735.50"></text></g><g><title>`0x7FFE9FA92DC4 (1 samples, 0.67%)</title><rect x="57.0470%" y="709" width="0.6711%" height="15" fill="rgb(232,164,16)" fg:x="85" fg:w="1"/><text x="57.2970%" y="719.50"></text></g><g><title>`0x7FFE9FACD791 (1 samples, 0.67%)</title><rect x="57.7181%" y="773" width="0.6711%" height="15" fill="rgb(244,205,15)" fg:x="86" fg:w="1"/><text x="57.9681%" y="783.50"></text></g><g><title>`0x7FFE9FA4812A (1 samples, 0.67%)</title><rect x="57.7181%" y="757" width="0.6711%" height="15" fill="rgb(223,117,47)" fg:x="86" fg:w="1"/><text x="57.9681%" y="767.50"></text></g><g><title>`0x7FFE9FA487EF (1 samples, 0.67%)</title><rect x="57.7181%" y="741" width="0.6711%" height="15" fill="rgb(244,107,35)" fg:x="86" fg:w="1"/><text x="57.9681%" y="751.50"></text></g><g><title>`0x7FFE9FA48894 (1 samples, 0.67%)</title><rect x="57.7181%" y="725" width="0.6711%" height="15" fill="rgb(205,140,8)" fg:x="86" fg:w="1"/><text x="57.9681%" y="735.50"></text></g><g><title>`0x7FFE9FA0E888 (1 samples, 0.67%)</title><rect x="57.7181%" y="709" width="0.6711%" height="15" fill="rgb(228,84,46)" fg:x="86" fg:w="1"/><text x="57.9681%" y="719.50"></text></g><g><title>`0x7FFE9FA48371 (1 samples, 0.67%)</title><rect x="57.7181%" y="693" width="0.6711%" height="15" fill="rgb(254,188,9)" fg:x="86" fg:w="1"/><text x="57.9681%" y="703.50"></text></g><g><title>`0x7FFE9FA4845F (1 samples, 0.67%)</title><rect x="57.7181%" y="677" width="0.6711%" height="15" fill="rgb(206,112,54)" fg:x="86" fg:w="1"/><text x="57.9681%" y="687.50"></text></g><g><title>`0x7FFE9FA2CD59 (1 samples, 0.67%)</title><rect x="57.7181%" y="661" width="0.6711%" height="15" fill="rgb(216,84,49)" fg:x="86" fg:w="1"/><text x="57.9681%" y="671.50"></text></g><g><title>`0x7FFE9FA2FA38 (1 samples, 0.67%)</title><rect x="57.7181%" y="645" width="0.6711%" height="15" fill="rgb(214,194,35)" fg:x="86" fg:w="1"/><text x="57.9681%" y="655.50"></text></g><g><title>`0x7FFE9FA39FDB (1 samples, 0.67%)</title><rect x="57.7181%" y="629" width="0.6711%" height="15" fill="rgb(249,28,3)" fg:x="86" fg:w="1"/><text x="57.9681%" y="639.50"></text></g><g><title>`0x7FFE9FA39541 (1 samples, 0.67%)</title><rect x="57.7181%" y="613" width="0.6711%" height="15" fill="rgb(222,56,52)" fg:x="86" fg:w="1"/><text x="57.9681%" y="623.50"></text></g><g><title>`0x7FFE9FA38E1C (1 samples, 0.67%)</title><rect x="57.7181%" y="597" width="0.6711%" height="15" fill="rgb(245,217,50)" fg:x="86" fg:w="1"/><text x="57.9681%" y="607.50"></text></g><g><title>`0x7FFE9FA39799 (1 samples, 0.67%)</title><rect x="57.7181%" y="581" width="0.6711%" height="15" fill="rgb(213,201,24)" fg:x="86" fg:w="1"/><text x="57.9681%" y="591.50"></text></g><g><title>`0x7FFE9FA223FA (1 samples, 0.67%)</title><rect x="57.7181%" y="565" width="0.6711%" height="15" fill="rgb(248,116,28)" fg:x="86" fg:w="1"/><text x="57.9681%" y="575.50"></text></g><g><title>`0x7FFE9FA6F4C2 (1 samples, 0.67%)</title><rect x="57.7181%" y="549" width="0.6711%" height="15" fill="rgb(219,72,43)" fg:x="86" fg:w="1"/><text x="57.9681%" y="559.50"></text></g><g><title>`0x7FFE9FA8F5B4 (1 samples, 0.67%)</title><rect x="57.7181%" y="533" width="0.6711%" height="15" fill="rgb(209,138,14)" fg:x="86" fg:w="1"/><text x="57.9681%" y="543.50"></text></g><g><title>`0x7FFE9FACD7A7 (1 samples, 0.67%)</title><rect x="58.3893%" y="773" width="0.6711%" height="15" fill="rgb(222,18,33)" fg:x="87" fg:w="1"/><text x="58.6393%" y="783.50"></text></g><g><title>`0x7FFE9FA6FFED (1 samples, 0.67%)</title><rect x="58.3893%" y="757" width="0.6711%" height="15" fill="rgb(213,199,7)" fg:x="87" fg:w="1"/><text x="58.6393%" y="767.50"></text></g><g><title>`0x7FFE9FA8F734 (1 samples, 0.67%)</title><rect x="58.3893%" y="741" width="0.6711%" height="15" fill="rgb(250,110,10)" fg:x="87" fg:w="1"/><text x="58.6393%" y="751.50"></text></g><g><title>`0x7FFE9FACE112 (1 samples, 0.67%)</title><rect x="59.0604%" y="773" width="0.6711%" height="15" fill="rgb(248,123,6)" fg:x="88" fg:w="1"/><text x="59.3104%" y="783.50"></text></g><g><title>`0x7FFE9FA1AF46 (1 samples, 0.67%)</title><rect x="59.0604%" y="757" width="0.6711%" height="15" fill="rgb(206,91,31)" fg:x="88" fg:w="1"/><text x="59.3104%" y="767.50"></text></g><g><title>`0x7FFE9FA1B16C (1 samples, 0.67%)</title><rect x="59.0604%" y="741" width="0.6711%" height="15" fill="rgb(211,154,13)" fg:x="88" fg:w="1"/><text x="59.3104%" y="751.50"></text></g><g><title>`0x7FFE9FA1CC96 (1 samples, 0.67%)</title><rect x="59.0604%" y="725" width="0.6711%" height="15" fill="rgb(225,148,7)" fg:x="88" fg:w="1"/><text x="59.3104%" y="735.50"></text></g><g><title>`0x7FFE9FA8F994 (1 samples, 0.67%)</title><rect x="59.0604%" y="709" width="0.6711%" height="15" fill="rgb(220,160,43)" fg:x="88" fg:w="1"/><text x="59.3104%" y="719.50"></text></g><g><title>`0x7FFE9FACE14A (1 samples, 0.67%)</title><rect x="59.7315%" y="773" width="0.6711%" height="15" fill="rgb(213,52,39)" fg:x="89" fg:w="1"/><text x="59.9815%" y="783.50"></text></g><g><title>`0x7FFE9FA6B868 (1 samples, 0.67%)</title><rect x="59.7315%" y="757" width="0.6711%" height="15" fill="rgb(243,137,7)" fg:x="89" fg:w="1"/><text x="59.9815%" y="767.50"></text></g><g><title>`0x7FFE9FA6B99E (1 samples, 0.67%)</title><rect x="59.7315%" y="741" width="0.6711%" height="15" fill="rgb(230,79,13)" fg:x="89" fg:w="1"/><text x="59.9815%" y="751.50"></text></g><g><title>`0x7FFE9FA2CD59 (1 samples, 0.67%)</title><rect x="59.7315%" y="725" width="0.6711%" height="15" fill="rgb(247,105,23)" fg:x="89" fg:w="1"/><text x="59.9815%" y="735.50"></text></g><g><title>`0x7FFE9FA2F27C (1 samples, 0.67%)</title><rect x="59.7315%" y="709" width="0.6711%" height="15" fill="rgb(223,179,41)" fg:x="89" fg:w="1"/><text x="59.9815%" y="719.50"></text></g><g><title>`0x7FFE9FA1C254 (1 samples, 0.67%)</title><rect x="60.4027%" y="677" width="0.6711%" height="15" fill="rgb(218,9,34)" fg:x="90" fg:w="1"/><text x="60.6527%" y="687.50"></text></g><g><title>`0x7FFE9FA1C0CA (1 samples, 0.67%)</title><rect x="60.4027%" y="661" width="0.6711%" height="15" fill="rgb(222,106,8)" fg:x="90" fg:w="1"/><text x="60.6527%" y="671.50"></text></g><g><title>`0x7FFE9FA1C4CC (1 samples, 0.67%)</title><rect x="60.4027%" y="645" width="0.6711%" height="15" fill="rgb(211,220,0)" fg:x="90" fg:w="1"/><text x="60.6527%" y="655.50"></text></g><g><title>`0x7FFE9FA8F874 (1 samples, 0.67%)</title><rect x="60.4027%" y="629" width="0.6711%" height="15" fill="rgb(229,52,16)" fg:x="90" fg:w="1"/><text x="60.6527%" y="639.50"></text></g><g><title>`0x7FFE9FA1465D (1 samples, 0.67%)</title><rect x="61.0738%" y="661" width="0.6711%" height="15" fill="rgb(212,155,18)" fg:x="91" fg:w="1"/><text x="61.3238%" y="671.50"></text></g><g><title>`0x7FFE9FA14676 (1 samples, 0.67%)</title><rect x="61.7450%" y="661" width="0.6711%" height="15" fill="rgb(242,21,14)" fg:x="92" fg:w="1"/><text x="61.9950%" y="671.50"></text></g><g><title>`0x7FFE9FA14E71 (1 samples, 0.67%)</title><rect x="62.4161%" y="629" width="0.6711%" height="15" fill="rgb(222,19,48)" fg:x="93" fg:w="1"/><text x="62.6661%" y="639.50"></text></g><g><title>`0x7FFE9FA097EA (1 samples, 0.67%)</title><rect x="62.4161%" y="613" width="0.6711%" height="15" fill="rgb(232,45,27)" fg:x="93" fg:w="1"/><text x="62.6661%" y="623.50"></text></g><g><title>`0x7FFE9FA0994B (1 samples, 0.67%)</title><rect x="62.4161%" y="597" width="0.6711%" height="15" fill="rgb(249,103,42)" fg:x="93" fg:w="1"/><text x="62.6661%" y="607.50"></text></g><g><title>`0x7FFE9FA04526 (1 samples, 0.67%)</title><rect x="62.4161%" y="581" width="0.6711%" height="15" fill="rgb(246,81,33)" fg:x="93" fg:w="1"/><text x="62.6661%" y="591.50"></text></g><g><title>`0x7FFE9FA146BB (2 samples, 1.34%)</title><rect x="62.4161%" y="661" width="1.3423%" height="15" fill="rgb(252,33,42)" fg:x="93" fg:w="2"/><text x="62.6661%" y="671.50"></text></g><g><title>`0x7FFE9FA14906 (2 samples, 1.34%)</title><rect x="62.4161%" y="645" width="1.3423%" height="15" fill="rgb(209,212,41)" fg:x="93" fg:w="2"/><text x="62.6661%" y="655.50"></text></g><g><title>`0x7FFE9FA158C4 (1 samples, 0.67%)</title><rect x="63.0872%" y="629" width="0.6711%" height="15" fill="rgb(207,154,6)" fg:x="94" fg:w="1"/><text x="63.3372%" y="639.50"></text></g><g><title>`0x7FFE9FA1CE29 (1 samples, 0.67%)</title><rect x="63.0872%" y="613" width="0.6711%" height="15" fill="rgb(223,64,47)" fg:x="94" fg:w="1"/><text x="63.3372%" y="623.50"></text></g><g><title>`0x7FFE9FA1C399 (1 samples, 0.67%)</title><rect x="63.0872%" y="597" width="0.6711%" height="15" fill="rgb(211,161,38)" fg:x="94" fg:w="1"/><text x="63.3372%" y="607.50"></text></g><g><title>`0x7FFE9FA1AF46 (1 samples, 0.67%)</title><rect x="63.0872%" y="581" width="0.6711%" height="15" fill="rgb(219,138,40)" fg:x="94" fg:w="1"/><text x="63.3372%" y="591.50"></text></g><g><title>`0x7FFE9FA1B1A3 (1 samples, 0.67%)</title><rect x="63.0872%" y="565" width="0.6711%" height="15" fill="rgb(241,228,46)" fg:x="94" fg:w="1"/><text x="63.3372%" y="575.50"></text></g><g><title>`0x7FFE9FA13C63 (1 samples, 0.67%)</title><rect x="63.7584%" y="645" width="0.6711%" height="15" fill="rgb(223,209,38)" fg:x="95" fg:w="1"/><text x="64.0084%" y="655.50"></text></g><g><title>`0x7FFE9FA13C66 (2 samples, 1.34%)</title><rect x="64.4295%" y="645" width="1.3423%" height="15" fill="rgb(236,164,45)" fg:x="96" fg:w="2"/><text x="64.6795%" y="655.50"></text></g><g><title>`0x7FFE9FA13C78 (1 samples, 0.67%)</title><rect x="65.7718%" y="645" width="0.6711%" height="15" fill="rgb(231,15,5)" fg:x="98" fg:w="1"/><text x="66.0218%" y="655.50"></text></g><g><title>`0x7FFE9FA188B6 (10 samples, 6.71%)</title><rect x="60.4027%" y="725" width="6.7114%" height="15" fill="rgb(252,35,15)" fg:x="90" fg:w="10"/><text x="60.6527%" y="735.50">`0x7FFE9F..</text></g><g><title>`0x7FFE9FA1DDA9 (10 samples, 6.71%)</title><rect x="60.4027%" y="709" width="6.7114%" height="15" fill="rgb(248,181,18)" fg:x="90" fg:w="10"/><text x="60.6527%" y="719.50">`0x7FFE9F..</text></g><g><title>`0x7FFE9FA1CE29 (10 samples, 6.71%)</title><rect x="60.4027%" y="693" width="6.7114%" height="15" fill="rgb(233,39,42)" fg:x="90" fg:w="10"/><text x="60.6527%" y="703.50">`0x7FFE9F..</text></g><g><title>`0x7FFE9FA1C3F8 (9 samples, 6.04%)</title><rect x="61.0738%" y="677" width="6.0403%" height="15" fill="rgb(238,110,33)" fg:x="91" fg:w="9"/><text x="61.3238%" y="687.50">`0x7FFE9..</text></g><g><title>`0x7FFE9FA14774 (5 samples, 3.36%)</title><rect x="63.7584%" y="661" width="3.3557%" height="15" fill="rgb(233,195,10)" fg:x="95" fg:w="5"/><text x="64.0084%" y="671.50">`0x..</text></g><g><title>`0x7FFE9FA13D67 (1 samples, 0.67%)</title><rect x="66.4430%" y="645" width="0.6711%" height="15" fill="rgb(254,105,3)" fg:x="99" fg:w="1"/><text x="66.6930%" y="655.50"></text></g><g><title>`0x7FFE9FA00E8B (1 samples, 0.67%)</title><rect x="67.1141%" y="693" width="0.6711%" height="15" fill="rgb(221,225,9)" fg:x="100" fg:w="1"/><text x="67.3641%" y="703.50"></text></g><g><title>`0x7FFE9FA13D58 (1 samples, 0.67%)</title><rect x="67.1141%" y="677" width="0.6711%" height="15" fill="rgb(224,227,45)" fg:x="100" fg:w="1"/><text x="67.3641%" y="687.50"></text></g><g><title>`0x7FFE9FA188E0 (2 samples, 1.34%)</title><rect x="67.1141%" y="725" width="1.3423%" height="15" fill="rgb(229,198,43)" fg:x="100" fg:w="2"/><text x="67.3641%" y="735.50"></text></g><g><title>`0x7FFE9FA1A0A0 (2 samples, 1.34%)</title><rect x="67.1141%" y="709" width="1.3423%" height="15" fill="rgb(206,209,35)" fg:x="100" fg:w="2"/><text x="67.3641%" y="719.50"></text></g><g><title>`0x7FFE9FA01003 (1 samples, 0.67%)</title><rect x="67.7852%" y="693" width="0.6711%" height="15" fill="rgb(245,195,53)" fg:x="101" fg:w="1"/><text x="68.0352%" y="703.50"></text></g><g><title>`0x7FFE9D34CA03 (1 samples, 0.67%)</title><rect x="68.4564%" y="613" width="0.6711%" height="15" fill="rgb(240,92,26)" fg:x="102" fg:w="1"/><text x="68.7064%" y="623.50"></text></g><g><title>`0x7FFE9D34C322 (1 samples, 0.67%)</title><rect x="68.4564%" y="597" width="0.6711%" height="15" fill="rgb(207,40,23)" fg:x="102" fg:w="1"/><text x="68.7064%" y="607.50"></text></g><g><title>`0x7FFE9FA3AFE2 (1 samples, 0.67%)</title><rect x="68.4564%" y="581" width="0.6711%" height="15" fill="rgb(223,111,35)" fg:x="102" fg:w="1"/><text x="68.7064%" y="591.50"></text></g><g><title>`0x7FFE9FA3ACFD (1 samples, 0.67%)</title><rect x="68.4564%" y="565" width="0.6711%" height="15" fill="rgb(229,147,28)" fg:x="102" fg:w="1"/><text x="68.7064%" y="575.50"></text></g><g><title>`0x7FFE9FA8FCB4 (1 samples, 0.67%)</title><rect x="68.4564%" y="549" width="0.6711%" height="15" fill="rgb(211,29,28)" fg:x="102" fg:w="1"/><text x="68.7064%" y="559.50"></text></g><g><title>`0x7FFE9D34B9DD (1 samples, 0.67%)</title><rect x="69.1275%" y="581" width="0.6711%" height="15" fill="rgb(228,72,33)" fg:x="103" fg:w="1"/><text x="69.3775%" y="591.50"></text></g><g><title>`0x7FFE9D34BFDA (1 samples, 0.67%)</title><rect x="69.1275%" y="565" width="0.6711%" height="15" fill="rgb(205,214,31)" fg:x="103" fg:w="1"/><text x="69.3775%" y="575.50"></text></g><g><title>`0x7FFE9FA91364 (1 samples, 0.67%)</title><rect x="69.1275%" y="549" width="0.6711%" height="15" fill="rgb(224,111,15)" fg:x="103" fg:w="1"/><text x="69.3775%" y="559.50"></text></g><g><title>`0x7FFE9D34CC1B (2 samples, 1.34%)</title><rect x="69.1275%" y="613" width="1.3423%" height="15" fill="rgb(253,21,26)" fg:x="103" fg:w="2"/><text x="69.3775%" y="623.50"></text></g><g><title>`0x7FFE9D34BF3C (2 samples, 1.34%)</title><rect x="69.1275%" y="597" width="1.3423%" height="15" fill="rgb(245,139,43)" fg:x="103" fg:w="2"/><text x="69.3775%" y="607.50"></text></g><g><title>`0x7FFE9D34BA0C (1 samples, 0.67%)</title><rect x="69.7987%" y="581" width="0.6711%" height="15" fill="rgb(252,170,7)" fg:x="104" fg:w="1"/><text x="70.0487%" y="591.50"></text></g><g><title>`0x7FFE9D34B90B (1 samples, 0.67%)</title><rect x="69.7987%" y="565" width="0.6711%" height="15" fill="rgb(231,118,14)" fg:x="104" fg:w="1"/><text x="70.0487%" y="575.50"></text></g><g><title>`0x7FFE9D34B296 (1 samples, 0.67%)</title><rect x="69.7987%" y="549" width="0.6711%" height="15" fill="rgb(238,83,0)" fg:x="104" fg:w="1"/><text x="70.0487%" y="559.50"></text></g><g><title>`0x7FFE9D34C68D (4 samples, 2.68%)</title><rect x="68.4564%" y="629" width="2.6846%" height="15" fill="rgb(221,39,39)" fg:x="102" fg:w="4"/><text x="68.7064%" y="639.50">`0..</text></g><g><title>`0x7FFE9D34CC5B (1 samples, 0.67%)</title><rect x="70.4698%" y="613" width="0.6711%" height="15" fill="rgb(222,119,46)" fg:x="105" fg:w="1"/><text x="70.7198%" y="623.50"></text></g><g><title>`0x7FFE9D380A67 (1 samples, 0.67%)</title><rect x="70.4698%" y="597" width="0.6711%" height="15" fill="rgb(222,165,49)" fg:x="105" fg:w="1"/><text x="70.7198%" y="607.50"></text></g><g><title>`0x7FFE9D3808EF (1 samples, 0.67%)</title><rect x="70.4698%" y="581" width="0.6711%" height="15" fill="rgb(219,113,52)" fg:x="105" fg:w="1"/><text x="70.7198%" y="591.50"></text></g><g><title>`0x7FFE9D34D610 (1 samples, 0.67%)</title><rect x="70.4698%" y="565" width="0.6711%" height="15" fill="rgb(214,7,15)" fg:x="105" fg:w="1"/><text x="70.7198%" y="575.50"></text></g><g><title>`0x7FFE9D34D924 (1 samples, 0.67%)</title><rect x="70.4698%" y="549" width="0.6711%" height="15" fill="rgb(235,32,4)" fg:x="105" fg:w="1"/><text x="70.7198%" y="559.50"></text></g><g><title>`0x7FFE9D34DA19 (1 samples, 0.67%)</title><rect x="70.4698%" y="533" width="0.6711%" height="15" fill="rgb(238,90,54)" fg:x="105" fg:w="1"/><text x="70.7198%" y="543.50"></text></g><g><title>`0x7FFE9FA8F454 (1 samples, 0.67%)</title><rect x="70.4698%" y="517" width="0.6711%" height="15" fill="rgb(213,208,19)" fg:x="105" fg:w="1"/><text x="70.7198%" y="527.50"></text></g><g><title>`0x7FFE9D34C477 (1 samples, 0.67%)</title><rect x="71.1409%" y="549" width="0.6711%" height="15" fill="rgb(233,156,4)" fg:x="106" fg:w="1"/><text x="71.3909%" y="559.50"></text></g><g><title>`0x7FFE9D34C3A3 (1 samples, 0.67%)</title><rect x="71.1409%" y="533" width="0.6711%" height="15" fill="rgb(207,194,5)" fg:x="106" fg:w="1"/><text x="71.3909%" y="543.50"></text></g><g><title>`0x7FFE9D34C3DA (1 samples, 0.67%)</title><rect x="71.1409%" y="517" width="0.6711%" height="15" fill="rgb(206,111,30)" fg:x="106" fg:w="1"/><text x="71.3909%" y="527.50"></text></g><g><title>`0x7FFE9FA806C1 (1 samples, 0.67%)</title><rect x="71.1409%" y="501" width="0.6711%" height="15" fill="rgb(243,70,54)" fg:x="106" fg:w="1"/><text x="71.3909%" y="511.50"></text></g><g><title>`0x7FFE9FA80738 (1 samples, 0.67%)</title><rect x="71.1409%" y="485" width="0.6711%" height="15" fill="rgb(242,28,8)" fg:x="106" fg:w="1"/><text x="71.3909%" y="495.50"></text></g><g><title>`0x7FFE9FA85FB3 (1 samples, 0.67%)</title><rect x="71.1409%" y="469" width="0.6711%" height="15" fill="rgb(219,106,18)" fg:x="106" fg:w="1"/><text x="71.3909%" y="479.50"></text></g><g><title>`0x7FFE9D34D413 (2 samples, 1.34%)</title><rect x="71.1409%" y="613" width="1.3423%" height="15" fill="rgb(244,222,10)" fg:x="106" fg:w="2"/><text x="71.3909%" y="623.50"></text></g><g><title>`0x7FFE9D34C2CA (2 samples, 1.34%)</title><rect x="71.1409%" y="597" width="1.3423%" height="15" fill="rgb(236,179,52)" fg:x="106" fg:w="2"/><text x="71.3909%" y="607.50"></text></g><g><title>`0x7FFE9D320C66 (2 samples, 1.34%)</title><rect x="71.1409%" y="581" width="1.3423%" height="15" fill="rgb(213,23,39)" fg:x="106" fg:w="2"/><text x="71.3909%" y="591.50"></text></g><g><title>`0x7FFE9D320A7B (2 samples, 1.34%)</title><rect x="71.1409%" y="565" width="1.3423%" height="15" fill="rgb(238,48,10)" fg:x="106" fg:w="2"/><text x="71.3909%" y="575.50"></text></g><g><title>`0x7FFE9D34C4D5 (1 samples, 0.67%)</title><rect x="71.8121%" y="549" width="0.6711%" height="15" fill="rgb(251,196,23)" fg:x="107" fg:w="1"/><text x="72.0621%" y="559.50"></text></g><g><title>`0x7FFE9D34E5F5 (1 samples, 0.67%)</title><rect x="71.8121%" y="533" width="0.6711%" height="15" fill="rgb(250,152,24)" fg:x="107" fg:w="1"/><text x="72.0621%" y="543.50"></text></g><g><title>`0x7FFE9D34E702 (1 samples, 0.67%)</title><rect x="71.8121%" y="517" width="0.6711%" height="15" fill="rgb(209,150,17)" fg:x="107" fg:w="1"/><text x="72.0621%" y="527.50"></text></g><g><title>`0x7FFE9D34F4A5 (1 samples, 0.67%)</title><rect x="71.8121%" y="501" width="0.6711%" height="15" fill="rgb(234,202,34)" fg:x="107" fg:w="1"/><text x="72.0621%" y="511.50"></text></g><g><title>`0x7FFE9D34C763 (3 samples, 2.01%)</title><rect x="71.1409%" y="629" width="2.0134%" height="15" fill="rgb(253,148,53)" fg:x="106" fg:w="3"/><text x="71.3909%" y="639.50">`..</text></g><g><title>`0x7FFE9D34D41F (1 samples, 0.67%)</title><rect x="72.4832%" y="613" width="0.6711%" height="15" fill="rgb(218,129,16)" fg:x="108" fg:w="1"/><text x="72.7332%" y="623.50"></text></g><g><title>`0x7FFE9D3897A8 (1 samples, 0.67%)</title><rect x="72.4832%" y="597" width="0.6711%" height="15" fill="rgb(216,85,19)" fg:x="108" fg:w="1"/><text x="72.7332%" y="607.50"></text></g><g><title>`0x7FFE9FA214E0 (1 samples, 0.67%)</title><rect x="72.4832%" y="581" width="0.6711%" height="15" fill="rgb(235,228,7)" fg:x="108" fg:w="1"/><text x="72.7332%" y="591.50"></text></g><g><title>`0x7FFE9FA221CA (1 samples, 0.67%)</title><rect x="72.4832%" y="565" width="0.6711%" height="15" fill="rgb(245,175,0)" fg:x="108" fg:w="1"/><text x="72.7332%" y="575.50"></text></g><g><title>`0x7FFE9FA22057 (1 samples, 0.67%)</title><rect x="72.4832%" y="549" width="0.6711%" height="15" fill="rgb(208,168,36)" fg:x="108" fg:w="1"/><text x="72.7332%" y="559.50"></text></g><g><title>`0x7FFE9FA92DC4 (1 samples, 0.67%)</title><rect x="72.4832%" y="533" width="0.6711%" height="15" fill="rgb(246,171,24)" fg:x="108" fg:w="1"/><text x="72.7332%" y="543.50"></text></g><g><title>`0x7FFE9FACE5BF (20 samples, 13.42%)</title><rect x="60.4027%" y="773" width="13.4228%" height="15" fill="rgb(215,142,24)" fg:x="90" fg:w="20"/><text x="60.6527%" y="783.50">`0x7FFE9FACE5BF</text></g><g><title>`0x7FFE9FA1A25A (20 samples, 13.42%)</title><rect x="60.4027%" y="757" width="13.4228%" height="15" fill="rgb(250,187,7)" fg:x="90" fg:w="20"/><text x="60.6527%" y="767.50">`0x7FFE9FA1A25A</text></g><g><title>`0x7FFE9FA08CAC (20 samples, 13.42%)</title><rect x="60.4027%" y="741" width="13.4228%" height="15" fill="rgb(228,66,33)" fg:x="90" fg:w="20"/><text x="60.6527%" y="751.50">`0x7FFE9FA08CAC</text></g><g><title>`0x7FFE9FA18940 (8 samples, 5.37%)</title><rect x="68.4564%" y="725" width="5.3691%" height="15" fill="rgb(234,215,21)" fg:x="102" fg:w="8"/><text x="68.7064%" y="735.50">`0x7FFE..</text></g><g><title>`0x7FFE9FA1D62D (8 samples, 5.37%)</title><rect x="68.4564%" y="709" width="5.3691%" height="15" fill="rgb(222,191,20)" fg:x="102" fg:w="8"/><text x="68.7064%" y="719.50">`0x7FFE..</text></g><g><title>`0x7FFE9FA5CE70 (8 samples, 5.37%)</title><rect x="68.4564%" y="693" width="5.3691%" height="15" fill="rgb(245,79,54)" fg:x="102" fg:w="8"/><text x="68.7064%" y="703.50">`0x7FFE..</text></g><g><title>`0x7FFE9FA5CDFE (8 samples, 5.37%)</title><rect x="68.4564%" y="677" width="5.3691%" height="15" fill="rgb(240,10,37)" fg:x="102" fg:w="8"/><text x="68.7064%" y="687.50">`0x7FFE..</text></g><g><title>`0x7FFE9FA5D04D (8 samples, 5.37%)</title><rect x="68.4564%" y="661" width="5.3691%" height="15" fill="rgb(214,192,32)" fg:x="102" fg:w="8"/><text x="68.7064%" y="671.50">`0x7FFE..</text></g><g><title>`0x7FFE9FA1869F (8 samples, 5.37%)</title><rect x="68.4564%" y="645" width="5.3691%" height="15" fill="rgb(209,36,54)" fg:x="102" fg:w="8"/><text x="68.7064%" y="655.50">`0x7FFE..</text></g><g><title>`0x7FFE9D34C780 (1 samples, 0.67%)</title><rect x="73.1544%" y="629" width="0.6711%" height="15" fill="rgb(220,10,11)" fg:x="109" fg:w="1"/><text x="73.4044%" y="639.50"></text></g><g><title>`0x7FFE9D34CF3E (1 samples, 0.67%)</title><rect x="73.1544%" y="613" width="0.6711%" height="15" fill="rgb(221,106,17)" fg:x="109" fg:w="1"/><text x="73.4044%" y="623.50"></text></g><g><title>`0x7FFE9D3897A8 (1 samples, 0.67%)</title><rect x="73.1544%" y="597" width="0.6711%" height="15" fill="rgb(251,142,44)" fg:x="109" fg:w="1"/><text x="73.4044%" y="607.50"></text></g><g><title>`0x7FFE9FA214E0 (1 samples, 0.67%)</title><rect x="73.1544%" y="581" width="0.6711%" height="15" fill="rgb(238,13,15)" fg:x="109" fg:w="1"/><text x="73.4044%" y="591.50"></text></g><g><title>`0x7FFE9FA221CA (1 samples, 0.67%)</title><rect x="73.1544%" y="565" width="0.6711%" height="15" fill="rgb(208,107,27)" fg:x="109" fg:w="1"/><text x="73.4044%" y="575.50"></text></g><g><title>`0x7FFE9FA22089 (1 samples, 0.67%)</title><rect x="73.1544%" y="549" width="0.6711%" height="15" fill="rgb(205,136,37)" fg:x="109" fg:w="1"/><text x="73.4044%" y="559.50"></text></g><g><title>`0x7FFE9FA21ADE (1 samples, 0.67%)</title><rect x="73.1544%" y="533" width="0.6711%" height="15" fill="rgb(250,205,27)" fg:x="109" fg:w="1"/><text x="73.4044%" y="543.50"></text></g><g><title>`0x7FFE9FA203BD (1 samples, 0.67%)</title><rect x="73.1544%" y="517" width="0.6711%" height="15" fill="rgb(210,80,43)" fg:x="109" fg:w="1"/><text x="73.4044%" y="527.50"></text></g><g><title>`0x7FFE9D38A2C0 (1 samples, 0.67%)</title><rect x="73.1544%" y="501" width="0.6711%" height="15" fill="rgb(247,160,36)" fg:x="109" fg:w="1"/><text x="73.4044%" y="511.50"></text></g><g><title>`0x7FFE9FA085A2 (1 samples, 0.67%)</title><rect x="73.8255%" y="757" width="0.6711%" height="15" fill="rgb(234,13,49)" fg:x="110" fg:w="1"/><text x="74.0755%" y="767.50"></text></g><g><title>`0x7FFE9FA0464A (1 samples, 0.67%)</title><rect x="73.8255%" y="741" width="0.6711%" height="15" fill="rgb(234,122,0)" fg:x="110" fg:w="1"/><text x="74.0755%" y="751.50"></text></g><g><title>`0x7FFE9FA12F37 (1 samples, 0.67%)</title><rect x="74.4966%" y="709" width="0.6711%" height="15" fill="rgb(207,146,38)" fg:x="111" fg:w="1"/><text x="74.7466%" y="719.50"></text></g><g><title>`0x7FFE9FA5A674 (1 samples, 0.67%)</title><rect x="75.1678%" y="693" width="0.6711%" height="15" fill="rgb(207,177,25)" fg:x="112" fg:w="1"/><text x="75.4178%" y="703.50"></text></g><g><title>`0x7FFE9FA8FD74 (1 samples, 0.67%)</title><rect x="75.1678%" y="677" width="0.6711%" height="15" fill="rgb(211,178,42)" fg:x="112" fg:w="1"/><text x="75.4178%" y="687.50"></text></g><g><title>`0x7FFE9FACE669 (4 samples, 2.68%)</title><rect x="73.8255%" y="773" width="2.6846%" height="15" fill="rgb(230,69,54)" fg:x="110" fg:w="4"/><text x="74.0755%" y="783.50">`0..</text></g><g><title>`0x7FFE9FA085EC (3 samples, 2.01%)</title><rect x="74.4966%" y="757" width="2.0134%" height="15" fill="rgb(214,135,41)" fg:x="111" fg:w="3"/><text x="74.7466%" y="767.50">`..</text></g><g><title>`0x7FFE9FA1B8E1 (3 samples, 2.01%)</title><rect x="74.4966%" y="741" width="2.0134%" height="15" fill="rgb(237,67,25)" fg:x="111" fg:w="3"/><text x="74.7466%" y="751.50">`..</text></g><g><title>`0x7FFE9FA1B9F7 (3 samples, 2.01%)</title><rect x="74.4966%" y="725" width="2.0134%" height="15" fill="rgb(222,189,50)" fg:x="111" fg:w="3"/><text x="74.7466%" y="735.50">`..</text></g><g><title>`0x7FFE9FA130CA (2 samples, 1.34%)</title><rect x="75.1678%" y="709" width="1.3423%" height="15" fill="rgb(245,148,34)" fg:x="112" fg:w="2"/><text x="75.4178%" y="719.50"></text></g><g><title>`0x7FFE9FA5A6C5 (1 samples, 0.67%)</title><rect x="75.8389%" y="693" width="0.6711%" height="15" fill="rgb(222,29,6)" fg:x="113" fg:w="1"/><text x="76.0889%" y="703.50"></text></g><g><title>`0x7FFE9FA8FD74 (1 samples, 0.67%)</title><rect x="75.8389%" y="677" width="0.6711%" height="15" fill="rgb(221,189,43)" fg:x="113" fg:w="1"/><text x="76.0889%" y="687.50"></text></g><g><title>`0x7FFE9FACE67C (1 samples, 0.67%)</title><rect x="76.5101%" y="773" width="0.6711%" height="15" fill="rgb(207,36,27)" fg:x="114" fg:w="1"/><text x="76.7601%" y="783.50"></text></g><g><title>`0x7FFE9F9F980A (1 samples, 0.67%)</title><rect x="76.5101%" y="757" width="0.6711%" height="15" fill="rgb(217,90,24)" fg:x="114" fg:w="1"/><text x="76.7601%" y="767.50"></text></g><g><title>`0x7FFE9FA8F5B4 (1 samples, 0.67%)</title><rect x="76.5101%" y="741" width="0.6711%" height="15" fill="rgb(224,66,35)" fg:x="114" fg:w="1"/><text x="76.7601%" y="751.50"></text></g><g><title>`0x7FFE9FACE7BD (1 samples, 0.67%)</title><rect x="77.1812%" y="773" width="0.6711%" height="15" fill="rgb(221,13,50)" fg:x="115" fg:w="1"/><text x="77.4312%" y="783.50"></text></g><g><title>`0x7FFE9D38A055 (1 samples, 0.67%)</title><rect x="77.1812%" y="757" width="0.6711%" height="15" fill="rgb(236,68,49)" fg:x="115" fg:w="1"/><text x="77.4312%" y="767.50"></text></g><g><title>`0x7FFE9D38A0FB (1 samples, 0.67%)</title><rect x="77.1812%" y="741" width="0.6711%" height="15" fill="rgb(229,146,28)" fg:x="115" fg:w="1"/><text x="77.4312%" y="751.50"></text></g><g><title>`0x7FFE9FA8F5B4 (1 samples, 0.67%)</title><rect x="77.1812%" y="725" width="0.6711%" height="15" fill="rgb(225,31,38)" fg:x="115" fg:w="1"/><text x="77.4312%" y="735.50"></text></g><g><title>`0x7FFE9FACE8D4 (1 samples, 0.67%)</title><rect x="77.8523%" y="773" width="0.6711%" height="15" fill="rgb(250,208,3)" fg:x="116" fg:w="1"/><text x="78.1023%" y="783.50"></text></g><g><title>`0x7FFE9FA6761A (1 samples, 0.67%)</title><rect x="77.8523%" y="757" width="0.6711%" height="15" fill="rgb(246,54,23)" fg:x="116" fg:w="1"/><text x="78.1023%" y="767.50"></text></g><g><title>`0x7FFE9FA1C254 (2 samples, 1.34%)</title><rect x="78.5235%" y="693" width="1.3423%" height="15" fill="rgb(243,76,11)" fg:x="117" fg:w="2"/><text x="78.7735%" y="703.50"></text></g><g><title>`0x7FFE9FA1C0CA (2 samples, 1.34%)</title><rect x="78.5235%" y="677" width="1.3423%" height="15" fill="rgb(245,21,50)" fg:x="117" fg:w="2"/><text x="78.7735%" y="687.50"></text></g><g><title>`0x7FFE9FA1C4CC (2 samples, 1.34%)</title><rect x="78.5235%" y="661" width="1.3423%" height="15" fill="rgb(228,9,43)" fg:x="117" fg:w="2"/><text x="78.7735%" y="671.50"></text></g><g><title>`0x7FFE9FA8F874 (2 samples, 1.34%)</title><rect x="78.5235%" y="645" width="1.3423%" height="15" fill="rgb(208,100,47)" fg:x="117" fg:w="2"/><text x="78.7735%" y="655.50"></text></g><g><title>`0x7FFE9FA1AF46 (1 samples, 0.67%)</title><rect x="79.8658%" y="677" width="0.6711%" height="15" fill="rgb(232,26,8)" fg:x="119" fg:w="1"/><text x="80.1158%" y="687.50"></text></g><g><title>`0x7FFE9FA1B121 (1 samples, 0.67%)</title><rect x="79.8658%" y="661" width="0.6711%" height="15" fill="rgb(216,166,38)" fg:x="119" fg:w="1"/><text x="80.1158%" y="671.50"></text></g><g><title>`0x7FFE9FA1B261 (1 samples, 0.67%)</title><rect x="79.8658%" y="645" width="0.6711%" height="15" fill="rgb(251,202,51)" fg:x="119" fg:w="1"/><text x="80.1158%" y="655.50"></text></g><g><title>`0x7FFE9FA1B346 (1 samples, 0.67%)</title><rect x="79.8658%" y="629" width="0.6711%" height="15" fill="rgb(254,216,34)" fg:x="119" fg:w="1"/><text x="80.1158%" y="639.50"></text></g><g><title>`0x7FFE9FA1C399 (2 samples, 1.34%)</title><rect x="79.8658%" y="693" width="1.3423%" height="15" fill="rgb(251,32,27)" fg:x="119" fg:w="2"/><text x="80.1158%" y="703.50"></text></g><g><title>`0x7FFE9FA1AF85 (1 samples, 0.67%)</title><rect x="80.5369%" y="677" width="0.6711%" height="15" fill="rgb(208,127,28)" fg:x="120" fg:w="1"/><text x="80.7869%" y="687.50"></text></g><g><title>`0x7FFE9FA1B4D7 (1 samples, 0.67%)</title><rect x="80.5369%" y="661" width="0.6711%" height="15" fill="rgb(224,137,22)" fg:x="120" fg:w="1"/><text x="80.7869%" y="671.50"></text></g><g><title>`0x7FFE9FA8FD74 (1 samples, 0.67%)</title><rect x="80.5369%" y="645" width="0.6711%" height="15" fill="rgb(254,70,32)" fg:x="120" fg:w="1"/><text x="80.7869%" y="655.50"></text></g><g><title>`0x7FFE9FA1C254 (3 samples, 2.01%)</title><rect x="81.2081%" y="613" width="2.0134%" height="15" fill="rgb(229,75,37)" fg:x="121" fg:w="3"/><text x="81.4581%" y="623.50">`..</text></g><g><title>`0x7FFE9FA1C0CA (3 samples, 2.01%)</title><rect x="81.2081%" y="597" width="2.0134%" height="15" fill="rgb(252,64,23)" fg:x="121" fg:w="3"/><text x="81.4581%" y="607.50">`..</text></g><g><title>`0x7FFE9FA1C4CC (3 samples, 2.01%)</title><rect x="81.2081%" y="581" width="2.0134%" height="15" fill="rgb(232,162,48)" fg:x="121" fg:w="3"/><text x="81.4581%" y="591.50">`..</text></g><g><title>`0x7FFE9FA8F874 (3 samples, 2.01%)</title><rect x="81.2081%" y="565" width="2.0134%" height="15" fill="rgb(246,160,12)" fg:x="121" fg:w="3"/><text x="81.4581%" y="575.50">`..</text></g><g><title>`0x7FFE9FA1AF46 (1 samples, 0.67%)</title><rect x="83.2215%" y="597" width="0.6711%" height="15" fill="rgb(247,166,0)" fg:x="124" fg:w="1"/><text x="83.4715%" y="607.50"></text></g><g><title>`0x7FFE9FA1B121 (1 samples, 0.67%)</title><rect x="83.2215%" y="581" width="0.6711%" height="15" fill="rgb(249,219,21)" fg:x="124" fg:w="1"/><text x="83.4715%" y="591.50"></text></g><g><title>`0x7FFE9FA1B261 (1 samples, 0.67%)</title><rect x="83.2215%" y="565" width="0.6711%" height="15" fill="rgb(205,209,3)" fg:x="124" fg:w="1"/><text x="83.4715%" y="575.50"></text></g><g><title>`0x7FFE9FA1B346 (1 samples, 0.67%)</title><rect x="83.2215%" y="549" width="0.6711%" height="15" fill="rgb(243,44,1)" fg:x="124" fg:w="1"/><text x="83.4715%" y="559.50"></text></g><g><title>`0x7FFE9FA1C399 (2 samples, 1.34%)</title><rect x="83.2215%" y="613" width="1.3423%" height="15" fill="rgb(206,159,16)" fg:x="124" fg:w="2"/><text x="83.4715%" y="623.50"></text></g><g><title>`0x7FFE9FA1AF85 (1 samples, 0.67%)</title><rect x="83.8926%" y="597" width="0.6711%" height="15" fill="rgb(244,77,30)" fg:x="125" fg:w="1"/><text x="84.1426%" y="607.50"></text></g><g><title>`0x7FFE9FA1B481 (1 samples, 0.67%)</title><rect x="83.8926%" y="581" width="0.6711%" height="15" fill="rgb(218,69,12)" fg:x="125" fg:w="1"/><text x="84.1426%" y="591.50"></text></g><g><title>`0x7FFE9FA14541 (1 samples, 0.67%)</title><rect x="84.5638%" y="597" width="0.6711%" height="15" fill="rgb(212,87,7)" fg:x="126" fg:w="1"/><text x="84.8138%" y="607.50"></text></g><g><title>`0x7FFE9FA1AE0E (1 samples, 0.67%)</title><rect x="84.5638%" y="581" width="0.6711%" height="15" fill="rgb(245,114,25)" fg:x="126" fg:w="1"/><text x="84.8138%" y="591.50"></text></g><g><title>`0x7FFE9FA148D0 (1 samples, 0.67%)</title><rect x="85.2349%" y="581" width="0.6711%" height="15" fill="rgb(210,61,42)" fg:x="127" fg:w="1"/><text x="85.4849%" y="591.50"></text></g><g><title>`0x7FFE9FA14B01 (1 samples, 0.67%)</title><rect x="85.2349%" y="565" width="0.6711%" height="15" fill="rgb(211,52,33)" fg:x="127" fg:w="1"/><text x="85.4849%" y="575.50"></text></g><g><title>`0x7FFE9FA146BB (2 samples, 1.34%)</title><rect x="85.2349%" y="597" width="1.3423%" height="15" fill="rgb(234,58,33)" fg:x="127" fg:w="2"/><text x="85.4849%" y="607.50"></text></g><g><title>`0x7FFE9FA14906 (1 samples, 0.67%)</title><rect x="85.9060%" y="581" width="0.6711%" height="15" fill="rgb(220,115,36)" fg:x="128" fg:w="1"/><text x="86.1560%" y="591.50"></text></g><g><title>`0x7FFE9FA14E71 (1 samples, 0.67%)</title><rect x="85.9060%" y="565" width="0.6711%" height="15" fill="rgb(243,153,54)" fg:x="128" fg:w="1"/><text x="86.1560%" y="575.50"></text></g><g><title>`0x7FFE9FA097EA (1 samples, 0.67%)</title><rect x="85.9060%" y="549" width="0.6711%" height="15" fill="rgb(251,47,18)" fg:x="128" fg:w="1"/><text x="86.1560%" y="559.50"></text></g><g><title>`0x7FFE9FA09901 (1 samples, 0.67%)</title><rect x="85.9060%" y="533" width="0.6711%" height="15" fill="rgb(242,102,42)" fg:x="128" fg:w="1"/><text x="86.1560%" y="543.50"></text></g><g><title>`0x7FFE9FA158C4 (14 samples, 9.40%)</title><rect x="78.5235%" y="725" width="9.3960%" height="15" fill="rgb(234,31,38)" fg:x="117" fg:w="14"/><text x="78.7735%" y="735.50">`0x7FFE9FA158..</text></g><g><title>`0x7FFE9FA1CE29 (14 samples, 9.40%)</title><rect x="78.5235%" y="709" width="9.3960%" height="15" fill="rgb(221,117,51)" fg:x="117" fg:w="14"/><text x="78.7735%" y="719.50">`0x7FFE9FA1CE..</text></g><g><title>`0x7FFE9FA1C3F8 (10 samples, 6.71%)</title><rect x="81.2081%" y="693" width="6.7114%" height="15" fill="rgb(212,20,18)" fg:x="121" fg:w="10"/><text x="81.4581%" y="703.50">`0x7FFE9F..</text></g><g><title>`0x7FFE9FA146BB (10 samples, 6.71%)</title><rect x="81.2081%" y="677" width="6.7114%" height="15" fill="rgb(245,133,36)" fg:x="121" fg:w="10"/><text x="81.4581%" y="687.50">`0x7FFE9F..</text></g><g><title>`0x7FFE9FA14906 (10 samples, 6.71%)</title><rect x="81.2081%" y="661" width="6.7114%" height="15" fill="rgb(212,6,19)" fg:x="121" fg:w="10"/><text x="81.4581%" y="671.50">`0x7FFE9F..</text></g><g><title>`0x7FFE9FA158C4 (10 samples, 6.71%)</title><rect x="81.2081%" y="645" width="6.7114%" height="15" fill="rgb(218,1,36)" fg:x="121" fg:w="10"/><text x="81.4581%" y="655.50">`0x7FFE9F..</text></g><g><title>`0x7FFE9FA1CE29 (10 samples, 6.71%)</title><rect x="81.2081%" y="629" width="6.7114%" height="15" fill="rgb(246,84,54)" fg:x="121" fg:w="10"/><text x="81.4581%" y="639.50">`0x7FFE9F..</text></g><g><title>`0x7FFE9FA1C3F8 (5 samples, 3.36%)</title><rect x="84.5638%" y="613" width="3.3557%" height="15" fill="rgb(242,110,6)" fg:x="126" fg:w="5"/><text x="84.8138%" y="623.50">`0x..</text></g><g><title>`0x7FFE9FA14749 (2 samples, 1.34%)</title><rect x="86.5772%" y="597" width="1.3423%" height="15" fill="rgb(214,47,5)" fg:x="129" fg:w="2"/><text x="86.8272%" y="607.50"></text></g><g><title>`0x7FFE9FA62EEF (2 samples, 1.34%)</title><rect x="86.5772%" y="581" width="1.3423%" height="15" fill="rgb(218,159,25)" fg:x="129" fg:w="2"/><text x="86.8272%" y="591.50"></text></g><g><title>`0x7FFE9FA24D44 (2 samples, 1.34%)</title><rect x="86.5772%" y="565" width="1.3423%" height="15" fill="rgb(215,211,28)" fg:x="129" fg:w="2"/><text x="86.8272%" y="575.50"></text></g><g><title>`0x7FFE9FA24EE6 (2 samples, 1.34%)</title><rect x="86.5772%" y="549" width="1.3423%" height="15" fill="rgb(238,59,32)" fg:x="129" fg:w="2"/><text x="86.8272%" y="559.50"></text></g><g><title>`0x7FFE9FA922E4 (2 samples, 1.34%)</title><rect x="86.5772%" y="533" width="1.3423%" height="15" fill="rgb(226,82,3)" fg:x="129" fg:w="2"/><text x="86.8272%" y="543.50"></text></g><g><title>`0x7FFE9FACE8EF (15 samples, 10.07%)</title><rect x="78.5235%" y="773" width="10.0671%" height="15" fill="rgb(240,164,32)" fg:x="117" fg:w="15"/><text x="78.7735%" y="783.50">`0x7FFE9FACE8EF</text></g><g><title>`0x7FFE9FA146BB (15 samples, 10.07%)</title><rect x="78.5235%" y="757" width="10.0671%" height="15" fill="rgb(232,46,7)" fg:x="117" fg:w="15"/><text x="78.7735%" y="767.50">`0x7FFE9FA146BB</text></g><g><title>`0x7FFE9FA14906 (15 samples, 10.07%)</title><rect x="78.5235%" y="741" width="10.0671%" height="15" fill="rgb(229,129,53)" fg:x="117" fg:w="15"/><text x="78.7735%" y="751.50">`0x7FFE9FA14906</text></g><g><title>`0x7FFE9FA15C1E (1 samples, 0.67%)</title><rect x="87.9195%" y="725" width="0.6711%" height="15" fill="rgb(234,188,29)" fg:x="131" fg:w="1"/><text x="88.1695%" y="735.50"></text></g><g><title>`0x7FFE9FA2C74F (1 samples, 0.67%)</title><rect x="87.9195%" y="709" width="0.6711%" height="15" fill="rgb(246,141,4)" fg:x="131" fg:w="1"/><text x="88.1695%" y="719.50"></text></g><g><title>`0x7FFE9FACE938 (1 samples, 0.67%)</title><rect x="88.5906%" y="773" width="0.6711%" height="15" fill="rgb(229,23,39)" fg:x="132" fg:w="1"/><text x="88.8406%" y="783.50"></text></g><g><title>`0x7FFE9FA1D5E1 (1 samples, 0.67%)</title><rect x="88.5906%" y="757" width="0.6711%" height="15" fill="rgb(206,12,3)" fg:x="132" fg:w="1"/><text x="88.8406%" y="767.50"></text></g><g><title>`0x7FFE9FA1E809 (1 samples, 0.67%)</title><rect x="88.5906%" y="741" width="0.6711%" height="15" fill="rgb(252,226,20)" fg:x="132" fg:w="1"/><text x="88.8406%" y="751.50"></text></g><g><title>`0x7FFE9FA1E809 (1 samples, 0.67%)</title><rect x="88.5906%" y="725" width="0.6711%" height="15" fill="rgb(216,123,35)" fg:x="132" fg:w="1"/><text x="88.8406%" y="735.50"></text></g><g><title>`0x7FFE9FA1E7EF (1 samples, 0.67%)</title><rect x="88.5906%" y="709" width="0.6711%" height="15" fill="rgb(212,68,40)" fg:x="132" fg:w="1"/><text x="88.8406%" y="719.50"></text></g><g><title>`0x7FFE9FA1E8CC (1 samples, 0.67%)</title><rect x="88.5906%" y="693" width="0.6711%" height="15" fill="rgb(254,125,32)" fg:x="132" fg:w="1"/><text x="88.8406%" y="703.50"></text></g><g><title>`0x7FFE9FA63C10 (1 samples, 0.67%)</title><rect x="88.5906%" y="677" width="0.6711%" height="15" fill="rgb(253,97,22)" fg:x="132" fg:w="1"/><text x="88.8406%" y="687.50"></text></g><g><title>`0x7FFE9FA8FCF4 (1 samples, 0.67%)</title><rect x="88.5906%" y="661" width="0.6711%" height="15" fill="rgb(241,101,14)" fg:x="132" fg:w="1"/><text x="88.8406%" y="671.50"></text></g><g><title>`0x7FFE9C6FA067 (1 samples, 0.67%)</title><rect x="89.2617%" y="693" width="0.6711%" height="15" fill="rgb(238,103,29)" fg:x="133" fg:w="1"/><text x="89.5117%" y="703.50"></text></g><g><title>`0x7FFE9C6F359F (1 samples, 0.67%)</title><rect x="89.2617%" y="677" width="0.6711%" height="15" fill="rgb(233,195,47)" fg:x="133" fg:w="1"/><text x="89.5117%" y="687.50"></text></g><g><title>`0x7FFE9C6F661F (1 samples, 0.67%)</title><rect x="89.2617%" y="661" width="0.6711%" height="15" fill="rgb(246,218,30)" fg:x="133" fg:w="1"/><text x="89.5117%" y="671.50"></text></g><g><title>`0x7FFE9FA1F630 (1 samples, 0.67%)</title><rect x="89.2617%" y="645" width="0.6711%" height="15" fill="rgb(219,145,47)" fg:x="133" fg:w="1"/><text x="89.5117%" y="655.50"></text></g><g><title>`0x7FFE9FA1F715 (1 samples, 0.67%)</title><rect x="89.2617%" y="629" width="0.6711%" height="15" fill="rgb(243,12,26)" fg:x="133" fg:w="1"/><text x="89.5117%" y="639.50"></text></g><g><title>`0x7FFE9FA92DC4 (1 samples, 0.67%)</title><rect x="89.2617%" y="613" width="0.6711%" height="15" fill="rgb(214,87,16)" fg:x="133" fg:w="1"/><text x="89.5117%" y="623.50"></text></g><g><title>`0x7FFE9D82ABAD (1 samples, 0.67%)</title><rect x="89.9329%" y="661" width="0.6711%" height="15" fill="rgb(208,99,42)" fg:x="134" fg:w="1"/><text x="90.1829%" y="671.50"></text></g><g><title>`0x7FFE9FA5CDFE (3 samples, 2.01%)</title><rect x="89.2617%" y="741" width="2.0134%" height="15" fill="rgb(253,99,2)" fg:x="133" fg:w="3"/><text x="89.5117%" y="751.50">`..</text></g><g><title>`0x7FFE9FA5D04D (3 samples, 2.01%)</title><rect x="89.2617%" y="725" width="2.0134%" height="15" fill="rgb(220,168,23)" fg:x="133" fg:w="3"/><text x="89.5117%" y="735.50">`..</text></g><g><title>`0x7FFE9FA1869F (3 samples, 2.01%)</title><rect x="89.2617%" y="709" width="2.0134%" height="15" fill="rgb(242,38,24)" fg:x="133" fg:w="3"/><text x="89.5117%" y="719.50">`..</text></g><g><title>`0x7FFE9D824829 (2 samples, 1.34%)</title><rect x="89.9329%" y="693" width="1.3423%" height="15" fill="rgb(225,182,9)" fg:x="134" fg:w="2"/><text x="90.1829%" y="703.50"></text></g><g><title>`0x7FFE9D824908 (2 samples, 1.34%)</title><rect x="89.9329%" y="677" width="1.3423%" height="15" fill="rgb(243,178,37)" fg:x="134" fg:w="2"/><text x="90.1829%" y="687.50"></text></g><g><title>`0x7FFE9D834366 (1 samples, 0.67%)</title><rect x="90.6040%" y="661" width="0.6711%" height="15" fill="rgb(232,139,19)" fg:x="135" fg:w="1"/><text x="90.8540%" y="671.50"></text></g><g><title>`0x7FFE9FA214E0 (1 samples, 0.67%)</title><rect x="90.6040%" y="645" width="0.6711%" height="15" fill="rgb(225,201,24)" fg:x="135" fg:w="1"/><text x="90.8540%" y="655.50"></text></g><g><title>`0x7FFE9FA22179 (1 samples, 0.67%)</title><rect x="90.6040%" y="629" width="0.6711%" height="15" fill="rgb(221,47,46)" fg:x="135" fg:w="1"/><text x="90.8540%" y="639.50"></text></g><g><title>`0x7FFE9FA222D9 (1 samples, 0.67%)</title><rect x="90.6040%" y="613" width="0.6711%" height="15" fill="rgb(249,23,13)" fg:x="135" fg:w="1"/><text x="90.8540%" y="623.50"></text></g><g><title>`0x7FFE9FA2C7BA (1 samples, 0.67%)</title><rect x="90.6040%" y="597" width="0.6711%" height="15" fill="rgb(219,9,5)" fg:x="135" fg:w="1"/><text x="90.8540%" y="607.50"></text></g><g><title>`0x7FFE9FA2D661 (1 samples, 0.67%)</title><rect x="90.6040%" y="581" width="0.6711%" height="15" fill="rgb(254,171,16)" fg:x="135" fg:w="1"/><text x="90.8540%" y="591.50"></text></g><g><title>`0x7FFE9FA53148 (1 samples, 0.67%)</title><rect x="90.6040%" y="565" width="0.6711%" height="15" fill="rgb(230,171,20)" fg:x="135" fg:w="1"/><text x="90.8540%" y="575.50"></text></g><g><title>`0x7FFE9FA53234 (1 samples, 0.67%)</title><rect x="90.6040%" y="549" width="0.6711%" height="15" fill="rgb(210,71,41)" fg:x="135" fg:w="1"/><text x="90.8540%" y="559.50"></text></g><g><title>`0x7FFE9FA2CD59 (1 samples, 0.67%)</title><rect x="90.6040%" y="533" width="0.6711%" height="15" fill="rgb(206,173,20)" fg:x="135" fg:w="1"/><text x="90.8540%" y="543.50"></text></g><g><title>`0x7FFE9FA2EC89 (1 samples, 0.67%)</title><rect x="90.6040%" y="517" width="0.6711%" height="15" fill="rgb(233,88,34)" fg:x="135" fg:w="1"/><text x="90.8540%" y="527.50"></text></g><g><title>`0x7FFE9CDE8138 (1 samples, 0.67%)</title><rect x="91.2752%" y="661" width="0.6711%" height="15" fill="rgb(223,209,46)" fg:x="136" fg:w="1"/><text x="91.5252%" y="671.50"></text></g><g><title>`0x7FFE9CE21FC1 (1 samples, 0.67%)</title><rect x="91.2752%" y="645" width="0.6711%" height="15" fill="rgb(250,43,18)" fg:x="136" fg:w="1"/><text x="91.5252%" y="655.50"></text></g><g><title>`0x7FFE9CE22E21 (1 samples, 0.67%)</title><rect x="91.2752%" y="629" width="0.6711%" height="15" fill="rgb(208,13,10)" fg:x="136" fg:w="1"/><text x="91.5252%" y="639.50"></text></g><g><title>`0x7FFE9CDD6544 (1 samples, 0.67%)</title><rect x="91.9463%" y="645" width="0.6711%" height="15" fill="rgb(212,200,36)" fg:x="137" fg:w="1"/><text x="92.1963%" y="655.50"></text></g><g><title>`0x7FFE9CDD66CF (1 samples, 0.67%)</title><rect x="91.9463%" y="629" width="0.6711%" height="15" fill="rgb(225,90,30)" fg:x="137" fg:w="1"/><text x="92.1963%" y="639.50"></text></g><g><title>`0x7FFE9CDD6941 (1 samples, 0.67%)</title><rect x="91.9463%" y="613" width="0.6711%" height="15" fill="rgb(236,182,39)" fg:x="137" fg:w="1"/><text x="92.1963%" y="623.50"></text></g><g><title>`0x7FFE9CDD83D5 (1 samples, 0.67%)</title><rect x="91.9463%" y="597" width="0.6711%" height="15" fill="rgb(212,144,35)" fg:x="137" fg:w="1"/><text x="92.1963%" y="607.50"></text></g><g><title>`0x7FFE9CDF41C0 (1 samples, 0.67%)</title><rect x="92.6174%" y="645" width="0.6711%" height="15" fill="rgb(228,63,44)" fg:x="138" fg:w="1"/><text x="92.8674%" y="655.50"></text></g><g><title>`0x7FFE9CDE7853 (4 samples, 2.68%)</title><rect x="91.2752%" y="677" width="2.6846%" height="15" fill="rgb(228,109,6)" fg:x="136" fg:w="4"/><text x="91.5252%" y="687.50">`0..</text></g><g><title>`0x7FFE9CDE816A (3 samples, 2.01%)</title><rect x="91.9463%" y="661" width="2.0134%" height="15" fill="rgb(238,117,24)" fg:x="137" fg:w="3"/><text x="92.1963%" y="671.50">`..</text></g><g><title>`0x7FFE9CDF7869 (1 samples, 0.67%)</title><rect x="93.2886%" y="645" width="0.6711%" height="15" fill="rgb(242,26,26)" fg:x="139" fg:w="1"/><text x="93.5386%" y="655.50"></text></g><g><title>`0x7FFE9CDF78CC (1 samples, 0.67%)</title><rect x="93.2886%" y="629" width="0.6711%" height="15" fill="rgb(221,92,48)" fg:x="139" fg:w="1"/><text x="93.5386%" y="639.50"></text></g><g><title>`0x7FFE9CDE3468 (1 samples, 0.67%)</title><rect x="93.2886%" y="613" width="0.6711%" height="15" fill="rgb(209,209,32)" fg:x="139" fg:w="1"/><text x="93.5386%" y="623.50"></text></g><g><title>`0x7FFE9DC877FA (1 samples, 0.67%)</title><rect x="93.9597%" y="677" width="0.6711%" height="15" fill="rgb(221,70,22)" fg:x="140" fg:w="1"/><text x="94.2097%" y="687.50"></text></g><g><title>`0x7FFE9DC88515 (1 samples, 0.67%)</title><rect x="93.9597%" y="661" width="0.6711%" height="15" fill="rgb(248,145,5)" fg:x="140" fg:w="1"/><text x="94.2097%" y="671.50"></text></g><g><title>`0x7FFE9DC82498 (1 samples, 0.67%)</title><rect x="93.9597%" y="645" width="0.6711%" height="15" fill="rgb(226,116,26)" fg:x="140" fg:w="1"/><text x="94.2097%" y="655.50"></text></g><g><title>`0x7FFE9DC82585 (1 samples, 0.67%)</title><rect x="93.9597%" y="629" width="0.6711%" height="15" fill="rgb(244,5,17)" fg:x="140" fg:w="1"/><text x="94.2097%" y="639.50"></text></g><g><title>`0x7FFE9DC83034 (1 samples, 0.67%)</title><rect x="93.9597%" y="613" width="0.6711%" height="15" fill="rgb(252,159,33)" fg:x="140" fg:w="1"/><text x="94.2097%" y="623.50"></text></g><g><title>`0x7FFE9FA1F630 (1 samples, 0.67%)</title><rect x="93.9597%" y="597" width="0.6711%" height="15" fill="rgb(206,71,0)" fg:x="140" fg:w="1"/><text x="94.2097%" y="607.50"></text></g><g><title>`0x7FFE9FA1F715 (1 samples, 0.67%)</title><rect x="93.9597%" y="581" width="0.6711%" height="15" fill="rgb(233,118,54)" fg:x="140" fg:w="1"/><text x="94.2097%" y="591.50"></text></g><g><title>`0x7FFE9FA92DC4 (1 samples, 0.67%)</title><rect x="93.9597%" y="565" width="0.6711%" height="15" fill="rgb(234,83,48)" fg:x="140" fg:w="1"/><text x="94.2097%" y="575.50"></text></g><g><title>`0x7FFE9F497BE7 (1 samples, 0.67%)</title><rect x="94.6309%" y="677" width="0.6711%" height="15" fill="rgb(228,3,54)" fg:x="141" fg:w="1"/><text x="94.8809%" y="687.50"></text></g><g><title>`0x7FFE9F497EEC (1 samples, 0.67%)</title><rect x="94.6309%" y="661" width="0.6711%" height="15" fill="rgb(226,155,13)" fg:x="141" fg:w="1"/><text x="94.8809%" y="671.50"></text></g><g><title>`0x7FFE9F4CE21B (1 samples, 0.67%)</title><rect x="94.6309%" y="645" width="0.6711%" height="15" fill="rgb(241,28,37)" fg:x="141" fg:w="1"/><text x="94.8809%" y="655.50"></text></g><g><title>`0x7FFE9F4CDB3C (1 samples, 0.67%)</title><rect x="94.6309%" y="629" width="0.6711%" height="15" fill="rgb(233,93,10)" fg:x="141" fg:w="1"/><text x="94.8809%" y="639.50"></text></g><g><title>`0x7FFE9F497C0A (1 samples, 0.67%)</title><rect x="95.3020%" y="677" width="0.6711%" height="15" fill="rgb(225,113,19)" fg:x="142" fg:w="1"/><text x="95.5520%" y="687.50"></text></g><g><title>`0x7FFE9F4C3D07 (1 samples, 0.67%)</title><rect x="95.3020%" y="661" width="0.6711%" height="15" fill="rgb(241,2,18)" fg:x="142" fg:w="1"/><text x="95.5520%" y="671.50"></text></g><g><title>`0x7FFE9D375EDA (1 samples, 0.67%)</title><rect x="95.3020%" y="645" width="0.6711%" height="15" fill="rgb(228,207,21)" fg:x="142" fg:w="1"/><text x="95.5520%" y="655.50"></text></g><g><title>`0x7FFE9FA96009 (1 samples, 0.67%)</title><rect x="95.3020%" y="629" width="0.6711%" height="15" fill="rgb(213,211,35)" fg:x="142" fg:w="1"/><text x="95.5520%" y="639.50"></text></g><g><title>`0x7FFE9F4B3B20 (1 samples, 0.67%)</title><rect x="95.9732%" y="645" width="0.6711%" height="15" fill="rgb(209,83,10)" fg:x="143" fg:w="1"/><text x="96.2232%" y="655.50"></text></g><g><title>`0x7FFE9F4ACD6B (1 samples, 0.67%)</title><rect x="95.9732%" y="629" width="0.6711%" height="15" fill="rgb(209,164,1)" fg:x="143" fg:w="1"/><text x="96.2232%" y="639.50"></text></g><g><title>`0x7FFE9F4ACB80 (1 samples, 0.67%)</title><rect x="95.9732%" y="613" width="0.6711%" height="15" fill="rgb(213,184,43)" fg:x="143" fg:w="1"/><text x="96.2232%" y="623.50"></text></g><g><title>`0x7FFE9FA2CD59 (1 samples, 0.67%)</title><rect x="95.9732%" y="597" width="0.6711%" height="15" fill="rgb(231,61,34)" fg:x="143" fg:w="1"/><text x="96.2232%" y="607.50"></text></g><g><title>`0x7FFE9FA2FA38 (1 samples, 0.67%)</title><rect x="95.9732%" y="581" width="0.6711%" height="15" fill="rgb(235,75,3)" fg:x="143" fg:w="1"/><text x="96.2232%" y="591.50"></text></g><g><title>`0x7FFE9FA39FDB (1 samples, 0.67%)</title><rect x="95.9732%" y="565" width="0.6711%" height="15" fill="rgb(220,106,47)" fg:x="143" fg:w="1"/><text x="96.2232%" y="575.50"></text></g><g><title>`0x7FFE9FA39541 (1 samples, 0.67%)</title><rect x="95.9732%" y="549" width="0.6711%" height="15" fill="rgb(210,196,33)" fg:x="143" fg:w="1"/><text x="96.2232%" y="559.50"></text></g><g><title>`0x7FFE9FA38E1C (1 samples, 0.67%)</title><rect x="95.9732%" y="533" width="0.6711%" height="15" fill="rgb(229,154,42)" fg:x="143" fg:w="1"/><text x="96.2232%" y="543.50"></text></g><g><title>`0x7FFE9FA39799 (1 samples, 0.67%)</title><rect x="95.9732%" y="517" width="0.6711%" height="15" fill="rgb(228,114,26)" fg:x="143" fg:w="1"/><text x="96.2232%" y="527.50"></text></g><g><title>`0x7FFE9FA223FA (1 samples, 0.67%)</title><rect x="95.9732%" y="501" width="0.6711%" height="15" fill="rgb(208,144,1)" fg:x="143" fg:w="1"/><text x="96.2232%" y="511.50"></text></g><g><title>`0x7FFE9FA6F4C4 (1 samples, 0.67%)</title><rect x="95.9732%" y="485" width="0.6711%" height="15" fill="rgb(239,112,37)" fg:x="143" fg:w="1"/><text x="96.2232%" y="495.50"></text></g><g><title>`0x7FFE9F497C2F (2 samples, 1.34%)</title><rect x="95.9732%" y="677" width="1.3423%" height="15" fill="rgb(210,96,50)" fg:x="143" fg:w="2"/><text x="96.2232%" y="687.50"></text></g><g><title>`0x7FFE9F4B39A2 (2 samples, 1.34%)</title><rect x="95.9732%" y="661" width="1.3423%" height="15" fill="rgb(222,178,2)" fg:x="143" fg:w="2"/><text x="96.2232%" y="671.50"></text></g><g><title>`0x7FFE9F4B3BA4 (1 samples, 0.67%)</title><rect x="96.6443%" y="645" width="0.6711%" height="15" fill="rgb(226,74,18)" fg:x="144" fg:w="1"/><text x="96.8943%" y="655.50"></text></g><g><title>`0x7FFE9F4B3F73 (1 samples, 0.67%)</title><rect x="96.6443%" y="629" width="0.6711%" height="15" fill="rgb(225,67,54)" fg:x="144" fg:w="1"/><text x="96.8943%" y="639.50"></text></g><g><title>`0x7FFE9F4B38A9 (1 samples, 0.67%)</title><rect x="96.6443%" y="613" width="0.6711%" height="15" fill="rgb(251,92,32)" fg:x="144" fg:w="1"/><text x="96.8943%" y="623.50"></text></g><g><title>`0x7FFE9F4BDA1F (1 samples, 0.67%)</title><rect x="96.6443%" y="597" width="0.6711%" height="15" fill="rgb(228,149,22)" fg:x="144" fg:w="1"/><text x="96.8943%" y="607.50"></text></g><g><title>`0x7FFE9F4BD7A4 (1 samples, 0.67%)</title><rect x="96.6443%" y="581" width="0.6711%" height="15" fill="rgb(243,54,13)" fg:x="144" fg:w="1"/><text x="96.8943%" y="591.50"></text></g><g><title>`0x7FFE9D340158 (1 samples, 0.67%)</title><rect x="96.6443%" y="565" width="0.6711%" height="15" fill="rgb(243,180,28)" fg:x="144" fg:w="1"/><text x="96.8943%" y="575.50"></text></g><g><title>`0x7FFE9D3408FF (1 samples, 0.67%)</title><rect x="96.6443%" y="549" width="0.6711%" height="15" fill="rgb(208,167,24)" fg:x="144" fg:w="1"/><text x="96.8943%" y="559.50"></text></g><g><title>`0x7FFE9D379515 (1 samples, 0.67%)</title><rect x="96.6443%" y="533" width="0.6711%" height="15" fill="rgb(245,73,45)" fg:x="144" fg:w="1"/><text x="96.8943%" y="543.50"></text></g><g><title>`0x7FFE9D34B627 (1 samples, 0.67%)</title><rect x="96.6443%" y="517" width="0.6711%" height="15" fill="rgb(237,203,48)" fg:x="144" fg:w="1"/><text x="96.8943%" y="527.50"></text></g><g><title>`0x7FFE9FA8F5B4 (1 samples, 0.67%)</title><rect x="96.6443%" y="501" width="0.6711%" height="15" fill="rgb(211,197,16)" fg:x="144" fg:w="1"/><text x="96.8943%" y="511.50"></text></g><g><title>`0x7FFE9FACEA75 (13 samples, 8.72%)</title><rect x="89.2617%" y="773" width="8.7248%" height="15" fill="rgb(243,99,51)" fg:x="133" fg:w="13"/><text x="89.5117%" y="783.50">`0x7FFE9FACE..</text></g><g><title>`0x7FFE9FA5CE70 (13 samples, 8.72%)</title><rect x="89.2617%" y="757" width="8.7248%" height="15" fill="rgb(215,123,29)" fg:x="133" fg:w="13"/><text x="89.5117%" y="767.50">`0x7FFE9FA5C..</text></g><g><title>`0x7FFE9FA5CE70 (10 samples, 6.71%)</title><rect x="91.2752%" y="741" width="6.7114%" height="15" fill="rgb(239,186,37)" fg:x="136" fg:w="10"/><text x="91.5252%" y="751.50">`0x7FFE9F..</text></g><g><title>`0x7FFE9FA5CDFE (10 samples, 6.71%)</title><rect x="91.2752%" y="725" width="6.7114%" height="15" fill="rgb(252,136,39)" fg:x="136" fg:w="10"/><text x="91.5252%" y="735.50">`0x7FFE9F..</text></g><g><title>`0x7FFE9FA5D04D (10 samples, 6.71%)</title><rect x="91.2752%" y="709" width="6.7114%" height="15" fill="rgb(223,213,32)" fg:x="136" fg:w="10"/><text x="91.5252%" y="719.50">`0x7FFE9F..</text></g><g><title>`0x7FFE9FA1869F (10 samples, 6.71%)</title><rect x="91.2752%" y="693" width="6.7114%" height="15" fill="rgb(233,115,5)" fg:x="136" fg:w="10"/><text x="91.5252%" y="703.50">`0x7FFE9F..</text></g><g><title>`0x7FFE9F497C3F (1 samples, 0.67%)</title><rect x="97.3154%" y="677" width="0.6711%" height="15" fill="rgb(207,226,44)" fg:x="145" fg:w="1"/><text x="97.5654%" y="687.50"></text></g><g><title>`0x7FFE9F4CD8D5 (1 samples, 0.67%)</title><rect x="97.3154%" y="661" width="0.6711%" height="15" fill="rgb(208,126,0)" fg:x="145" fg:w="1"/><text x="97.5654%" y="671.50"></text></g><g><title>`0x7FFE9F4D0585 (1 samples, 0.67%)</title><rect x="97.3154%" y="645" width="0.6711%" height="15" fill="rgb(244,66,21)" fg:x="145" fg:w="1"/><text x="97.5654%" y="655.50"></text></g><g><title>`0x7FFE9FA63EB3 (65 samples, 43.62%)</title><rect x="55.0336%" y="805" width="43.6242%" height="15" fill="rgb(222,97,12)" fg:x="82" fg:w="65"/><text x="55.2836%" y="815.50">`0x7FFE9FA63EB3</text></g><g><title>`0x7FFE9FABA184 (65 samples, 43.62%)</title><rect x="55.0336%" y="789" width="43.6242%" height="15" fill="rgb(219,213,19)" fg:x="82" fg:w="65"/><text x="55.2836%" y="799.50">`0x7FFE9FABA184</text></g><g><title>`0x7FFE9FACEAEE (1 samples, 0.67%)</title><rect x="97.9866%" y="773" width="0.6711%" height="15" fill="rgb(252,169,30)" fg:x="146" fg:w="1"/><text x="98.2366%" y="783.50"></text></g><g><title>`0x7FFE9FA6F0D4 (1 samples, 0.67%)</title><rect x="97.9866%" y="757" width="0.6711%" height="15" fill="rgb(206,32,51)" fg:x="146" fg:w="1"/><text x="98.2366%" y="767.50"></text></g><g><title>`0x7FFE9FA8F5B4 (1 samples, 0.67%)</title><rect x="97.9866%" y="741" width="0.6711%" height="15" fill="rgb(250,172,42)" fg:x="146" fg:w="1"/><text x="98.2366%" y="751.50"></text></g><g><title>`0x7FFE9FA63DDE (66 samples, 44.30%)</title><rect x="55.0336%" y="821" width="44.2953%" height="15" fill="rgb(209,34,43)" fg:x="82" fg:w="66"/><text x="55.2836%" y="831.50">`0x7FFE9FA63DDE</text></g><g><title>`0x7FFE9FA9D45F (1 samples, 0.67%)</title><rect x="98.6577%" y="805" width="0.6711%" height="15" fill="rgb(223,11,35)" fg:x="147" fg:w="1"/><text x="98.9077%" y="815.50"></text></g><g><title>`0x7FFE9FA9DF2D (1 samples, 0.67%)</title><rect x="98.6577%" y="789" width="0.6711%" height="15" fill="rgb(251,219,26)" fg:x="147" fg:w="1"/><text x="98.9077%" y="799.50"></text></g><g><title>`0x7FFE9FA91653 (1 samples, 0.67%)</title><rect x="98.6577%" y="773" width="0.6711%" height="15" fill="rgb(231,119,3)" fg:x="147" fg:w="1"/><text x="98.9077%" y="783.50"></text></g><g><title>all (149 samples, 100%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(216,97,11)" fg:x="0" fg:w="149"/><text x="0.2500%" y="847.50"></text></g><g><title>`0x7FFE9FA63DE8 (1 samples, 0.67%)</title><rect x="99.3289%" y="821" width="0.6711%" height="15" fill="rgb(223,59,9)" fg:x="148" fg:w="1"/><text x="99.5789%" y="831.50"></text></g><g><title>`0x7FFE9FA8FBC3 (1 samples, 0.67%)</title><rect x="99.3289%" y="805" width="0.6711%" height="15" fill="rgb(233,93,31)" fg:x="148" fg:w="1"/><text x="99.5789%" y="815.50"></text></g></svg></svg>