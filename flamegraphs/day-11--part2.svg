<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="917.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="57"><g><title>`0x7FFC3F1CAA30 (5 samples, 8.77%)</title><rect x="0.0000%" y="869" width="8.7719%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="879.50">`0x7FFC3F1CA..</text></g><g><title>`0x7FFC3F193C0D (1 samples, 1.75%)</title><rect x="8.7719%" y="773" width="1.7544%" height="15" fill="rgb(217,0,24)" fg:x="5" fg:w="1"/><text x="9.0219%" y="783.50"></text></g><g><title>`0x7FFC3F193C53 (2 samples, 3.51%)</title><rect x="10.5263%" y="773" width="3.5088%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="2"/><text x="10.7763%" y="783.50">`0x..</text></g><g><title>`0x7FFC3F193C66 (1 samples, 1.75%)</title><rect x="14.0351%" y="773" width="1.7544%" height="15" fill="rgb(248,212,6)" fg:x="8" fg:w="1"/><text x="14.2851%" y="783.50"></text></g><g><title>`0x7FFC3F193C6F (1 samples, 1.75%)</title><rect x="15.7895%" y="773" width="1.7544%" height="15" fill="rgb(208,68,35)" fg:x="9" fg:w="1"/><text x="16.0395%" y="783.50"></text></g><g><title>`0x7FFC3F180E8B (6 samples, 10.53%)</title><rect x="8.7719%" y="789" width="10.5263%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="6"/><text x="9.0219%" y="799.50">`0x7FFC3F180E8B</text></g><g><title>`0x7FFC3F193E62 (1 samples, 1.75%)</title><rect x="17.5439%" y="773" width="1.7544%" height="15" fill="rgb(207,160,47)" fg:x="10" fg:w="1"/><text x="17.7939%" y="783.50"></text></g><g><title>`0x7FFC3F19D9E8 (1 samples, 1.75%)</title><rect x="19.2982%" y="757" width="1.7544%" height="15" fill="rgb(228,23,34)" fg:x="11" fg:w="1"/><text x="19.5482%" y="767.50"></text></g><g><title>`0x7FFC3F1EA8EA (1 samples, 1.75%)</title><rect x="19.2982%" y="741" width="1.7544%" height="15" fill="rgb(218,30,26)" fg:x="11" fg:w="1"/><text x="19.5482%" y="751.50"></text></g><g><title>`0x7FFC3F1A16A8 (1 samples, 1.75%)</title><rect x="19.2982%" y="725" width="1.7544%" height="15" fill="rgb(220,122,19)" fg:x="11" fg:w="1"/><text x="19.5482%" y="735.50"></text></g><g><title>`0x7FFC3F1A192F (1 samples, 1.75%)</title><rect x="19.2982%" y="709" width="1.7544%" height="15" fill="rgb(250,228,42)" fg:x="11" fg:w="1"/><text x="19.5482%" y="719.50"></text></g><g><title>`0x7FFC3F1D9D8B (1 samples, 1.75%)</title><rect x="19.2982%" y="693" width="1.7544%" height="15" fill="rgb(240,193,28)" fg:x="11" fg:w="1"/><text x="19.5482%" y="703.50"></text></g><g><title>`0x7FFC3F1DA2D2 (1 samples, 1.75%)</title><rect x="19.2982%" y="677" width="1.7544%" height="15" fill="rgb(216,20,37)" fg:x="11" fg:w="1"/><text x="19.5482%" y="687.50"></text></g><g><title>`0x7FFC3F180AFE (2 samples, 3.51%)</title><rect x="19.2982%" y="773" width="3.5088%" height="15" fill="rgb(206,188,39)" fg:x="11" fg:w="2"/><text x="19.5482%" y="783.50">`0x..</text></g><g><title>`0x7FFC3F19DB51 (1 samples, 1.75%)</title><rect x="21.0526%" y="757" width="1.7544%" height="15" fill="rgb(217,207,13)" fg:x="12" fg:w="1"/><text x="21.3026%" y="767.50"></text></g><g><title>`0x7FFC3F19A407 (1 samples, 1.75%)</title><rect x="21.0526%" y="741" width="1.7544%" height="15" fill="rgb(231,73,38)" fg:x="12" fg:w="1"/><text x="21.3026%" y="751.50"></text></g><g><title>`0x7FFC3F19AC49 (1 samples, 1.75%)</title><rect x="21.0526%" y="725" width="1.7544%" height="15" fill="rgb(225,20,46)" fg:x="12" fg:w="1"/><text x="21.3026%" y="735.50"></text></g><g><title>`0x7FFC3F20FB14 (1 samples, 1.75%)</title><rect x="21.0526%" y="709" width="1.7544%" height="15" fill="rgb(210,31,41)" fg:x="12" fg:w="1"/><text x="21.3026%" y="719.50"></text></g><g><title>`0x7FFC3F18065C (1 samples, 1.75%)</title><rect x="22.8070%" y="757" width="1.7544%" height="15" fill="rgb(221,200,47)" fg:x="13" fg:w="1"/><text x="23.0570%" y="767.50"></text></g><g><title>`0x7FFC3F20F9D4 (1 samples, 1.75%)</title><rect x="22.8070%" y="741" width="1.7544%" height="15" fill="rgb(226,26,5)" fg:x="13" fg:w="1"/><text x="23.0570%" y="751.50"></text></g><g><title>`0x7FFC3F1A5986 (10 samples, 17.54%)</title><rect x="8.7719%" y="837" width="17.5439%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="10"/><text x="9.0219%" y="847.50">`0x7FFC3F1A5986</text></g><g><title>`0x7FFC3F1D23CA (10 samples, 17.54%)</title><rect x="8.7719%" y="821" width="17.5439%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="10"/><text x="9.0219%" y="831.50">`0x7FFC3F1D23CA</text></g><g><title>`0x7FFC3F180DCB (10 samples, 17.54%)</title><rect x="8.7719%" y="805" width="17.5439%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="10"/><text x="9.0219%" y="815.50">`0x7FFC3F180DCB</text></g><g><title>`0x7FFC3F180F90 (4 samples, 7.02%)</title><rect x="19.2982%" y="789" width="7.0175%" height="15" fill="rgb(247,18,42)" fg:x="11" fg:w="4"/><text x="19.5482%" y="799.50">`0x7FFC3F..</text></g><g><title>`0x7FFC3F180BC8 (2 samples, 3.51%)</title><rect x="22.8070%" y="773" width="3.5088%" height="15" fill="rgb(241,131,45)" fg:x="13" fg:w="2"/><text x="23.0570%" y="783.50">`0x..</text></g><g><title>`0x7FFC3F18070F (1 samples, 1.75%)</title><rect x="24.5614%" y="757" width="1.7544%" height="15" fill="rgb(249,31,29)" fg:x="14" fg:w="1"/><text x="24.8114%" y="767.50"></text></g><g><title>`0x7FFC3F19C254 (1 samples, 1.75%)</title><rect x="24.5614%" y="741" width="1.7544%" height="15" fill="rgb(225,111,53)" fg:x="14" fg:w="1"/><text x="24.8114%" y="751.50"></text></g><g><title>`0x7FFC3F19C0CA (1 samples, 1.75%)</title><rect x="24.5614%" y="725" width="1.7544%" height="15" fill="rgb(238,160,17)" fg:x="14" fg:w="1"/><text x="24.8114%" y="735.50"></text></g><g><title>`0x7FFC3F19C4CC (1 samples, 1.75%)</title><rect x="24.5614%" y="709" width="1.7544%" height="15" fill="rgb(214,148,48)" fg:x="14" fg:w="1"/><text x="24.8114%" y="719.50"></text></g><g><title>`0x7FFC3F20F874 (1 samples, 1.75%)</title><rect x="24.5614%" y="693" width="1.7544%" height="15" fill="rgb(232,36,49)" fg:x="14" fg:w="1"/><text x="24.8114%" y="703.50"></text></g><g><title>`0x7FFC3F181082 (1 samples, 1.75%)</title><rect x="26.3158%" y="677" width="1.7544%" height="15" fill="rgb(209,103,24)" fg:x="15" fg:w="1"/><text x="26.5658%" y="687.50"></text></g><g><title>`0x7FFC3F19A407 (1 samples, 1.75%)</title><rect x="26.3158%" y="661" width="1.7544%" height="15" fill="rgb(229,88,8)" fg:x="15" fg:w="1"/><text x="26.5658%" y="671.50"></text></g><g><title>`0x7FFC3F19AC49 (1 samples, 1.75%)</title><rect x="26.3158%" y="645" width="1.7544%" height="15" fill="rgb(213,181,19)" fg:x="15" fg:w="1"/><text x="26.5658%" y="655.50"></text></g><g><title>`0x7FFC3F20FB14 (1 samples, 1.75%)</title><rect x="26.3158%" y="629" width="1.7544%" height="15" fill="rgb(254,191,54)" fg:x="15" fg:w="1"/><text x="26.5658%" y="639.50"></text></g><g><title>`0x7FFC3CDBBAE8 (2 samples, 3.51%)</title><rect x="26.3158%" y="805" width="3.5088%" height="15" fill="rgb(241,83,37)" fg:x="15" fg:w="2"/><text x="26.5658%" y="815.50">`0x..</text></g><g><title>`0x7FFC3CDC8F91 (2 samples, 3.51%)</title><rect x="26.3158%" y="789" width="3.5088%" height="15" fill="rgb(233,36,39)" fg:x="15" fg:w="2"/><text x="26.5658%" y="799.50">`0x..</text></g><g><title>`0x7FFC3CDC1843 (2 samples, 3.51%)</title><rect x="26.3158%" y="773" width="3.5088%" height="15" fill="rgb(226,3,54)" fg:x="15" fg:w="2"/><text x="26.5658%" y="783.50">`0x..</text></g><g><title>`0x7FFC3C5C6452 (2 samples, 3.51%)</title><rect x="26.3158%" y="757" width="3.5088%" height="15" fill="rgb(245,192,40)" fg:x="15" fg:w="2"/><text x="26.5658%" y="767.50">`0x..</text></g><g><title>`0x7FFC3F19A25A (2 samples, 3.51%)</title><rect x="26.3158%" y="741" width="3.5088%" height="15" fill="rgb(238,167,29)" fg:x="15" fg:w="2"/><text x="26.5658%" y="751.50">`0x..</text></g><g><title>`0x7FFC3F188CAC (2 samples, 3.51%)</title><rect x="26.3158%" y="725" width="3.5088%" height="15" fill="rgb(232,182,51)" fg:x="15" fg:w="2"/><text x="26.5658%" y="735.50">`0x..</text></g><g><title>`0x7FFC3F1988D4 (2 samples, 3.51%)</title><rect x="26.3158%" y="709" width="3.5088%" height="15" fill="rgb(231,60,39)" fg:x="15" fg:w="2"/><text x="26.5658%" y="719.50">`0x..</text></g><g><title>`0x7FFC3F180EBF (2 samples, 3.51%)</title><rect x="26.3158%" y="693" width="3.5088%" height="15" fill="rgb(208,69,12)" fg:x="15" fg:w="2"/><text x="26.5658%" y="703.50">`0x..</text></g><g><title>`0x7FFC3F1810F0 (1 samples, 1.75%)</title><rect x="28.0702%" y="677" width="1.7544%" height="15" fill="rgb(235,93,37)" fg:x="16" fg:w="1"/><text x="28.3202%" y="687.50"></text></g><g><title>`0x7FFC3F18070F (1 samples, 1.75%)</title><rect x="28.0702%" y="661" width="1.7544%" height="15" fill="rgb(213,116,39)" fg:x="16" fg:w="1"/><text x="28.3202%" y="671.50"></text></g><g><title>`0x7FFC3F19C3F8 (1 samples, 1.75%)</title><rect x="28.0702%" y="645" width="1.7544%" height="15" fill="rgb(222,207,29)" fg:x="16" fg:w="1"/><text x="28.3202%" y="655.50"></text></g><g><title>`0x7FFC3F1946BB (1 samples, 1.75%)</title><rect x="28.0702%" y="629" width="1.7544%" height="15" fill="rgb(206,96,30)" fg:x="16" fg:w="1"/><text x="28.3202%" y="639.50"></text></g><g><title>`0x7FFC3F194906 (1 samples, 1.75%)</title><rect x="28.0702%" y="613" width="1.7544%" height="15" fill="rgb(218,138,4)" fg:x="16" fg:w="1"/><text x="28.3202%" y="623.50"></text></g><g><title>`0x7FFC3F194D42 (1 samples, 1.75%)</title><rect x="28.0702%" y="597" width="1.7544%" height="15" fill="rgb(250,191,14)" fg:x="16" fg:w="1"/><text x="28.3202%" y="607.50"></text></g><g><title>`0x7FFC3CDBBCD9 (3 samples, 5.26%)</title><rect x="26.3158%" y="821" width="5.2632%" height="15" fill="rgb(239,60,40)" fg:x="15" fg:w="3"/><text x="26.5658%" y="831.50">`0x7FF..</text></g><g><title>`0x7FFC3CDBBB18 (1 samples, 1.75%)</title><rect x="29.8246%" y="805" width="1.7544%" height="15" fill="rgb(206,27,48)" fg:x="17" fg:w="1"/><text x="30.0746%" y="815.50"></text></g><g><title>`0x7FFC3DDE7FAB (1 samples, 1.75%)</title><rect x="29.8246%" y="789" width="1.7544%" height="15" fill="rgb(225,35,8)" fg:x="17" fg:w="1"/><text x="30.0746%" y="799.50"></text></g><g><title>`0x7FFC3F1C0C9D (1 samples, 1.75%)</title><rect x="29.8246%" y="773" width="1.7544%" height="15" fill="rgb(250,213,24)" fg:x="17" fg:w="1"/><text x="30.0746%" y="783.50"></text></g><g><title>`0x7FFC3F1C10A6 (1 samples, 1.75%)</title><rect x="29.8246%" y="757" width="1.7544%" height="15" fill="rgb(247,123,22)" fg:x="17" fg:w="1"/><text x="30.0746%" y="767.50"></text></g><g><title>`0x7FFC3F19869F (1 samples, 1.75%)</title><rect x="29.8246%" y="741" width="1.7544%" height="15" fill="rgb(231,138,38)" fg:x="17" fg:w="1"/><text x="30.0746%" y="751.50"></text></g><g><title>`0x7FFC3E564829 (1 samples, 1.75%)</title><rect x="29.8246%" y="725" width="1.7544%" height="15" fill="rgb(231,145,46)" fg:x="17" fg:w="1"/><text x="30.0746%" y="735.50"></text></g><g><title>`0x7FFC3E56492C (1 samples, 1.75%)</title><rect x="29.8246%" y="709" width="1.7544%" height="15" fill="rgb(251,118,11)" fg:x="17" fg:w="1"/><text x="30.0746%" y="719.50"></text></g><g><title>`0x7FFC3CDC4E5D (1 samples, 1.75%)</title><rect x="31.5789%" y="821" width="1.7544%" height="15" fill="rgb(217,147,25)" fg:x="18" fg:w="1"/><text x="31.8289%" y="831.50"></text></g><g><title>part2.exe`pre_c_initialization() (1 samples, 1.75%)</title><rect x="31.5789%" y="805" width="1.7544%" height="15" fill="rgb(247,81,37)" fg:x="18" fg:w="1"/><text x="31.8289%" y="815.50"></text></g><g><title>`0x7FFC3CDC5260 (1 samples, 1.75%)</title><rect x="31.5789%" y="789" width="1.7544%" height="15" fill="rgb(209,12,38)" fg:x="18" fg:w="1"/><text x="31.8289%" y="799.50"></text></g><g><title>part2.exe`alloc::vec::impl$15::into_iter(alloc::vec::Vec&lt;tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec (1 samples, 1.75%)</title><rect x="35.0877%" y="565" width="1.7544%" height="15" fill="rgb(227,1,9)" fg:x="20" fg:w="1"/><text x="35.3377%" y="575.50"></text></g><g><title>part2.exe`core::mem::manually_drop::ManuallyDrop&lt;alloc::vec::Vec&lt;tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt; &gt;::new(alloc::vec::Vec&lt;tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec (1 samples, 1.75%)</title><rect x="35.0877%" y="549" width="1.7544%" height="15" fill="rgb(248,47,43)" fg:x="20" fg:w="1"/><text x="35.3377%" y="559.50"></text></g><g><title>part2.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,core::iter::adapters::map::Map&lt;core::str::iter::Lines,day_11::part2::parse_input::closure_env$0&gt; &gt;(core::iter::adapters::map::Map (1 samples, 1.75%)</title><rect x="35.0877%" y="533" width="1.7544%" height="15" fill="rgb(221,10,30)" fg:x="20" fg:w="1"/><text x="35.3377%" y="543.50"></text></g><g><title>part2.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::map::Map (1 samples, 1.75%)</title><rect x="35.0877%" y="517" width="1.7544%" height="15" fill="rgb(210,229,1)" fg:x="20" fg:w="1"/><text x="35.3377%" y="527.50"></text></g><g><title>part2.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map (1 samples, 1.75%)</title><rect x="35.0877%" y="501" width="1.7544%" height="15" fill="rgb(222,148,37)" fg:x="20" fg:w="1"/><text x="35.3377%" y="511.50"></text></g><g><title>part2.exe`alloc::vec::Vec&lt;tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::extend_desugared(core::iter::adapters::map::Map (1 samples, 1.75%)</title><rect x="35.0877%" y="485" width="1.7544%" height="15" fill="rgb(234,67,33)" fg:x="20" fg:w="1"/><text x="35.3377%" y="495.50"></text></g><g><title>part2.exe`core::iter::adapters::map::impl$2::next(core::iter::adapters::map::Map (1 samples, 1.75%)</title><rect x="35.0877%" y="469" width="1.7544%" height="15" fill="rgb(247,98,35)" fg:x="20" fg:w="1"/><text x="35.3377%" y="479.50"></text></g><g><title>part2.exe`enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;ref$ (1 samples, 1.75%)</title><rect x="35.0877%" y="453" width="1.7544%" height="15" fill="rgb(247,138,52)" fg:x="20" fg:w="1"/><text x="35.3377%" y="463.50"></text></g><g><title>part2.exe`core::ops::function::impls::impl$4::call_once(day_11::part2::parse_input::closure_env$0*, ref$ (1 samples, 1.75%)</title><rect x="35.0877%" y="437" width="1.7544%" height="15" fill="rgb(213,79,30)" fg:x="20" fg:w="1"/><text x="35.3377%" y="447.50"></text></g><g><title>part2.exe`day_11::part2::parse_input::closure$0(day_11::part2::parse_input::closure_env$0*, ref$ (1 samples, 1.75%)</title><rect x="35.0877%" y="421" width="1.7544%" height="15" fill="rgb(246,177,23)" fg:x="20" fg:w="1"/><text x="35.3377%" y="431.50"></text></g><g><title>part2.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;day_11::part2::Entry,core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;u8&gt; &gt;,day_11::part2::parse_input::closure$0::closure_env$0&gt; &gt;(core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 1.75%)</title><rect x="35.0877%" y="405" width="1.7544%" height="15" fill="rgb(230,62,27)" fg:x="20" fg:w="1"/><text x="35.3377%" y="415.50"></text></g><g><title>part2.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 1.75%)</title><rect x="35.0877%" y="389" width="1.7544%" height="15" fill="rgb(216,154,8)" fg:x="20" fg:w="1"/><text x="35.3377%" y="399.50"></text></g><g><title>part2.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 1.75%)</title><rect x="35.0877%" y="373" width="1.7544%" height="15" fill="rgb(244,35,45)" fg:x="20" fg:w="1"/><text x="35.3377%" y="383.50"></text></g><g><title>part2.exe`alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 1.75%)</title><rect x="35.0877%" y="357" width="1.7544%" height="15" fill="rgb(251,115,12)" fg:x="20" fg:w="1"/><text x="35.3377%" y="367.50"></text></g><g><title>part2.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;u8&gt; &gt;,day_11::part2::parse_input::closure$0::closure_env$0&gt;, alloc::vec::impl$19::extend_trusted::closure_env$0&lt;day_11::part2::Entry,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 1.75%)</title><rect x="35.0877%" y="341" width="1.7544%" height="15" fill="rgb(240,54,50)" fg:x="20" fg:w="1"/><text x="35.3377%" y="351.50"></text></g><g><title>part2.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;u8&gt; &gt;,day_11::part2::parse_input::closure$0::closure_env$0&gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;day_11::part2::Entry,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;day_11::part2::Entry,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 1.75%)</title><rect x="35.0877%" y="325" width="1.7544%" height="15" fill="rgb(233,84,52)" fg:x="20" fg:w="1"/><text x="35.3377%" y="335.50"></text></g><g><title>part2.exe`core::iter::adapters::enumerate::impl$1::fold(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;u8&gt; &gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;u8&gt; &gt;,day_11::part2::Entry,tuple$&lt;&gt;,day_11::part2::parse_input::closure$0::closure_env$0,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;day_11::part2::Entry,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;day_11::part2::Entry,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 1.75%)</title><rect x="35.0877%" y="309" width="1.7544%" height="15" fill="rgb(207,117,47)" fg:x="20" fg:w="1"/><text x="35.3377%" y="319.50"></text></g><g><title>part2.exe`core::slice::iter::impl$181::fold(core::slice::iter::Iter&lt;u8&gt;, tuple$&lt;&gt;, core::iter::adapters::enumerate::impl$1::fold::enumerate::closure_env$0&lt;ref$&lt;u8&gt;,tuple$&lt;&gt;,core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;u8&gt; &gt;,day_11::part2::Entry,tuple$&lt;&gt;,day_11::part2::parse_input::closure$0::closure_env$0,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;day_11::part2::Entry,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;day_11::part2::Entry,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 1.75%)</title><rect x="35.0877%" y="293" width="1.7544%" height="15" fill="rgb(249,43,39)" fg:x="20" fg:w="1"/><text x="35.3377%" y="303.50"></text></g><g><title>part2.exe`core::iter::adapters::enumerate::impl$1::fold::enumerate::closure$0(core::iter::adapters::enumerate::impl$1::fold::enumerate::closure_env$0&lt;ref$&lt;u8&gt;,tuple$&lt;&gt;,core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;u8&gt; &gt;,day_11::part2::Entry,tuple$&lt;&gt;,day_11::part2::parse_input::closure$0::closure_env$0,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;day_11::part2::Entry,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;day_11::part2::Entry,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;u8&gt; &gt;,day_11::part2::parse_input::closure$0::closure_env$0&gt; &gt; &gt; &gt; &gt;*, tuple$ (1 samples, 1.75%)</title><rect x="35.0877%" y="277" width="1.7544%" height="15" fill="rgb(209,38,44)" fg:x="20" fg:w="1"/><text x="35.3377%" y="287.50"></text></g><g><title>part2.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;u8&gt; &gt;,day_11::part2::Entry,tuple$&lt;&gt;,day_11::part2::parse_input::closure$0::closure_env$0,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;day_11::part2::Entry,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;day_11::part2::Entry,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;u8&gt; &gt;,day_11::part2::parse_input::closure$0::closure_env$0&gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, tuple$&lt;usize,ref$ (1 samples, 1.75%)</title><rect x="35.0877%" y="261" width="1.7544%" height="15" fill="rgb(236,212,23)" fg:x="20" fg:w="1"/><text x="35.3377%" y="271.50"></text></g><g><title>part2.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;day_11::part2::Entry,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;day_11::part2::Entry,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;u8&gt; &gt;,day_11::part2::parse_input::closure$0::closure_env$0&gt; &gt; &gt;*, tuple$ (1 samples, 1.75%)</title><rect x="35.0877%" y="245" width="1.7544%" height="15" fill="rgb(242,79,21)" fg:x="20" fg:w="1"/><text x="35.3377%" y="255.50"></text></g><g><title>part2.exe`alloc::vec::impl$19::extend_trusted::closure$0(alloc::vec::impl$19::extend_trusted::closure_env$0&lt;day_11::part2::Entry,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 1.75%)</title><rect x="35.0877%" y="229" width="1.7544%" height="15" fill="rgb(211,96,35)" fg:x="20" fg:w="1"/><text x="35.3377%" y="239.50"></text></g><g><title>part2.exe`alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1 samples, 1.75%)</title><rect x="35.0877%" y="213" width="1.7544%" height="15" fill="rgb(253,215,40)" fg:x="20" fg:w="1"/><text x="35.3377%" y="223.50"></text></g><g><title>part2.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;usize&gt; &gt; (1 samples, 1.75%)</title><rect x="38.5965%" y="101" width="1.7544%" height="15" fill="rgb(211,81,21)" fg:x="22" fg:w="1"/><text x="38.8465%" y="111.50"></text></g><g><title>part2.exe`std::hash::random::impl$4::finish (1 samples, 1.75%)</title><rect x="38.5965%" y="85" width="1.7544%" height="15" fill="rgb(208,190,38)" fg:x="22" fg:w="1"/><text x="38.8465%" y="95.50"></text></g><g><title>part2.exe`core::hash::sip::impl$4::finish (1 samples, 1.75%)</title><rect x="38.5965%" y="69" width="1.7544%" height="15" fill="rgb(235,213,38)" fg:x="22" fg:w="1"/><text x="38.8465%" y="79.50"></text></g><g><title>part2.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1 samples, 1.75%)</title><rect x="38.5965%" y="53" width="1.7544%" height="15" fill="rgb(237,122,38)" fg:x="22" fg:w="1"/><text x="38.8465%" y="63.50"></text></g><g><title>part2.exe`core::hash::sip::impl$8::d_rounds (1 samples, 1.75%)</title><rect x="38.5965%" y="37" width="1.7544%" height="15" fill="rgb(244,218,35)" fg:x="22" fg:w="1"/><text x="38.8465%" y="47.50"></text></g><g><title>part2.exe`core::ptr::drop_in_place(std::collections::hash::set::HashSet (3 samples, 5.26%)</title><rect x="36.8421%" y="565" width="5.2632%" height="15" fill="rgb(240,68,47)" fg:x="21" fg:w="3"/><text x="37.0921%" y="575.50">part2...</text></g><g><title>part2.exe`core::ptr::drop_in_place(hashbrown::set::HashSet (3 samples, 5.26%)</title><rect x="36.8421%" y="549" width="5.2632%" height="15" fill="rgb(210,16,53)" fg:x="21" fg:w="3"/><text x="37.0921%" y="559.50">part2...</text></g><g><title>part2.exe`core::ptr::drop_in_place(hashbrown::map::HashMap&lt;usize,tuple$ (3 samples, 5.26%)</title><rect x="36.8421%" y="533" width="5.2632%" height="15" fill="rgb(235,124,12)" fg:x="21" fg:w="3"/><text x="37.0921%" y="543.50">part2...</text></g><g><title>part2.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$&lt;usize,tuple$ (3 samples, 5.26%)</title><rect x="36.8421%" y="517" width="5.2632%" height="15" fill="rgb(224,169,11)" fg:x="21" fg:w="3"/><text x="37.0921%" y="527.50">part2...</text></g><g><title>part2.exe`hashbrown::raw::impl$18::drop(hashbrown::raw::RawTable&lt;tuple$&lt;usize,tuple$ (3 samples, 5.26%)</title><rect x="36.8421%" y="501" width="5.2632%" height="15" fill="rgb(250,166,2)" fg:x="21" fg:w="3"/><text x="37.0921%" y="511.50">part2...</text></g><g><title>part2.exe`alloc::vec::in_place_collect::impl$1::from_iter&lt;alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt;,core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;,day_11::part2::parse_input::closure_env$1&gt; &gt;(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec (3 samples, 5.26%)</title><rect x="36.8421%" y="485" width="5.2632%" height="15" fill="rgb(242,216,29)" fg:x="21" fg:w="3"/><text x="37.0921%" y="495.50">part2...</text></g><g><title>part2.exe`alloc::vec::in_place_collect::impl$2::collect_in_place(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;,day_11::part2::parse_input::closure_env$1&gt;*, alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt;*, alloc::vec::Vec (3 samples, 5.26%)</title><rect x="36.8421%" y="469" width="5.2632%" height="15" fill="rgb(230,116,27)" fg:x="21" fg:w="3"/><text x="37.0921%" y="479.50">part2...</text></g><g><title>part2.exe`core::ptr::mut_ptr::impl$0::sub_ptr(alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt;*, alloc::vec::Vec (3 samples, 5.26%)</title><rect x="36.8421%" y="453" width="5.2632%" height="15" fill="rgb(228,99,48)" fg:x="21" fg:w="3"/><text x="37.0921%" y="463.50">part2...</text></g><g><title>part2.exe`core::ptr::const_ptr::impl$0::sub_ptr(alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt;*, alloc::vec::Vec (3 samples, 5.26%)</title><rect x="36.8421%" y="437" width="5.2632%" height="15" fill="rgb(253,11,6)" fg:x="21" fg:w="3"/><text x="37.0921%" y="447.50">part2...</text></g><g><title>part2.exe`core::iter::adapters::map::impl$2::try_fold&lt;alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt;,alloc::vec::into_iter::IntoIter&lt;tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;,day_11::part2::parse_input::closure_env$1,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,never$&gt; &gt; &gt;(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;,day_11::part2::parse_input::closure_env$1&gt;*, alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;, alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::vec::Vec (3 samples, 5.26%)</title><rect x="36.8421%" y="421" width="5.2632%" height="15" fill="rgb(247,143,39)" fg:x="21" fg:w="3"/><text x="37.0921%" y="431.50">part2...</text></g><g><title>part2.exe`core::iter::traits::iterator::Iterator::try_fold(alloc::vec::into_iter::IntoIter&lt;tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;, core::iter::adapters::map::map_try_fold::closure_env$0&lt;tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt;,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,never$&gt; &gt;,day_11::part2::parse_input::closure_env$1,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::vec::Vec (3 samples, 5.26%)</title><rect x="36.8421%" y="405" width="5.2632%" height="15" fill="rgb(236,97,10)" fg:x="21" fg:w="3"/><text x="37.0921%" y="415.50">part2...</text></g><g><title>part2.exe`core::iter::adapters::map::map_try_fold::closure$0(core::iter::adapters::map::map_try_fold::closure_env$0&lt;tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt;,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;,never$&gt; &gt;,day_11::part2::parse_input::closure_env$1,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt; &gt;*, alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::vec::Vec&lt;day_11::part2::Entry,alloc::alloc::Global&gt; &gt;, tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec (3 samples, 5.26%)</title><rect x="36.8421%" y="389" width="5.2632%" height="15" fill="rgb(233,208,19)" fg:x="21" fg:w="3"/><text x="37.0921%" y="399.50">part2...</text></g><g><title>part2.exe`day_11::part2::parse_input::closure$1(day_11::part2::parse_input::closure_env$1*, tuple$&lt;day_11::part2::RowSpaced,alloc::vec::Vec (3 samples, 5.26%)</title><rect x="36.8421%" y="373" width="5.2632%" height="15" fill="rgb(216,164,2)" fg:x="21" fg:w="3"/><text x="37.0921%" y="383.50">part2...</text></g><g><title>part2.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter (3 samples, 5.26%)</title><rect x="36.8421%" y="357" width="5.2632%" height="15" fill="rgb(220,129,5)" fg:x="21" fg:w="3"/><text x="37.0921%" y="367.50">part2...</text></g><g><title>part2.exe`alloc::vec::impl$14::from_iter(core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter (3 samples, 5.26%)</title><rect x="36.8421%" y="341" width="5.2632%" height="15" fill="rgb(242,17,10)" fg:x="21" fg:w="3"/><text x="37.0921%" y="351.50">part2...</text></g><g><title>part2.exe`alloc::vec::in_place_collect::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter (3 samples, 5.26%)</title><rect x="36.8421%" y="325" width="5.2632%" height="15" fill="rgb(242,107,0)" fg:x="21" fg:w="3"/><text x="37.0921%" y="335.50">part2...</text></g><g><title>part2.exe`alloc::vec::in_place_collect::impl$2::collect_in_place(core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter (3 samples, 5.26%)</title><rect x="36.8421%" y="309" width="5.2632%" height="15" fill="rgb(251,28,31)" fg:x="21" fg:w="3"/><text x="37.0921%" y="319.50">part2...</text></g><g><title>part2.exe`core::ptr::mut_ptr::impl$0::sub_ptr (3 samples, 5.26%)</title><rect x="36.8421%" y="293" width="5.2632%" height="15" fill="rgb(233,223,10)" fg:x="21" fg:w="3"/><text x="37.0921%" y="303.50">part2...</text></g><g><title>part2.exe`core::ptr::const_ptr::impl$0::sub_ptr (3 samples, 5.26%)</title><rect x="36.8421%" y="277" width="5.2632%" height="15" fill="rgb(215,21,27)" fg:x="21" fg:w="3"/><text x="37.0921%" y="287.50">part2...</text></g><g><title>part2.exe`core::iter::adapters::map::impl$2::try_fold&lt;day_11::part1::Entry,core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;day_11::part1::Entry,alloc::alloc::Global&gt; &gt;,day_11::part1::parse_input::closure$1::closure_env$0,alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;day_11::part1::Entry&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;,never$&gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;day_11::part1::Entry,alloc::alloc::Global&gt; &gt;,day_11::part1::parse_input::closure$1::closure_env$0&gt;*, alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;, alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0 (3 samples, 5.26%)</title><rect x="36.8421%" y="261" width="5.2632%" height="15" fill="rgb(232,23,21)" fg:x="21" fg:w="3"/><text x="37.0921%" y="271.50">part2...</text></g><g><title>part2.exe`core::iter::adapters::enumerate::impl$1::try_fold(core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;day_11::part1::Entry,alloc::alloc::Global&gt; &gt;*, alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;, core::iter::adapters::map::map_try_fold::closure_env$0&lt;tuple$&lt;usize,day_11::part1::Entry&gt;,day_11::part1::Entry,alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;,never$&gt; &gt;,day_11::part1::parse_input::closure$1::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0 (3 samples, 5.26%)</title><rect x="36.8421%" y="245" width="5.2632%" height="15" fill="rgb(244,5,23)" fg:x="21" fg:w="3"/><text x="37.0921%" y="255.50">part2...</text></g><g><title>part2.exe`core::iter::traits::iterator::Iterator::try_fold(alloc::vec::into_iter::IntoIter&lt;day_11::part1::Entry,alloc::alloc::Global&gt;*, alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;, core::iter::adapters::enumerate::impl$1::try_fold::enumerate::closure_env$0&lt;day_11::part1::Entry,alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;,never$&gt; &gt;,core::iter::adapters::map::map_try_fold::closure_env$0&lt;tuple$&lt;usize,day_11::part1::Entry&gt;,day_11::part1::Entry,alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;,never$&gt; &gt;,day_11::part1::parse_input::closure$1::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0 (3 samples, 5.26%)</title><rect x="36.8421%" y="229" width="5.2632%" height="15" fill="rgb(226,81,46)" fg:x="21" fg:w="3"/><text x="37.0921%" y="239.50">part2...</text></g><g><title>part2.exe`core::iter::adapters::enumerate::impl$1::try_fold::enumerate::closure$0(core::iter::adapters::enumerate::impl$1::try_fold::enumerate::closure_env$0&lt;day_11::part1::Entry,alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;,never$&gt; &gt;,core::iter::adapters::map::map_try_fold::closure_env$0&lt;tuple$&lt;usize,day_11::part1::Entry&gt;,day_11::part1::Entry,alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;,never$&gt; &gt;,day_11::part1::parse_input::closure$1::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;day_11::part1::Entry&gt; &gt; &gt;*, alloc::vec::in_place_drop::InPlaceDrop (3 samples, 5.26%)</title><rect x="36.8421%" y="213" width="5.2632%" height="15" fill="rgb(247,70,30)" fg:x="21" fg:w="3"/><text x="37.0921%" y="223.50">part2...</text></g><g><title>part2.exe`core::iter::adapters::map::map_try_fold::closure$0(core::iter::adapters::map::map_try_fold::closure_env$0&lt;tuple$&lt;usize,day_11::part1::Entry&gt;,day_11::part1::Entry,alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;,never$&gt; &gt;,day_11::part1::parse_input::closure$1::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;day_11::part1::Entry&gt; &gt;*, alloc::vec::in_place_drop::InPlaceDrop&lt;day_11::part1::Entry&gt;, tuple$ (3 samples, 5.26%)</title><rect x="36.8421%" y="197" width="5.2632%" height="15" fill="rgb(212,68,19)" fg:x="21" fg:w="3"/><text x="37.0921%" y="207.50">part2...</text></g><g><title>part2.exe`day_11::part1::parse_input::closure$1::closure$0(day_11::part1::parse_input::closure$1::closure_env$0*, tuple$ (3 samples, 5.26%)</title><rect x="36.8421%" y="181" width="5.2632%" height="15" fill="rgb(240,187,13)" fg:x="21" fg:w="3"/><text x="37.0921%" y="191.50">part2...</text></g><g><title>part2.exe`std::collections::hash::set::HashSet&lt;usize,std::hash::random::RandomState&gt;::contains (3 samples, 5.26%)</title><rect x="36.8421%" y="165" width="5.2632%" height="15" fill="rgb(223,113,26)" fg:x="21" fg:w="3"/><text x="37.0921%" y="175.50">part2...</text></g><g><title>part2.exe`hashbrown::set::HashSet&lt;usize,std::hash::random::RandomState,alloc::alloc::Global&gt;::contains (3 samples, 5.26%)</title><rect x="36.8421%" y="149" width="5.2632%" height="15" fill="rgb(206,192,2)" fg:x="21" fg:w="3"/><text x="37.0921%" y="159.50">part2...</text></g><g><title>part2.exe`hashbrown::map::HashMap&lt;usize,tuple$&lt;&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::contains_key (3 samples, 5.26%)</title><rect x="36.8421%" y="133" width="5.2632%" height="15" fill="rgb(241,108,4)" fg:x="21" fg:w="3"/><text x="37.0921%" y="143.50">part2...</text></g><g><title>part2.exe`hashbrown::map::HashMap&lt;usize,tuple$&lt;&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::get_inner (3 samples, 5.26%)</title><rect x="36.8421%" y="117" width="5.2632%" height="15" fill="rgb(247,173,49)" fg:x="21" fg:w="3"/><text x="37.0921%" y="127.50">part2...</text></g><g><title>part2.exe`hashbrown::raw::RawTable&lt;tuple$&lt;usize,tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;usize,usize,tuple$ (1 samples, 1.75%)</title><rect x="40.3509%" y="101" width="1.7544%" height="15" fill="rgb(224,114,35)" fg:x="23" fg:w="1"/><text x="40.6009%" y="111.50"></text></g><g><title>part2.exe`hashbrown::raw::RawTable&lt;tuple$&lt;usize,tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;usize,usize,tuple$ (1 samples, 1.75%)</title><rect x="40.3509%" y="85" width="1.7544%" height="15" fill="rgb(245,159,27)" fg:x="23" fg:w="1"/><text x="40.6009%" y="95.50"></text></g><g><title>part2.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 1.75%)</title><rect x="40.3509%" y="69" width="1.7544%" height="15" fill="rgb(245,172,44)" fg:x="23" fg:w="1"/><text x="40.6009%" y="79.50"></text></g><g><title>part2.exe`hashbrown::raw::h2 (1 samples, 1.75%)</title><rect x="40.3509%" y="53" width="1.7544%" height="15" fill="rgb(236,23,11)" fg:x="23" fg:w="1"/><text x="40.6009%" y="63.50"></text></g><g><title>`0x7FFC3BE746FF (1 samples, 1.75%)</title><rect x="42.1053%" y="277" width="1.7544%" height="15" fill="rgb(205,117,38)" fg:x="24" fg:w="1"/><text x="42.3553%" y="287.50"></text></g><g><title>`0x7FFC3BE73E20 (1 samples, 1.75%)</title><rect x="42.1053%" y="261" width="1.7544%" height="15" fill="rgb(237,72,25)" fg:x="24" fg:w="1"/><text x="42.3553%" y="271.50"></text></g><g><title>`0x7FFC3BE762C9 (1 samples, 1.75%)</title><rect x="42.1053%" y="245" width="1.7544%" height="15" fill="rgb(244,70,9)" fg:x="24" fg:w="1"/><text x="42.3553%" y="255.50"></text></g><g><title>`0x7FFC3BE76413 (1 samples, 1.75%)</title><rect x="42.1053%" y="229" width="1.7544%" height="15" fill="rgb(217,125,39)" fg:x="24" fg:w="1"/><text x="42.3553%" y="239.50"></text></g><g><title>`0x7FFC3F20F454 (1 samples, 1.75%)</title><rect x="42.1053%" y="213" width="1.7544%" height="15" fill="rgb(235,36,10)" fg:x="24" fg:w="1"/><text x="42.3553%" y="223.50"></text></g><g><title>`0x7FFC3F1988B6 (1 samples, 1.75%)</title><rect x="43.8596%" y="181" width="1.7544%" height="15" fill="rgb(251,123,47)" fg:x="25" fg:w="1"/><text x="44.1096%" y="191.50"></text></g><g><title>`0x7FFC3F19DDA9 (1 samples, 1.75%)</title><rect x="43.8596%" y="165" width="1.7544%" height="15" fill="rgb(221,13,13)" fg:x="25" fg:w="1"/><text x="44.1096%" y="175.50"></text></g><g><title>`0x7FFC3F19CE29 (1 samples, 1.75%)</title><rect x="43.8596%" y="149" width="1.7544%" height="15" fill="rgb(238,131,9)" fg:x="25" fg:w="1"/><text x="44.1096%" y="159.50"></text></g><g><title>`0x7FFC3F19C3F8 (1 samples, 1.75%)</title><rect x="43.8596%" y="133" width="1.7544%" height="15" fill="rgb(211,50,8)" fg:x="25" fg:w="1"/><text x="44.1096%" y="143.50"></text></g><g><title>`0x7FFC3F19452F (1 samples, 1.75%)</title><rect x="43.8596%" y="117" width="1.7544%" height="15" fill="rgb(245,182,24)" fg:x="25" fg:w="1"/><text x="44.1096%" y="127.50"></text></g><g><title>`0x7FFC3F1E1532 (1 samples, 1.75%)</title><rect x="43.8596%" y="101" width="1.7544%" height="15" fill="rgb(242,14,37)" fg:x="25" fg:w="1"/><text x="44.1096%" y="111.50"></text></g><g><title>part2.exe`day_11::part2::parse_input(ref$ (7 samples, 12.28%)</title><rect x="35.0877%" y="581" width="12.2807%" height="15" fill="rgb(246,228,12)" fg:x="20" fg:w="7"/><text x="35.3377%" y="591.50">part2.exe`day_11::..</text></g><g><title>part2.exe`std::collections::hash::set::HashSet&lt;usize,std::hash::random::RandomState&gt;::new (3 samples, 5.26%)</title><rect x="42.1053%" y="565" width="5.2632%" height="15" fill="rgb(213,55,15)" fg:x="24" fg:w="3"/><text x="42.3553%" y="575.50">part2...</text></g><g><title>part2.exe`std::collections::hash::set::impl$11::default (3 samples, 5.26%)</title><rect x="42.1053%" y="549" width="5.2632%" height="15" fill="rgb(209,9,3)" fg:x="24" fg:w="3"/><text x="42.3553%" y="559.50">part2...</text></g><g><title>part2.exe`hashbrown::set::impl$13::default (3 samples, 5.26%)</title><rect x="42.1053%" y="533" width="5.2632%" height="15" fill="rgb(230,59,30)" fg:x="24" fg:w="3"/><text x="42.3553%" y="543.50">part2...</text></g><g><title>part2.exe`hashbrown::map::impl$8::default (3 samples, 5.26%)</title><rect x="42.1053%" y="517" width="5.2632%" height="15" fill="rgb(209,121,21)" fg:x="24" fg:w="3"/><text x="42.3553%" y="527.50">part2...</text></g><g><title>part2.exe`std::hash::random::impl$5::default (3 samples, 5.26%)</title><rect x="42.1053%" y="501" width="5.2632%" height="15" fill="rgb(220,109,13)" fg:x="24" fg:w="3"/><text x="42.3553%" y="511.50">part2...</text></g><g><title>part2.exe`std::hash::random::RandomState::new (3 samples, 5.26%)</title><rect x="42.1053%" y="485" width="5.2632%" height="15" fill="rgb(232,18,1)" fg:x="24" fg:w="3"/><text x="42.3553%" y="495.50">part2...</text></g><g><title>part2.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::with (3 samples, 5.26%)</title><rect x="42.1053%" y="469" width="5.2632%" height="15" fill="rgb(215,41,42)" fg:x="24" fg:w="3"/><text x="42.3553%" y="479.50">part2...</text></g><g><title>part2.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_with (3 samples, 5.26%)</title><rect x="42.1053%" y="453" width="5.2632%" height="15" fill="rgb(224,123,36)" fg:x="24" fg:w="3"/><text x="42.3553%" y="463.50">part2...</text></g><g><title>part2.exe`std::hash::random::impl$0::new::closure$0(std::hash::random::impl$0::new::closure_env$0, core::cell::Cell&lt;tuple$ (3 samples, 5.26%)</title><rect x="42.1053%" y="437" width="5.2632%" height="15" fill="rgb(240,125,3)" fg:x="24" fg:w="3"/><text x="42.3553%" y="447.50">part2...</text></g><g><title>part2.exe`core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;::get (3 samples, 5.26%)</title><rect x="42.1053%" y="421" width="5.2632%" height="15" fill="rgb(205,98,50)" fg:x="24" fg:w="3"/><text x="42.3553%" y="431.50">part2...</text></g><g><title>part2.exe`std::sys::common::thread_local::fast_local::Key&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_initialize&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;,std::hash::random::impl$0::new::KEYS::__getit::closure_env$0&gt; (3 samples, 5.26%)</title><rect x="42.1053%" y="405" width="5.2632%" height="15" fill="rgb(205,185,37)" fg:x="24" fg:w="3"/><text x="42.3553%" y="415.50">part2...</text></g><g><title>part2.exe`std::sys::common::thread_local::lazy::LazyKeyInner&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::initialize (3 samples, 5.26%)</title><rect x="42.1053%" y="389" width="5.2632%" height="15" fill="rgb(238,207,15)" fg:x="24" fg:w="3"/><text x="42.3553%" y="399.50">part2...</text></g><g><title>part2.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (3 samples, 5.26%)</title><rect x="42.1053%" y="373" width="5.2632%" height="15" fill="rgb(213,199,42)" fg:x="24" fg:w="3"/><text x="42.3553%" y="383.50">part2...</text></g><g><title>part2.exe`core::ptr::write(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (3 samples, 5.26%)</title><rect x="42.1053%" y="357" width="5.2632%" height="15" fill="rgb(235,201,11)" fg:x="24" fg:w="3"/><text x="42.3553%" y="367.50">part2...</text></g><g><title>part2.exe`std::sys::windows::rand::hashmap_random_keys (3 samples, 5.26%)</title><rect x="42.1053%" y="341" width="5.2632%" height="15" fill="rgb(207,46,11)" fg:x="24" fg:w="3"/><text x="42.3553%" y="351.50">part2...</text></g><g><title>part2.exe`std::sys::windows::c::nt_success (3 samples, 5.26%)</title><rect x="42.1053%" y="325" width="5.2632%" height="15" fill="rgb(241,35,35)" fg:x="24" fg:w="3"/><text x="42.3553%" y="335.50">part2...</text></g><g><title>`0x7FFC3BE7177C (3 samples, 5.26%)</title><rect x="42.1053%" y="309" width="5.2632%" height="15" fill="rgb(243,32,47)" fg:x="24" fg:w="3"/><text x="42.3553%" y="319.50">`0x7FF..</text></g><g><title>`0x7FFC3BE718D6 (3 samples, 5.26%)</title><rect x="42.1053%" y="293" width="5.2632%" height="15" fill="rgb(247,202,23)" fg:x="24" fg:w="3"/><text x="42.3553%" y="303.50">`0x7FF..</text></g><g><title>`0x7FFC3BE755D3 (2 samples, 3.51%)</title><rect x="43.8596%" y="277" width="3.5088%" height="15" fill="rgb(219,102,11)" fg:x="25" fg:w="2"/><text x="44.1096%" y="287.50">`0x..</text></g><g><title>`0x7FFC3BE77969 (2 samples, 3.51%)</title><rect x="43.8596%" y="261" width="3.5088%" height="15" fill="rgb(243,110,44)" fg:x="25" fg:w="2"/><text x="44.1096%" y="271.50">`0x..</text></g><g><title>`0x7FFC3BE77E85 (2 samples, 3.51%)</title><rect x="43.8596%" y="245" width="3.5088%" height="15" fill="rgb(222,74,54)" fg:x="25" fg:w="2"/><text x="44.1096%" y="255.50">`0x..</text></g><g><title>`0x7FFC3C5C6452 (2 samples, 3.51%)</title><rect x="43.8596%" y="229" width="3.5088%" height="15" fill="rgb(216,99,12)" fg:x="25" fg:w="2"/><text x="44.1096%" y="239.50">`0x..</text></g><g><title>`0x7FFC3F19A25A (2 samples, 3.51%)</title><rect x="43.8596%" y="213" width="3.5088%" height="15" fill="rgb(226,22,26)" fg:x="25" fg:w="2"/><text x="44.1096%" y="223.50">`0x..</text></g><g><title>`0x7FFC3F188CAC (2 samples, 3.51%)</title><rect x="43.8596%" y="197" width="3.5088%" height="15" fill="rgb(217,163,10)" fg:x="25" fg:w="2"/><text x="44.1096%" y="207.50">`0x..</text></g><g><title>`0x7FFC3F198940 (1 samples, 1.75%)</title><rect x="45.6140%" y="181" width="1.7544%" height="15" fill="rgb(213,25,53)" fg:x="26" fg:w="1"/><text x="45.8640%" y="191.50"></text></g><g><title>`0x7FFC3F19D62D (1 samples, 1.75%)</title><rect x="45.6140%" y="165" width="1.7544%" height="15" fill="rgb(252,105,26)" fg:x="26" fg:w="1"/><text x="45.8640%" y="175.50"></text></g><g><title>`0x7FFC3F1DCDFE (1 samples, 1.75%)</title><rect x="45.6140%" y="149" width="1.7544%" height="15" fill="rgb(220,39,43)" fg:x="26" fg:w="1"/><text x="45.8640%" y="159.50"></text></g><g><title>`0x7FFC3F1DD04D (1 samples, 1.75%)</title><rect x="45.6140%" y="133" width="1.7544%" height="15" fill="rgb(229,68,48)" fg:x="26" fg:w="1"/><text x="45.8640%" y="143.50"></text></g><g><title>`0x7FFC3F19869F (1 samples, 1.75%)</title><rect x="45.6140%" y="117" width="1.7544%" height="15" fill="rgb(252,8,32)" fg:x="26" fg:w="1"/><text x="45.8640%" y="127.50"></text></g><g><title>`0x7FFC3CB90CFA (1 samples, 1.75%)</title><rect x="45.6140%" y="101" width="1.7544%" height="15" fill="rgb(223,20,43)" fg:x="26" fg:w="1"/><text x="45.8640%" y="111.50"></text></g><g><title>`0x7FFC3CB76FB9 (1 samples, 1.75%)</title><rect x="45.6140%" y="85" width="1.7544%" height="15" fill="rgb(229,81,49)" fg:x="26" fg:w="1"/><text x="45.8640%" y="95.50"></text></g><g><title>`0x7FFC3CB76CA9 (1 samples, 1.75%)</title><rect x="45.6140%" y="69" width="1.7544%" height="15" fill="rgb(236,28,36)" fg:x="26" fg:w="1"/><text x="45.8640%" y="79.50"></text></g><g><title>`0x7FFC3CB76714 (1 samples, 1.75%)</title><rect x="45.6140%" y="53" width="1.7544%" height="15" fill="rgb(249,185,26)" fg:x="26" fg:w="1"/><text x="45.8640%" y="63.50"></text></g><g><title>`0x7FFC3F20F5B4 (1 samples, 1.75%)</title><rect x="45.6140%" y="37" width="1.7544%" height="15" fill="rgb(249,174,33)" fg:x="26" fg:w="1"/><text x="45.8640%" y="47.50"></text></g><g><title>part2.exe`core::slice::impl$0::binary_search_by_key (1 samples, 1.75%)</title><rect x="49.1228%" y="197" width="1.7544%" height="15" fill="rgb(233,201,37)" fg:x="28" fg:w="1"/><text x="49.3728%" y="207.50"></text></g><g><title>part2.exe`core::slice::impl$0::binary_search_by (1 samples, 1.75%)</title><rect x="49.1228%" y="181" width="1.7544%" height="15" fill="rgb(221,78,26)" fg:x="28" fg:w="1"/><text x="49.3728%" y="191.50"></text></g><g><title>part2.exe`core::char::impl$12::len (3 samples, 5.26%)</title><rect x="47.3684%" y="261" width="5.2632%" height="15" fill="rgb(250,127,30)" fg:x="27" fg:w="3"/><text x="47.6184%" y="271.50">part2...</text></g><g><title>part2.exe`core::char::methods::impl$0::escape_debug_ext (3 samples, 5.26%)</title><rect x="47.3684%" y="245" width="5.2632%" height="15" fill="rgb(230,49,44)" fg:x="27" fg:w="3"/><text x="47.6184%" y="255.50">part2...</text></g><g><title>part2.exe`core::unicode::unicode_data::grapheme_extend::lookup (2 samples, 3.51%)</title><rect x="49.1228%" y="229" width="3.5088%" height="15" fill="rgb(229,67,23)" fg:x="28" fg:w="2"/><text x="49.3728%" y="239.50">par..</text></g><g><title>part2.exe`core::unicode::unicode_data::skip_search (2 samples, 3.51%)</title><rect x="49.1228%" y="213" width="3.5088%" height="15" fill="rgb(249,83,47)" fg:x="28" fg:w="2"/><text x="49.3728%" y="223.50">par..</text></g><g><title>part2.exe`core::unicode::unicode_data::decode_length (1 samples, 1.75%)</title><rect x="50.8772%" y="197" width="1.7544%" height="15" fill="rgb(215,43,3)" fg:x="29" fg:w="1"/><text x="51.1272%" y="207.50"></text></g><g><title>part2.exe`miette::eyreish::context::impl$0::context(enum2$&lt;core::result::Result&lt;alloc::string::String,enum2$&lt;day_11::custom_error::AocError&gt; &gt; &gt;, ref$ (12 samples, 21.05%)</title><rect x="33.3333%" y="629" width="21.0526%" height="15" fill="rgb(238,154,13)" fg:x="19" fg:w="12"/><text x="33.5833%" y="639.50">part2.exe`miette::eyreish::contex..</text></g><g><title>part2.exe`miette::eyreish::context::impl$0::wrap_err(enum2$&lt;core::result::Result&lt;alloc::string::String,enum2$&lt;day_11::custom_error::AocError&gt; &gt; &gt;, ref$ (12 samples, 21.05%)</title><rect x="33.3333%" y="613" width="21.0526%" height="15" fill="rgb(219,56,2)" fg:x="19" fg:w="12"/><text x="33.5833%" y="623.50">part2.exe`miette::eyreish::contex..</text></g><g><title>part2.exe`day_11::part2::process(ref$ (12 samples, 21.05%)</title><rect x="33.3333%" y="597" width="21.0526%" height="15" fill="rgb(233,0,4)" fg:x="19" fg:w="12"/><text x="33.5833%" y="607.50">part2.exe`day_11::part2::process(..</text></g><g><title>part2.exe`tracing::span::Span::new (4 samples, 7.02%)</title><rect x="47.3684%" y="581" width="7.0175%" height="15" fill="rgb(235,30,7)" fg:x="27" fg:w="4"/><text x="47.6184%" y="591.50">part2.exe..</text></g><g><title>part2.exe`tracing_core::dispatcher::get_default&lt;tracing::span::Span,tracing::span::impl$0::new::closure_env$0&gt; (4 samples, 7.02%)</title><rect x="47.3684%" y="565" width="7.0175%" height="15" fill="rgb(250,79,13)" fg:x="27" fg:w="4"/><text x="47.6184%" y="575.50">part2.exe..</text></g><g><title>part2.exe`tracing::span::impl$0::new::closure$0 (4 samples, 7.02%)</title><rect x="47.3684%" y="549" width="7.0175%" height="15" fill="rgb(211,146,34)" fg:x="27" fg:w="4"/><text x="47.6184%" y="559.50">part2.exe..</text></g><g><title>part2.exe`tracing::span::Span::new_with (4 samples, 7.02%)</title><rect x="47.3684%" y="533" width="7.0175%" height="15" fill="rgb(228,22,38)" fg:x="27" fg:w="4"/><text x="47.6184%" y="543.50">part2.exe..</text></g><g><title>part2.exe`tracing::span::Span::make_with (4 samples, 7.02%)</title><rect x="47.3684%" y="517" width="7.0175%" height="15" fill="rgb(235,168,5)" fg:x="27" fg:w="4"/><text x="47.6184%" y="527.50">part2.exe..</text></g><g><title>part2.exe`tracing_core::dispatcher::Dispatch::new_span (4 samples, 7.02%)</title><rect x="47.3684%" y="501" width="7.0175%" height="15" fill="rgb(221,155,16)" fg:x="27" fg:w="4"/><text x="47.6184%" y="511.50">part2.exe..</text></g><g><title>part2.exe`tracing_core::dispatcher::Dispatch::subscriber (4 samples, 7.02%)</title><rect x="47.3684%" y="485" width="7.0175%" height="15" fill="rgb(215,215,53)" fg:x="27" fg:w="4"/><text x="47.6184%" y="495.50">part2.exe..</text></g><g><title>part2.exe`tracing_subscriber::layer::layered::impl$1::new_span&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;tracing_subscriber::registry::sharded::Registry,tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,std::io::stdio::Stdout (*)()&gt;,tracing_subscriber::registry::sharded::Registry&gt;(tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;tracing_subscriber::registry::sharded::Registry,tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,std::io::stdio::Stdout (*) (4 samples, 7.02%)</title><rect x="47.3684%" y="469" width="7.0175%" height="15" fill="rgb(223,4,10)" fg:x="27" fg:w="4"/><text x="47.6184%" y="479.50">part2.exe..</text></g><g><title>part2.exe`tracing_subscriber::fmt::fmt_layer::impl$11::on_new_span&lt;tracing_subscriber::registry::sharded::Registry,tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,std::io::stdio::Stdout (*)()&gt;(tracing_subscriber::fmt::fmt_layer::Layer&lt;tracing_subscriber::registry::sharded::Registry,tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,std::io::stdio::Stdout (*)()&gt;*, tracing_core::span::Attributes*, tracing_core::span::Id*, tracing_subscriber::layer::context::Context (4 samples, 7.02%)</title><rect x="47.3684%" y="453" width="7.0175%" height="15" fill="rgb(234,103,6)" fg:x="27" fg:w="4"/><text x="47.6184%" y="463.50">part2.exe..</text></g><g><title>part2.exe`tracing_subscriber::fmt::format::impl$8::format_fields (4 samples, 7.02%)</title><rect x="47.3684%" y="437" width="7.0175%" height="15" fill="rgb(227,97,0)" fg:x="27" fg:w="4"/><text x="47.6184%" y="447.50">part2.exe..</text></g><g><title>part2.exe`tracing_subscriber::fmt::format::impl$14::finish (4 samples, 7.02%)</title><rect x="47.3684%" y="421" width="7.0175%" height="15" fill="rgb(234,150,53)" fg:x="27" fg:w="4"/><text x="47.6184%" y="431.50">part2.exe..</text></g><g><title>part2.exe`tracing_core::span::Attributes::record(ref_mut$&lt;dyn$ (4 samples, 7.02%)</title><rect x="47.3684%" y="405" width="7.0175%" height="15" fill="rgb(228,201,54)" fg:x="27" fg:w="4"/><text x="47.6184%" y="415.50">part2.exe..</text></g><g><title>part2.exe`tracing_core::field::ValueSet::record(ref_mut$&lt;dyn$ (4 samples, 7.02%)</title><rect x="47.3684%" y="389" width="7.0175%" height="15" fill="rgb(222,22,37)" fg:x="27" fg:w="4"/><text x="47.6184%" y="399.50">part2.exe..</text></g><g><title>part2.exe`tracing_core::field::impl$16::record(ref$&lt;dyn$&lt;tracing_core::field::Value&gt; &gt;*, tracing_core::field::Field*, ref_mut$&lt;dyn$ (4 samples, 7.02%)</title><rect x="47.3684%" y="373" width="7.0175%" height="15" fill="rgb(237,53,32)" fg:x="27" fg:w="4"/><text x="47.6184%" y="383.50">part2.exe..</text></g><g><title>part2.exe`tracing_core::field::impl$16::record&lt;str$&gt;(ref$&lt;str$&gt;*, tracing_core::field::Field*, ref_mut$&lt;dyn$ (4 samples, 7.02%)</title><rect x="47.3684%" y="357" width="7.0175%" height="15" fill="rgb(233,25,53)" fg:x="27" fg:w="4"/><text x="47.6184%" y="367.50">part2.exe..</text></g><g><title>part2.exe`tracing_subscriber::fmt::format::impl$13::record_str(tracing_subscriber::fmt::format::DefaultVisitor*, tracing_core::field::Field*, ref$ (4 samples, 7.02%)</title><rect x="47.3684%" y="341" width="7.0175%" height="15" fill="rgb(210,40,34)" fg:x="27" fg:w="4"/><text x="47.6184%" y="351.50">part2.exe..</text></g><g><title>part2.exe`tracing_subscriber::fmt::format::impl$13::record_debug(tracing_subscriber::fmt::format::DefaultVisitor*, tracing_core::field::Field*, ref$&lt;dyn$ (4 samples, 7.02%)</title><rect x="47.3684%" y="325" width="7.0175%" height="15" fill="rgb(241,220,44)" fg:x="27" fg:w="4"/><text x="47.6184%" y="335.50">part2.exe..</text></g><g><title>part2.exe`tracing_subscriber::fmt::format::Writer::write_fmt (4 samples, 7.02%)</title><rect x="47.3684%" y="309" width="7.0175%" height="15" fill="rgb(235,28,35)" fg:x="27" fg:w="4"/><text x="47.6184%" y="319.50">part2.exe..</text></g><g><title>part2.exe`core::fmt::write (4 samples, 7.02%)</title><rect x="47.3684%" y="293" width="7.0175%" height="15" fill="rgb(210,56,17)" fg:x="27" fg:w="4"/><text x="47.6184%" y="303.50">part2.exe..</text></g><g><title>part2.exe`core::fmt::impl$14::fmt (4 samples, 7.02%)</title><rect x="47.3684%" y="277" width="7.0175%" height="15" fill="rgb(224,130,29)" fg:x="27" fg:w="4"/><text x="47.6184%" y="287.50">part2.exe..</text></g><g><title>part2.exe`core::str::iter::impl$5::next (1 samples, 1.75%)</title><rect x="52.6316%" y="261" width="1.7544%" height="15" fill="rgb(235,212,8)" fg:x="30" fg:w="1"/><text x="52.8816%" y="271.50"></text></g><g><title>part2.exe`core::str::iter::impl$0::next (1 samples, 1.75%)</title><rect x="52.6316%" y="245" width="1.7544%" height="15" fill="rgb(223,33,50)" fg:x="30" fg:w="1"/><text x="52.8816%" y="255.50"></text></g><g><title>part2.exe`core::str::validations::next_code_point (1 samples, 1.75%)</title><rect x="52.6316%" y="229" width="1.7544%" height="15" fill="rgb(219,149,13)" fg:x="30" fg:w="1"/><text x="52.8816%" y="239.50"></text></g><g><title>part2.exe`core::slice::iter::impl$181::next (1 samples, 1.75%)</title><rect x="52.6316%" y="213" width="1.7544%" height="15" fill="rgb(250,156,29)" fg:x="30" fg:w="1"/><text x="52.8816%" y="223.50"></text></g><g><title>part2.exe`core::ptr::non_null::impl$12::eq (1 samples, 1.75%)</title><rect x="52.6316%" y="197" width="1.7544%" height="15" fill="rgb(216,193,19)" fg:x="30" fg:w="1"/><text x="52.8816%" y="207.50"></text></g><g><title>part2.exe`std::io::stdio::_print (1 samples, 1.75%)</title><rect x="54.3860%" y="629" width="1.7544%" height="15" fill="rgb(216,135,14)" fg:x="31" fg:w="1"/><text x="54.6360%" y="639.50"></text></g><g><title>part2.exe`std::io::stdio::print_to (1 samples, 1.75%)</title><rect x="54.3860%" y="613" width="1.7544%" height="15" fill="rgb(241,47,5)" fg:x="31" fg:w="1"/><text x="54.6360%" y="623.50"></text></g><g><title>part2.exe`std::io::stdio::impl$12::write_fmt (1 samples, 1.75%)</title><rect x="54.3860%" y="597" width="1.7544%" height="15" fill="rgb(233,42,35)" fg:x="31" fg:w="1"/><text x="54.6360%" y="607.50"></text></g><g><title>part2.exe`std::io::Write::write_fmt (1 samples, 1.75%)</title><rect x="54.3860%" y="581" width="1.7544%" height="15" fill="rgb(231,13,6)" fg:x="31" fg:w="1"/><text x="54.6360%" y="591.50"></text></g><g><title>part2.exe`core::fmt::write (1 samples, 1.75%)</title><rect x="54.3860%" y="565" width="1.7544%" height="15" fill="rgb(207,181,40)" fg:x="31" fg:w="1"/><text x="54.6360%" y="575.50"></text></g><g><title>part2.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (1 samples, 1.75%)</title><rect x="54.3860%" y="549" width="1.7544%" height="15" fill="rgb(254,173,49)" fg:x="31" fg:w="1"/><text x="54.6360%" y="559.50"></text></g><g><title>`0x7FFC3F1CAA58 (28 samples, 49.12%)</title><rect x="8.7719%" y="869" width="49.1228%" height="15" fill="rgb(221,1,38)" fg:x="5" fg:w="28"/><text x="9.0219%" y="879.50">`0x7FFC3F1CAA58</text></g><g><title>`0x7FFC3DDE257D (28 samples, 49.12%)</title><rect x="8.7719%" y="853" width="49.1228%" height="15" fill="rgb(206,124,46)" fg:x="5" fg:w="28"/><text x="9.0219%" y="863.50">`0x7FFC3DDE257D</text></g><g><title>part2.exe`__scrt_common_main_seh() (18 samples, 31.58%)</title><rect x="26.3158%" y="837" width="31.5789%" height="15" fill="rgb(249,21,11)" fg:x="15" fg:w="18"/><text x="26.5658%" y="847.50">part2.exe`__scrt_common_main_seh()</text></g><g><title>part2.exe`invoke_main() (14 samples, 24.56%)</title><rect x="33.3333%" y="821" width="24.5614%" height="15" fill="rgb(222,201,40)" fg:x="19" fg:w="14"/><text x="33.5833%" y="831.50">part2.exe`invoke_main()</text></g><g><title>part2.exe`std::rt::lang_start&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; &gt;(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; (*) (14 samples, 24.56%)</title><rect x="33.3333%" y="805" width="24.5614%" height="15" fill="rgb(235,61,29)" fg:x="19" fg:w="14"/><text x="33.5833%" y="815.50">part2.exe`std::rt::lang_start&lt;enum2$&lt;co..</text></g><g><title>part2.exe`std::rt::lang_start_internal (14 samples, 24.56%)</title><rect x="33.3333%" y="789" width="24.5614%" height="15" fill="rgb(219,207,3)" fg:x="19" fg:w="14"/><text x="33.5833%" y="799.50">part2.exe`std::rt::lang_start_internal</text></g><g><title>part2.exe`std::panic::catch_unwind (14 samples, 24.56%)</title><rect x="33.3333%" y="773" width="24.5614%" height="15" fill="rgb(222,56,46)" fg:x="19" fg:w="14"/><text x="33.5833%" y="783.50">part2.exe`std::panic::catch_unwind</text></g><g><title>part2.exe`std::panicking::try (14 samples, 24.56%)</title><rect x="33.3333%" y="757" width="24.5614%" height="15" fill="rgb(239,76,54)" fg:x="19" fg:w="14"/><text x="33.5833%" y="767.50">part2.exe`std::panicking::try</text></g><g><title>part2.exe`std::panicking::try::do_call (14 samples, 24.56%)</title><rect x="33.3333%" y="741" width="24.5614%" height="15" fill="rgb(231,124,27)" fg:x="19" fg:w="14"/><text x="33.5833%" y="751.50">part2.exe`std::panicking::try::do_call</text></g><g><title>part2.exe`std::rt::lang_start_internal::closure$2 (14 samples, 24.56%)</title><rect x="33.3333%" y="725" width="24.5614%" height="15" fill="rgb(249,195,6)" fg:x="19" fg:w="14"/><text x="33.5833%" y="735.50">part2.exe`std::rt::lang_start_internal:..</text></g><g><title>part2.exe`std::panic::catch_unwind (14 samples, 24.56%)</title><rect x="33.3333%" y="709" width="24.5614%" height="15" fill="rgb(237,174,47)" fg:x="19" fg:w="14"/><text x="33.5833%" y="719.50">part2.exe`std::panic::catch_unwind</text></g><g><title>part2.exe`std::rt::lang_start::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; &gt;(std::rt::lang_start::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$ (14 samples, 24.56%)</title><rect x="33.3333%" y="693" width="24.5614%" height="15" fill="rgb(206,201,31)" fg:x="19" fg:w="14"/><text x="33.5833%" y="703.50">part2.exe`std::rt::lang_start::closure$..</text></g><g><title>part2.exe`std::process::impl$61::report(enum2$&lt;core::result::Result&lt;tuple$ (14 samples, 24.56%)</title><rect x="33.3333%" y="677" width="24.5614%" height="15" fill="rgb(231,57,52)" fg:x="19" fg:w="14"/><text x="33.5833%" y="687.50">part2.exe`std::process::impl$61::report..</text></g><g><title>part2.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; (*)(),enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; &gt;(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,miette::eyreish::Report&gt; &gt; (*) (14 samples, 24.56%)</title><rect x="33.3333%" y="661" width="24.5614%" height="15" fill="rgb(248,177,22)" fg:x="19" fg:w="14"/><text x="33.5833%" y="671.50">part2.exe`std::sys_common::backtrace::_..</text></g><g><title>part2.exe`part2::main (14 samples, 24.56%)</title><rect x="33.3333%" y="645" width="24.5614%" height="15" fill="rgb(215,211,37)" fg:x="19" fg:w="14"/><text x="33.5833%" y="655.50">part2.exe`part2::main</text></g><g><title>part2.exe`tracing_subscriber::fmt::init (1 samples, 1.75%)</title><rect x="56.1404%" y="629" width="1.7544%" height="15" fill="rgb(241,128,51)" fg:x="32" fg:w="1"/><text x="56.3904%" y="639.50"></text></g><g><title>part2.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt; &gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt; &gt; &gt;, ref$ (1 samples, 1.75%)</title><rect x="56.1404%" y="613" width="1.7544%" height="15" fill="rgb(227,165,31)" fg:x="32" fg:w="1"/><text x="56.3904%" y="623.50"></text></g><g><title>part2.exe`tracing_subscriber::fmt::try_init (1 samples, 1.75%)</title><rect x="56.1404%" y="597" width="1.7544%" height="15" fill="rgb(228,167,24)" fg:x="32" fg:w="1"/><text x="56.3904%" y="607.50"></text></g><g><title>part2.exe`tracing_subscriber::fmt::SubscriberBuilder&lt;tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,tracing_core::metadata::LevelFilter,std::io::stdio::Stdout (*)()&gt;::finish(tracing_subscriber::fmt::SubscriberBuilder&lt;tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,tracing_core::metadata::LevelFilter,std::io::stdio::Stdout (*) (1 samples, 1.75%)</title><rect x="56.1404%" y="581" width="1.7544%" height="15" fill="rgb(228,143,12)" fg:x="32" fg:w="1"/><text x="56.3904%" y="591.50"></text></g><g><title>part2.exe`tracing_subscriber::registry::sharded::impl$0::default (1 samples, 1.75%)</title><rect x="56.1404%" y="565" width="1.7544%" height="15" fill="rgb(249,149,8)" fg:x="32" fg:w="1"/><text x="56.3904%" y="575.50"></text></g><g><title>part2.exe`thread_local::ThreadLocal&lt;core::cell::RefCell&lt;tracing_subscriber::registry::stack::SpanStack&gt; &gt;::with_capacity&lt;core::cell::RefCell&lt;tracing_subscriber::registry::stack::SpanStack&gt; &gt; (1 samples, 1.75%)</title><rect x="56.1404%" y="549" width="1.7544%" height="15" fill="rgb(243,35,44)" fg:x="32" fg:w="1"/><text x="56.3904%" y="559.50"></text></g><g><title>`0x7FFC3F1E3E02 (1 samples, 1.75%)</title><rect x="57.8947%" y="853" width="1.7544%" height="15" fill="rgb(246,89,9)" fg:x="33" fg:w="1"/><text x="58.1447%" y="863.50"></text></g><g><title>`0x7FFC3F24CFF4 (1 samples, 1.75%)</title><rect x="59.6491%" y="821" width="1.7544%" height="15" fill="rgb(233,213,13)" fg:x="34" fg:w="1"/><text x="59.8991%" y="831.50"></text></g><g><title>`0x7FFC3F1A2944 (1 samples, 1.75%)</title><rect x="59.6491%" y="805" width="1.7544%" height="15" fill="rgb(233,141,41)" fg:x="34" fg:w="1"/><text x="59.8991%" y="815.50"></text></g><g><title>`0x7FFC3F1A28C5 (1 samples, 1.75%)</title><rect x="59.6491%" y="789" width="1.7544%" height="15" fill="rgb(239,167,4)" fg:x="34" fg:w="1"/><text x="59.8991%" y="799.50"></text></g><g><title>`0x7FFC3F2510F5 (1 samples, 1.75%)</title><rect x="59.6491%" y="773" width="1.7544%" height="15" fill="rgb(209,217,16)" fg:x="34" fg:w="1"/><text x="59.8991%" y="783.50"></text></g><g><title>`0x7FFC3F19D4B1 (1 samples, 1.75%)</title><rect x="59.6491%" y="757" width="1.7544%" height="15" fill="rgb(219,88,35)" fg:x="34" fg:w="1"/><text x="59.8991%" y="767.50"></text></g><g><title>`0x7FFC3F24D719 (1 samples, 1.75%)</title><rect x="61.4035%" y="821" width="1.7544%" height="15" fill="rgb(220,193,23)" fg:x="35" fg:w="1"/><text x="61.6535%" y="831.50"></text></g><g><title>`0x7FFC3F1EF5FA (1 samples, 1.75%)</title><rect x="61.4035%" y="805" width="1.7544%" height="15" fill="rgb(230,90,52)" fg:x="35" fg:w="1"/><text x="61.6535%" y="815.50"></text></g><g><title>`0x7FFC3F1A14E0 (1 samples, 1.75%)</title><rect x="61.4035%" y="789" width="1.7544%" height="15" fill="rgb(252,106,19)" fg:x="35" fg:w="1"/><text x="61.6535%" y="799.50"></text></g><g><title>`0x7FFC3F1A21CA (1 samples, 1.75%)</title><rect x="61.4035%" y="773" width="1.7544%" height="15" fill="rgb(206,74,20)" fg:x="35" fg:w="1"/><text x="61.6535%" y="783.50"></text></g><g><title>`0x7FFC3F1A2014 (1 samples, 1.75%)</title><rect x="61.4035%" y="757" width="1.7544%" height="15" fill="rgb(230,138,44)" fg:x="35" fg:w="1"/><text x="61.6535%" y="767.50"></text></g><g><title>`0x7FFC3F1A23FA (1 samples, 1.75%)</title><rect x="61.4035%" y="741" width="1.7544%" height="15" fill="rgb(235,182,43)" fg:x="35" fg:w="1"/><text x="61.6535%" y="751.50"></text></g><g><title>`0x7FFC3F1BB27E (1 samples, 1.75%)</title><rect x="61.4035%" y="725" width="1.7544%" height="15" fill="rgb(242,16,51)" fg:x="35" fg:w="1"/><text x="61.6535%" y="735.50"></text></g><g><title>`0x7FFC3F1BD4FC (1 samples, 1.75%)</title><rect x="61.4035%" y="709" width="1.7544%" height="15" fill="rgb(248,9,4)" fg:x="35" fg:w="1"/><text x="61.6535%" y="719.50"></text></g><g><title>`0x7FFC3F19F917 (1 samples, 1.75%)</title><rect x="61.4035%" y="693" width="1.7544%" height="15" fill="rgb(210,31,22)" fg:x="35" fg:w="1"/><text x="61.6535%" y="703.50"></text></g><g><title>`0x7FFC3F1A2CA5 (1 samples, 1.75%)</title><rect x="61.4035%" y="677" width="1.7544%" height="15" fill="rgb(239,54,39)" fg:x="35" fg:w="1"/><text x="61.6535%" y="687.50"></text></g><g><title>`0x7FFC3F1A2F31 (1 samples, 1.75%)</title><rect x="61.4035%" y="661" width="1.7544%" height="15" fill="rgb(230,99,41)" fg:x="35" fg:w="1"/><text x="61.6535%" y="671.50"></text></g><g><title>`0x7FFC3F1A1350 (1 samples, 1.75%)</title><rect x="61.4035%" y="645" width="1.7544%" height="15" fill="rgb(253,106,12)" fg:x="35" fg:w="1"/><text x="61.6535%" y="655.50"></text></g><g><title>`0x7FFC3F1BBF56 (1 samples, 1.75%)</title><rect x="61.4035%" y="629" width="1.7544%" height="15" fill="rgb(213,46,41)" fg:x="35" fg:w="1"/><text x="61.6535%" y="639.50"></text></g><g><title>`0x7FFC3F1AABC0 (1 samples, 1.75%)</title><rect x="61.4035%" y="613" width="1.7544%" height="15" fill="rgb(215,133,35)" fg:x="35" fg:w="1"/><text x="61.6535%" y="623.50"></text></g><g><title>`0x7FFC3F24D791 (1 samples, 1.75%)</title><rect x="63.1579%" y="821" width="1.7544%" height="15" fill="rgb(213,28,5)" fg:x="36" fg:w="1"/><text x="63.4079%" y="831.50"></text></g><g><title>`0x7FFC3F1C812A (1 samples, 1.75%)</title><rect x="63.1579%" y="805" width="1.7544%" height="15" fill="rgb(215,77,49)" fg:x="36" fg:w="1"/><text x="63.4079%" y="815.50"></text></g><g><title>`0x7FFC3F1C87EF (1 samples, 1.75%)</title><rect x="63.1579%" y="789" width="1.7544%" height="15" fill="rgb(248,100,22)" fg:x="36" fg:w="1"/><text x="63.4079%" y="799.50"></text></g><g><title>`0x7FFC3F1C8894 (1 samples, 1.75%)</title><rect x="63.1579%" y="773" width="1.7544%" height="15" fill="rgb(208,67,9)" fg:x="36" fg:w="1"/><text x="63.4079%" y="783.50"></text></g><g><title>`0x7FFC3F18E888 (1 samples, 1.75%)</title><rect x="63.1579%" y="757" width="1.7544%" height="15" fill="rgb(219,133,21)" fg:x="36" fg:w="1"/><text x="63.4079%" y="767.50"></text></g><g><title>`0x7FFC3F1C8371 (1 samples, 1.75%)</title><rect x="63.1579%" y="741" width="1.7544%" height="15" fill="rgb(246,46,29)" fg:x="36" fg:w="1"/><text x="63.4079%" y="751.50"></text></g><g><title>`0x7FFC3F1C845F (1 samples, 1.75%)</title><rect x="63.1579%" y="725" width="1.7544%" height="15" fill="rgb(246,185,52)" fg:x="36" fg:w="1"/><text x="63.4079%" y="735.50"></text></g><g><title>`0x7FFC3F1AC7BA (1 samples, 1.75%)</title><rect x="63.1579%" y="709" width="1.7544%" height="15" fill="rgb(252,136,11)" fg:x="36" fg:w="1"/><text x="63.4079%" y="719.50"></text></g><g><title>`0x7FFC3F1AD003 (1 samples, 1.75%)</title><rect x="63.1579%" y="693" width="1.7544%" height="15" fill="rgb(219,138,53)" fg:x="36" fg:w="1"/><text x="63.4079%" y="703.50"></text></g><g><title>`0x7FFC3F19C254 (1 samples, 1.75%)</title><rect x="64.9123%" y="725" width="1.7544%" height="15" fill="rgb(211,51,23)" fg:x="37" fg:w="1"/><text x="65.1623%" y="735.50"></text></g><g><title>`0x7FFC3F19C0CA (1 samples, 1.75%)</title><rect x="64.9123%" y="709" width="1.7544%" height="15" fill="rgb(247,221,28)" fg:x="37" fg:w="1"/><text x="65.1623%" y="719.50"></text></g><g><title>`0x7FFC3F19C4CC (1 samples, 1.75%)</title><rect x="64.9123%" y="693" width="1.7544%" height="15" fill="rgb(251,222,45)" fg:x="37" fg:w="1"/><text x="65.1623%" y="703.50"></text></g><g><title>`0x7FFC3F20F874 (1 samples, 1.75%)</title><rect x="64.9123%" y="677" width="1.7544%" height="15" fill="rgb(217,162,53)" fg:x="37" fg:w="1"/><text x="65.1623%" y="687.50"></text></g><g><title>`0x7FFC3F1946BB (1 samples, 1.75%)</title><rect x="66.6667%" y="709" width="1.7544%" height="15" fill="rgb(229,93,14)" fg:x="38" fg:w="1"/><text x="66.9167%" y="719.50"></text></g><g><title>`0x7FFC3F194906 (1 samples, 1.75%)</title><rect x="66.6667%" y="693" width="1.7544%" height="15" fill="rgb(209,67,49)" fg:x="38" fg:w="1"/><text x="66.9167%" y="703.50"></text></g><g><title>`0x7FFC3F1958C4 (1 samples, 1.75%)</title><rect x="66.6667%" y="677" width="1.7544%" height="15" fill="rgb(213,87,29)" fg:x="38" fg:w="1"/><text x="66.9167%" y="687.50"></text></g><g><title>`0x7FFC3F19CE29 (1 samples, 1.75%)</title><rect x="66.6667%" y="661" width="1.7544%" height="15" fill="rgb(205,151,52)" fg:x="38" fg:w="1"/><text x="66.9167%" y="671.50"></text></g><g><title>`0x7FFC3F19C3F8 (1 samples, 1.75%)</title><rect x="66.6667%" y="645" width="1.7544%" height="15" fill="rgb(253,215,39)" fg:x="38" fg:w="1"/><text x="66.9167%" y="655.50"></text></g><g><title>`0x7FFC3F1946BB (1 samples, 1.75%)</title><rect x="66.6667%" y="629" width="1.7544%" height="15" fill="rgb(221,220,41)" fg:x="38" fg:w="1"/><text x="66.9167%" y="639.50"></text></g><g><title>`0x7FFC3F194906 (1 samples, 1.75%)</title><rect x="66.6667%" y="613" width="1.7544%" height="15" fill="rgb(218,133,21)" fg:x="38" fg:w="1"/><text x="66.9167%" y="623.50"></text></g><g><title>`0x7FFC3F195BBA (1 samples, 1.75%)</title><rect x="66.6667%" y="597" width="1.7544%" height="15" fill="rgb(221,193,43)" fg:x="38" fg:w="1"/><text x="66.9167%" y="607.50"></text></g><g><title>`0x7FFC3F1988B6 (4 samples, 7.02%)</title><rect x="64.9123%" y="773" width="7.0175%" height="15" fill="rgb(240,128,52)" fg:x="37" fg:w="4"/><text x="65.1623%" y="783.50">`0x7FFC3F..</text></g><g><title>`0x7FFC3F19DDA9 (4 samples, 7.02%)</title><rect x="64.9123%" y="757" width="7.0175%" height="15" fill="rgb(253,114,12)" fg:x="37" fg:w="4"/><text x="65.1623%" y="767.50">`0x7FFC3F..</text></g><g><title>`0x7FFC3F19CE29 (4 samples, 7.02%)</title><rect x="64.9123%" y="741" width="7.0175%" height="15" fill="rgb(215,223,47)" fg:x="37" fg:w="4"/><text x="65.1623%" y="751.50">`0x7FFC3F..</text></g><g><title>`0x7FFC3F19C3F8 (3 samples, 5.26%)</title><rect x="66.6667%" y="725" width="5.2632%" height="15" fill="rgb(248,225,23)" fg:x="38" fg:w="3"/><text x="66.9167%" y="735.50">`0x7FF..</text></g><g><title>`0x7FFC3F194774 (2 samples, 3.51%)</title><rect x="68.4211%" y="709" width="3.5088%" height="15" fill="rgb(250,108,0)" fg:x="39" fg:w="2"/><text x="68.6711%" y="719.50">`0x..</text></g><g><title>`0x7FFC3F193C63 (2 samples, 3.51%)</title><rect x="68.4211%" y="693" width="3.5088%" height="15" fill="rgb(228,208,7)" fg:x="39" fg:w="2"/><text x="68.6711%" y="703.50">`0x..</text></g><g><title>`0x7FFC3C5DCA03 (1 samples, 1.75%)</title><rect x="71.9298%" y="661" width="1.7544%" height="15" fill="rgb(244,45,10)" fg:x="41" fg:w="1"/><text x="72.1798%" y="671.50"></text></g><g><title>`0x7FFC3C5DC322 (1 samples, 1.75%)</title><rect x="71.9298%" y="645" width="1.7544%" height="15" fill="rgb(207,125,25)" fg:x="41" fg:w="1"/><text x="72.1798%" y="655.50"></text></g><g><title>`0x7FFC3F1BAFE2 (1 samples, 1.75%)</title><rect x="71.9298%" y="629" width="1.7544%" height="15" fill="rgb(210,195,18)" fg:x="41" fg:w="1"/><text x="72.1798%" y="639.50"></text></g><g><title>`0x7FFC3F1BAD9D (1 samples, 1.75%)</title><rect x="71.9298%" y="613" width="1.7544%" height="15" fill="rgb(249,80,12)" fg:x="41" fg:w="1"/><text x="72.1798%" y="623.50"></text></g><g><title>`0x7FFC3F2107A4 (1 samples, 1.75%)</title><rect x="71.9298%" y="597" width="1.7544%" height="15" fill="rgb(221,65,9)" fg:x="41" fg:w="1"/><text x="72.1798%" y="607.50"></text></g><g><title>`0x7FFC3C5DC68D (2 samples, 3.51%)</title><rect x="71.9298%" y="677" width="3.5088%" height="15" fill="rgb(235,49,36)" fg:x="41" fg:w="2"/><text x="72.1798%" y="687.50">`0x..</text></g><g><title>`0x7FFC3C5DCC5B (1 samples, 1.75%)</title><rect x="73.6842%" y="661" width="1.7544%" height="15" fill="rgb(225,32,20)" fg:x="42" fg:w="1"/><text x="73.9342%" y="671.50"></text></g><g><title>`0x7FFC3C610A47 (1 samples, 1.75%)</title><rect x="73.6842%" y="645" width="1.7544%" height="15" fill="rgb(215,141,46)" fg:x="42" fg:w="1"/><text x="73.9342%" y="655.50"></text></g><g><title>`0x7FFC3C610861 (1 samples, 1.75%)</title><rect x="73.6842%" y="629" width="1.7544%" height="15" fill="rgb(250,160,47)" fg:x="42" fg:w="1"/><text x="73.9342%" y="639.50"></text></g><g><title>`0x7FFC3F20F454 (1 samples, 1.75%)</title><rect x="73.6842%" y="613" width="1.7544%" height="15" fill="rgb(216,222,40)" fg:x="42" fg:w="1"/><text x="73.9342%" y="623.50"></text></g><g><title>`0x7FFC3F24E5BF (7 samples, 12.28%)</title><rect x="64.9123%" y="821" width="12.2807%" height="15" fill="rgb(234,217,39)" fg:x="37" fg:w="7"/><text x="65.1623%" y="831.50">`0x7FFC3F24E5BF</text></g><g><title>`0x7FFC3F19A25A (7 samples, 12.28%)</title><rect x="64.9123%" y="805" width="12.2807%" height="15" fill="rgb(207,178,40)" fg:x="37" fg:w="7"/><text x="65.1623%" y="815.50">`0x7FFC3F19A25A</text></g><g><title>`0x7FFC3F188CAC (7 samples, 12.28%)</title><rect x="64.9123%" y="789" width="12.2807%" height="15" fill="rgb(221,136,13)" fg:x="37" fg:w="7"/><text x="65.1623%" y="799.50">`0x7FFC3F188CAC</text></g><g><title>`0x7FFC3F198940 (3 samples, 5.26%)</title><rect x="71.9298%" y="773" width="5.2632%" height="15" fill="rgb(249,199,10)" fg:x="41" fg:w="3"/><text x="72.1798%" y="783.50">`0x7FF..</text></g><g><title>`0x7FFC3F19D62D (3 samples, 5.26%)</title><rect x="71.9298%" y="757" width="5.2632%" height="15" fill="rgb(249,222,13)" fg:x="41" fg:w="3"/><text x="72.1798%" y="767.50">`0x7FF..</text></g><g><title>`0x7FFC3F1DCE70 (3 samples, 5.26%)</title><rect x="71.9298%" y="741" width="5.2632%" height="15" fill="rgb(244,185,38)" fg:x="41" fg:w="3"/><text x="72.1798%" y="751.50">`0x7FF..</text></g><g><title>`0x7FFC3F1DCDFE (3 samples, 5.26%)</title><rect x="71.9298%" y="725" width="5.2632%" height="15" fill="rgb(236,202,9)" fg:x="41" fg:w="3"/><text x="72.1798%" y="735.50">`0x7FF..</text></g><g><title>`0x7FFC3F1DD04D (3 samples, 5.26%)</title><rect x="71.9298%" y="709" width="5.2632%" height="15" fill="rgb(250,229,37)" fg:x="41" fg:w="3"/><text x="72.1798%" y="719.50">`0x7FF..</text></g><g><title>`0x7FFC3F19869F (3 samples, 5.26%)</title><rect x="71.9298%" y="693" width="5.2632%" height="15" fill="rgb(206,174,23)" fg:x="41" fg:w="3"/><text x="72.1798%" y="703.50">`0x7FF..</text></g><g><title>`0x7FFC3C5DC763 (1 samples, 1.75%)</title><rect x="75.4386%" y="677" width="1.7544%" height="15" fill="rgb(211,33,43)" fg:x="43" fg:w="1"/><text x="75.6886%" y="687.50"></text></g><g><title>`0x7FFC3C5DD413 (1 samples, 1.75%)</title><rect x="75.4386%" y="661" width="1.7544%" height="15" fill="rgb(245,58,50)" fg:x="43" fg:w="1"/><text x="75.6886%" y="671.50"></text></g><g><title>`0x7FFC3C5DC2CA (1 samples, 1.75%)</title><rect x="75.4386%" y="645" width="1.7544%" height="15" fill="rgb(244,68,36)" fg:x="43" fg:w="1"/><text x="75.6886%" y="655.50"></text></g><g><title>`0x7FFC3C5B0C66 (1 samples, 1.75%)</title><rect x="75.4386%" y="629" width="1.7544%" height="15" fill="rgb(232,229,15)" fg:x="43" fg:w="1"/><text x="75.6886%" y="639.50"></text></g><g><title>`0x7FFC3C5B0A7B (1 samples, 1.75%)</title><rect x="75.4386%" y="613" width="1.7544%" height="15" fill="rgb(254,30,23)" fg:x="43" fg:w="1"/><text x="75.6886%" y="623.50"></text></g><g><title>`0x7FFC3C5DC492 (1 samples, 1.75%)</title><rect x="75.4386%" y="597" width="1.7544%" height="15" fill="rgb(235,160,14)" fg:x="43" fg:w="1"/><text x="75.6886%" y="607.50"></text></g><g><title>`0x7FFC3C5DFB35 (1 samples, 1.75%)</title><rect x="75.4386%" y="581" width="1.7544%" height="15" fill="rgb(212,155,44)" fg:x="43" fg:w="1"/><text x="75.6886%" y="591.50"></text></g><g><title>`0x7FFC3F210A64 (1 samples, 1.75%)</title><rect x="75.4386%" y="565" width="1.7544%" height="15" fill="rgb(226,2,50)" fg:x="43" fg:w="1"/><text x="75.6886%" y="575.50"></text></g><g><title>`0x7FFC3F24E669 (1 samples, 1.75%)</title><rect x="77.1930%" y="821" width="1.7544%" height="15" fill="rgb(234,177,6)" fg:x="44" fg:w="1"/><text x="77.4430%" y="831.50"></text></g><g><title>`0x7FFC3F1885EC (1 samples, 1.75%)</title><rect x="77.1930%" y="805" width="1.7544%" height="15" fill="rgb(217,24,9)" fg:x="44" fg:w="1"/><text x="77.4430%" y="815.50"></text></g><g><title>`0x7FFC3F19B8E1 (1 samples, 1.75%)</title><rect x="77.1930%" y="789" width="1.7544%" height="15" fill="rgb(220,13,46)" fg:x="44" fg:w="1"/><text x="77.4430%" y="799.50"></text></g><g><title>`0x7FFC3F19B9F7 (1 samples, 1.75%)</title><rect x="77.1930%" y="773" width="1.7544%" height="15" fill="rgb(239,221,27)" fg:x="44" fg:w="1"/><text x="77.4430%" y="783.50"></text></g><g><title>`0x7FFC3F192EF3 (1 samples, 1.75%)</title><rect x="77.1930%" y="757" width="1.7544%" height="15" fill="rgb(222,198,25)" fg:x="44" fg:w="1"/><text x="77.4430%" y="767.50"></text></g><g><title>`0x7FFC3F24E67C (1 samples, 1.75%)</title><rect x="78.9474%" y="821" width="1.7544%" height="15" fill="rgb(211,99,13)" fg:x="45" fg:w="1"/><text x="79.1974%" y="831.50"></text></g><g><title>`0x7FFC3F17984A (1 samples, 1.75%)</title><rect x="78.9474%" y="805" width="1.7544%" height="15" fill="rgb(232,111,31)" fg:x="45" fg:w="1"/><text x="79.1974%" y="815.50"></text></g><g><title>`0x7FFC3F20F554 (1 samples, 1.75%)</title><rect x="78.9474%" y="789" width="1.7544%" height="15" fill="rgb(245,82,37)" fg:x="45" fg:w="1"/><text x="79.1974%" y="799.50"></text></g><g><title>`0x7FFC3F19C254 (1 samples, 1.75%)</title><rect x="80.7018%" y="741" width="1.7544%" height="15" fill="rgb(227,149,46)" fg:x="46" fg:w="1"/><text x="80.9518%" y="751.50"></text></g><g><title>`0x7FFC3F19C0CA (1 samples, 1.75%)</title><rect x="80.7018%" y="725" width="1.7544%" height="15" fill="rgb(218,36,50)" fg:x="46" fg:w="1"/><text x="80.9518%" y="735.50"></text></g><g><title>`0x7FFC3F19C4CC (1 samples, 1.75%)</title><rect x="80.7018%" y="709" width="1.7544%" height="15" fill="rgb(226,80,48)" fg:x="46" fg:w="1"/><text x="80.9518%" y="719.50"></text></g><g><title>`0x7FFC3F20F874 (1 samples, 1.75%)</title><rect x="80.7018%" y="693" width="1.7544%" height="15" fill="rgb(238,224,15)" fg:x="46" fg:w="1"/><text x="80.9518%" y="703.50"></text></g><g><title>`0x7FFC3F1948D0 (1 samples, 1.75%)</title><rect x="82.4561%" y="709" width="1.7544%" height="15" fill="rgb(241,136,10)" fg:x="47" fg:w="1"/><text x="82.7061%" y="719.50"></text></g><g><title>`0x7FFC3F194AEC (1 samples, 1.75%)</title><rect x="82.4561%" y="693" width="1.7544%" height="15" fill="rgb(208,32,45)" fg:x="47" fg:w="1"/><text x="82.7061%" y="703.50"></text></g><g><title>`0x7FFC3F1958C4 (2 samples, 3.51%)</title><rect x="84.2105%" y="693" width="3.5088%" height="15" fill="rgb(207,135,9)" fg:x="48" fg:w="2"/><text x="84.4605%" y="703.50">`0x..</text></g><g><title>`0x7FFC3F19CE29 (2 samples, 3.51%)</title><rect x="84.2105%" y="677" width="3.5088%" height="15" fill="rgb(206,86,44)" fg:x="48" fg:w="2"/><text x="84.4605%" y="687.50">`0x..</text></g><g><title>`0x7FFC3F19C254 (2 samples, 3.51%)</title><rect x="84.2105%" y="661" width="3.5088%" height="15" fill="rgb(245,177,15)" fg:x="48" fg:w="2"/><text x="84.4605%" y="671.50">`0x..</text></g><g><title>`0x7FFC3F19C0CA (2 samples, 3.51%)</title><rect x="84.2105%" y="645" width="3.5088%" height="15" fill="rgb(206,64,50)" fg:x="48" fg:w="2"/><text x="84.4605%" y="655.50">`0x..</text></g><g><title>`0x7FFC3F19C4CC (2 samples, 3.51%)</title><rect x="84.2105%" y="629" width="3.5088%" height="15" fill="rgb(234,36,40)" fg:x="48" fg:w="2"/><text x="84.4605%" y="639.50">`0x..</text></g><g><title>`0x7FFC3F20F874 (2 samples, 3.51%)</title><rect x="84.2105%" y="613" width="3.5088%" height="15" fill="rgb(213,64,8)" fg:x="48" fg:w="2"/><text x="84.4605%" y="623.50">`0x..</text></g><g><title>`0x7FFC3F1946BB (4 samples, 7.02%)</title><rect x="82.4561%" y="725" width="7.0175%" height="15" fill="rgb(210,75,36)" fg:x="47" fg:w="4"/><text x="82.7061%" y="735.50">`0x7FFC3F..</text></g><g><title>`0x7FFC3F194906 (3 samples, 5.26%)</title><rect x="84.2105%" y="709" width="5.2632%" height="15" fill="rgb(229,88,21)" fg:x="48" fg:w="3"/><text x="84.4605%" y="719.50">`0x7FF..</text></g><g><title>`0x7FFC3F195C57 (1 samples, 1.75%)</title><rect x="87.7193%" y="693" width="1.7544%" height="15" fill="rgb(252,204,47)" fg:x="50" fg:w="1"/><text x="87.9693%" y="703.50"></text></g><g><title>`0x7FFC3F1995E5 (1 samples, 1.75%)</title><rect x="87.7193%" y="677" width="1.7544%" height="15" fill="rgb(208,77,27)" fg:x="50" fg:w="1"/><text x="87.9693%" y="687.50"></text></g><g><title>`0x7FFC3F24E8EF (6 samples, 10.53%)</title><rect x="80.7018%" y="821" width="10.5263%" height="15" fill="rgb(221,76,26)" fg:x="46" fg:w="6"/><text x="80.9518%" y="831.50">`0x7FFC3F24E8EF</text></g><g><title>`0x7FFC3F1946BB (6 samples, 10.53%)</title><rect x="80.7018%" y="805" width="10.5263%" height="15" fill="rgb(225,139,18)" fg:x="46" fg:w="6"/><text x="80.9518%" y="815.50">`0x7FFC3F1946BB</text></g><g><title>`0x7FFC3F194906 (6 samples, 10.53%)</title><rect x="80.7018%" y="789" width="10.5263%" height="15" fill="rgb(230,137,11)" fg:x="46" fg:w="6"/><text x="80.9518%" y="799.50">`0x7FFC3F194906</text></g><g><title>`0x7FFC3F1958C4 (6 samples, 10.53%)</title><rect x="80.7018%" y="773" width="10.5263%" height="15" fill="rgb(212,28,1)" fg:x="46" fg:w="6"/><text x="80.9518%" y="783.50">`0x7FFC3F1958C4</text></g><g><title>`0x7FFC3F19CE29 (6 samples, 10.53%)</title><rect x="80.7018%" y="757" width="10.5263%" height="15" fill="rgb(248,164,17)" fg:x="46" fg:w="6"/><text x="80.9518%" y="767.50">`0x7FFC3F19CE29</text></g><g><title>`0x7FFC3F19C3F8 (5 samples, 8.77%)</title><rect x="82.4561%" y="741" width="8.7719%" height="15" fill="rgb(222,171,42)" fg:x="47" fg:w="5"/><text x="82.7061%" y="751.50">`0x7FFC3F19C..</text></g><g><title>`0x7FFC3F194749 (1 samples, 1.75%)</title><rect x="89.4737%" y="725" width="1.7544%" height="15" fill="rgb(243,84,45)" fg:x="51" fg:w="1"/><text x="89.7237%" y="735.50"></text></g><g><title>`0x7FFC3F1E2EEF (1 samples, 1.75%)</title><rect x="89.4737%" y="709" width="1.7544%" height="15" fill="rgb(252,49,23)" fg:x="51" fg:w="1"/><text x="89.7237%" y="719.50"></text></g><g><title>`0x7FFC3F1A4D44 (1 samples, 1.75%)</title><rect x="89.4737%" y="693" width="1.7544%" height="15" fill="rgb(215,19,7)" fg:x="51" fg:w="1"/><text x="89.7237%" y="703.50"></text></g><g><title>`0x7FFC3F1A4EE6 (1 samples, 1.75%)</title><rect x="89.4737%" y="677" width="1.7544%" height="15" fill="rgb(238,81,41)" fg:x="51" fg:w="1"/><text x="89.7237%" y="687.50"></text></g><g><title>`0x7FFC3F2122E4 (1 samples, 1.75%)</title><rect x="89.4737%" y="661" width="1.7544%" height="15" fill="rgb(210,199,37)" fg:x="51" fg:w="1"/><text x="89.7237%" y="671.50"></text></g><g><title>`0x7FFC3BE7A067 (1 samples, 1.75%)</title><rect x="91.2281%" y="741" width="1.7544%" height="15" fill="rgb(244,192,49)" fg:x="52" fg:w="1"/><text x="91.4781%" y="751.50"></text></g><g><title>`0x7FFC3BE735BC (1 samples, 1.75%)</title><rect x="91.2281%" y="725" width="1.7544%" height="15" fill="rgb(226,211,11)" fg:x="52" fg:w="1"/><text x="91.4781%" y="735.50"></text></g><g><title>`0x7FFC3BE73839 (1 samples, 1.75%)</title><rect x="91.2281%" y="709" width="1.7544%" height="15" fill="rgb(236,162,54)" fg:x="52" fg:w="1"/><text x="91.4781%" y="719.50"></text></g><g><title>`0x7FFC3BE73953 (1 samples, 1.75%)</title><rect x="91.2281%" y="693" width="1.7544%" height="15" fill="rgb(220,229,9)" fg:x="52" fg:w="1"/><text x="91.4781%" y="703.50"></text></g><g><title>`0x7FFC3BE76413 (1 samples, 1.75%)</title><rect x="91.2281%" y="677" width="1.7544%" height="15" fill="rgb(250,87,22)" fg:x="52" fg:w="1"/><text x="91.4781%" y="687.50"></text></g><g><title>`0x7FFC3F20F454 (1 samples, 1.75%)</title><rect x="91.2281%" y="661" width="1.7544%" height="15" fill="rgb(239,43,17)" fg:x="52" fg:w="1"/><text x="91.4781%" y="671.50"></text></g><g><title>`0x7FFC3F1DCDFE (2 samples, 3.51%)</title><rect x="91.2281%" y="789" width="3.5088%" height="15" fill="rgb(231,177,25)" fg:x="52" fg:w="2"/><text x="91.4781%" y="799.50">`0x..</text></g><g><title>`0x7FFC3F1DD04D (2 samples, 3.51%)</title><rect x="91.2281%" y="773" width="3.5088%" height="15" fill="rgb(219,179,1)" fg:x="52" fg:w="2"/><text x="91.4781%" y="783.50">`0x..</text></g><g><title>`0x7FFC3F19869F (2 samples, 3.51%)</title><rect x="91.2281%" y="757" width="3.5088%" height="15" fill="rgb(238,219,53)" fg:x="52" fg:w="2"/><text x="91.4781%" y="767.50">`0x..</text></g><g><title>`0x7FFC3E564829 (1 samples, 1.75%)</title><rect x="92.9825%" y="741" width="1.7544%" height="15" fill="rgb(232,167,36)" fg:x="53" fg:w="1"/><text x="93.2325%" y="751.50"></text></g><g><title>`0x7FFC3E564908 (1 samples, 1.75%)</title><rect x="92.9825%" y="725" width="1.7544%" height="15" fill="rgb(244,19,51)" fg:x="53" fg:w="1"/><text x="93.2325%" y="735.50"></text></g><g><title>`0x7FFC3E5743A6 (1 samples, 1.75%)</title><rect x="92.9825%" y="709" width="1.7544%" height="15" fill="rgb(224,6,22)" fg:x="53" fg:w="1"/><text x="93.2325%" y="719.50"></text></g><g><title>`0x7FFC3E574BB1 (1 samples, 1.75%)</title><rect x="92.9825%" y="693" width="1.7544%" height="15" fill="rgb(224,145,5)" fg:x="53" fg:w="1"/><text x="93.2325%" y="703.50"></text></g><g><title>`0x7FFC3F1A14E0 (1 samples, 1.75%)</title><rect x="92.9825%" y="677" width="1.7544%" height="15" fill="rgb(234,130,49)" fg:x="53" fg:w="1"/><text x="93.2325%" y="687.50"></text></g><g><title>`0x7FFC3F1A21CA (1 samples, 1.75%)</title><rect x="92.9825%" y="661" width="1.7544%" height="15" fill="rgb(254,6,2)" fg:x="53" fg:w="1"/><text x="93.2325%" y="671.50"></text></g><g><title>`0x7FFC3F1A2057 (1 samples, 1.75%)</title><rect x="92.9825%" y="645" width="1.7544%" height="15" fill="rgb(208,96,46)" fg:x="53" fg:w="1"/><text x="93.2325%" y="655.50"></text></g><g><title>`0x7FFC3F212DC4 (1 samples, 1.75%)</title><rect x="92.9825%" y="629" width="1.7544%" height="15" fill="rgb(239,3,39)" fg:x="53" fg:w="1"/><text x="93.2325%" y="639.50"></text></g><g><title>`0x7FFC3CDB7853 (1 samples, 1.75%)</title><rect x="94.7368%" y="725" width="1.7544%" height="15" fill="rgb(233,210,1)" fg:x="54" fg:w="1"/><text x="94.9868%" y="735.50"></text></g><g><title>`0x7FFC3CDB816A (1 samples, 1.75%)</title><rect x="94.7368%" y="709" width="1.7544%" height="15" fill="rgb(244,137,37)" fg:x="54" fg:w="1"/><text x="94.9868%" y="719.50"></text></g><g><title>`0x7FFC3CDC7869 (1 samples, 1.75%)</title><rect x="94.7368%" y="693" width="1.7544%" height="15" fill="rgb(240,136,2)" fg:x="54" fg:w="1"/><text x="94.9868%" y="703.50"></text></g><g><title>`0x7FFC3CDC78B8 (1 samples, 1.75%)</title><rect x="94.7368%" y="677" width="1.7544%" height="15" fill="rgb(239,18,37)" fg:x="54" fg:w="1"/><text x="94.9868%" y="687.50"></text></g><g><title>`0x7FFC3CDA6A71 (1 samples, 1.75%)</title><rect x="94.7368%" y="661" width="1.7544%" height="15" fill="rgb(218,185,22)" fg:x="54" fg:w="1"/><text x="94.9868%" y="671.50"></text></g><g><title>`0x7FFC3CDA5E7C (1 samples, 1.75%)</title><rect x="94.7368%" y="645" width="1.7544%" height="15" fill="rgb(225,218,4)" fg:x="54" fg:w="1"/><text x="94.9868%" y="655.50"></text></g><g><title>`0x7FFC3D117C2F (1 samples, 1.75%)</title><rect x="96.4912%" y="725" width="1.7544%" height="15" fill="rgb(230,182,32)" fg:x="55" fg:w="1"/><text x="96.7412%" y="735.50"></text></g><g><title>`0x7FFC3D1339A2 (1 samples, 1.75%)</title><rect x="96.4912%" y="709" width="1.7544%" height="15" fill="rgb(242,56,43)" fg:x="55" fg:w="1"/><text x="96.7412%" y="719.50"></text></g><g><title>`0x7FFC3D133B20 (1 samples, 1.75%)</title><rect x="96.4912%" y="693" width="1.7544%" height="15" fill="rgb(233,99,24)" fg:x="55" fg:w="1"/><text x="96.7412%" y="703.50"></text></g><g><title>`0x7FFC3D12CD6B (1 samples, 1.75%)</title><rect x="96.4912%" y="677" width="1.7544%" height="15" fill="rgb(234,209,42)" fg:x="55" fg:w="1"/><text x="96.7412%" y="687.50"></text></g><g><title>`0x7FFC3D12CB80 (1 samples, 1.75%)</title><rect x="96.4912%" y="661" width="1.7544%" height="15" fill="rgb(227,7,12)" fg:x="55" fg:w="1"/><text x="96.7412%" y="671.50"></text></g><g><title>`0x7FFC3F1ACD59 (1 samples, 1.75%)</title><rect x="96.4912%" y="645" width="1.7544%" height="15" fill="rgb(245,203,43)" fg:x="55" fg:w="1"/><text x="96.7412%" y="655.50"></text></g><g><title>`0x7FFC3F1AFA38 (1 samples, 1.75%)</title><rect x="96.4912%" y="629" width="1.7544%" height="15" fill="rgb(238,205,33)" fg:x="55" fg:w="1"/><text x="96.7412%" y="639.50"></text></g><g><title>`0x7FFC3F1B9FDB (1 samples, 1.75%)</title><rect x="96.4912%" y="613" width="1.7544%" height="15" fill="rgb(231,56,7)" fg:x="55" fg:w="1"/><text x="96.7412%" y="623.50"></text></g><g><title>`0x7FFC3F1B94F8 (1 samples, 1.75%)</title><rect x="96.4912%" y="597" width="1.7544%" height="15" fill="rgb(244,186,29)" fg:x="55" fg:w="1"/><text x="96.7412%" y="607.50"></text></g><g><title>`0x7FFC3F1BA116 (1 samples, 1.75%)</title><rect x="96.4912%" y="581" width="1.7544%" height="15" fill="rgb(234,111,31)" fg:x="55" fg:w="1"/><text x="96.7412%" y="591.50"></text></g><g><title>`0x7FFC3F1ACD59 (1 samples, 1.75%)</title><rect x="96.4912%" y="565" width="1.7544%" height="15" fill="rgb(241,149,10)" fg:x="55" fg:w="1"/><text x="96.7412%" y="575.50"></text></g><g><title>`0x7FFC3F1AF738 (1 samples, 1.75%)</title><rect x="96.4912%" y="549" width="1.7544%" height="15" fill="rgb(249,206,44)" fg:x="55" fg:w="1"/><text x="96.7412%" y="559.50"></text></g><g><title>`0x7FFC3F1B57DB (1 samples, 1.75%)</title><rect x="96.4912%" y="533" width="1.7544%" height="15" fill="rgb(251,153,30)" fg:x="55" fg:w="1"/><text x="96.7412%" y="543.50"></text></g><g><title>`0x7FFC3F1B5C25 (1 samples, 1.75%)</title><rect x="96.4912%" y="517" width="1.7544%" height="15" fill="rgb(239,152,38)" fg:x="55" fg:w="1"/><text x="96.7412%" y="527.50"></text></g><g><title>`0x7FFC3F1B5D75 (1 samples, 1.75%)</title><rect x="96.4912%" y="501" width="1.7544%" height="15" fill="rgb(249,139,47)" fg:x="55" fg:w="1"/><text x="96.7412%" y="511.50"></text></g><g><title>all (57 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(244,64,35)" fg:x="0" fg:w="57"/><text x="0.2500%" y="895.50"></text></g><g><title>`0x7FFC3F1E3DDE (24 samples, 42.11%)</title><rect x="57.8947%" y="869" width="42.1053%" height="15" fill="rgb(216,46,15)" fg:x="33" fg:w="24"/><text x="58.1447%" y="879.50">`0x7FFC3F1E3DDE</text></g><g><title>`0x7FFC3F1E3EB3 (23 samples, 40.35%)</title><rect x="59.6491%" y="853" width="40.3509%" height="15" fill="rgb(250,74,19)" fg:x="34" fg:w="23"/><text x="59.8991%" y="863.50">`0x7FFC3F1E3EB3</text></g><g><title>`0x7FFC3F23A184 (23 samples, 40.35%)</title><rect x="59.6491%" y="837" width="40.3509%" height="15" fill="rgb(249,42,33)" fg:x="34" fg:w="23"/><text x="59.8991%" y="847.50">`0x7FFC3F23A184</text></g><g><title>`0x7FFC3F24EA75 (5 samples, 8.77%)</title><rect x="91.2281%" y="821" width="8.7719%" height="15" fill="rgb(242,149,17)" fg:x="52" fg:w="5"/><text x="91.4781%" y="831.50">`0x7FFC3F24E..</text></g><g><title>`0x7FFC3F1DCE70 (5 samples, 8.77%)</title><rect x="91.2281%" y="805" width="8.7719%" height="15" fill="rgb(244,29,21)" fg:x="52" fg:w="5"/><text x="91.4781%" y="815.50">`0x7FFC3F1DC..</text></g><g><title>`0x7FFC3F1DCE70 (3 samples, 5.26%)</title><rect x="94.7368%" y="789" width="5.2632%" height="15" fill="rgb(220,130,37)" fg:x="54" fg:w="3"/><text x="94.9868%" y="799.50">`0x7FF..</text></g><g><title>`0x7FFC3F1DCDFE (3 samples, 5.26%)</title><rect x="94.7368%" y="773" width="5.2632%" height="15" fill="rgb(211,67,2)" fg:x="54" fg:w="3"/><text x="94.9868%" y="783.50">`0x7FF..</text></g><g><title>`0x7FFC3F1DD04D (3 samples, 5.26%)</title><rect x="94.7368%" y="757" width="5.2632%" height="15" fill="rgb(235,68,52)" fg:x="54" fg:w="3"/><text x="94.9868%" y="767.50">`0x7FF..</text></g><g><title>`0x7FFC3F19869F (3 samples, 5.26%)</title><rect x="94.7368%" y="741" width="5.2632%" height="15" fill="rgb(246,142,3)" fg:x="54" fg:w="3"/><text x="94.9868%" y="751.50">`0x7FF..</text></g><g><title>`0x7FFC3D117C3F (1 samples, 1.75%)</title><rect x="98.2456%" y="725" width="1.7544%" height="15" fill="rgb(241,25,7)" fg:x="56" fg:w="1"/><text x="98.4956%" y="735.50"></text></g><g><title>`0x7FFC3D14D8A3 (1 samples, 1.75%)</title><rect x="98.2456%" y="709" width="1.7544%" height="15" fill="rgb(242,119,39)" fg:x="56" fg:w="1"/><text x="98.4956%" y="719.50"></text></g><g><title>`0x7FFC3D17AD68 (1 samples, 1.75%)</title><rect x="98.2456%" y="693" width="1.7544%" height="15" fill="rgb(241,98,45)" fg:x="56" fg:w="1"/><text x="98.4956%" y="703.50"></text></g></svg></svg>